%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: LDGM 9.pdf
%%Creator: Adobe Acrobat 9.0.0
%%For: RSPC
%%CreationDate: 2016/4/11, 16:58:51
%%BoundingBox: -1 0 447 1001
%%HiResBoundingBox: 0 0 446.4000 1000.2500
%%CropBox: 0 0 446.4000 1000.2500
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1275 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c041 52.342996, 2008/05/07-20:48:00        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:pdfaid="http://www.aiim.org/pdfa/ns/id/"
   pdf:Producer="Microsoft® Visio® 2010"
   pdf:Keywords=""
   dc:format="application/pdf"
   xmp:CreatorTool="Microsoft® Visio® 2010"
   xmp:CreateDate="2016-04-11T16:57:54+08:00"
   xmp:ModifyDate="2016-04-11T16:58:16+08:00"
   xmp:MetadataDate="2016-04-11T16:58:16+08:00"
   xmpMM:DocumentID="uuid:4E89763C-447A-47B6-9CA7-51D4FE93357A"
   xmpMM:InstanceID="uuid:8eea2d50-2003-49d4-800f-47579b2fcc60"
   pdfaid:part="1"
   pdfaid:conformance="A">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>RSPC</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -1000.25 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
-7.62939e-6 0 mo
-7.62939e-6 1000.25 li
446.4 1000.25 li
446.4 0 li
cp
clp
[1 0 0 1 -86.4 0 ]ct
3 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
317.33 868.78 mo
317.33 874.56 li
317.33 881.14 li
317.33 888.51 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.136538 .123054 .126659 rgb
@
322.85 882.99 mo
317.33 888.51 li
311.81 882.99 li
@
437.76 508.74 mo
437.76 514.67 li
437.76 521.41 li
437.76 528.97 li
@
185.76 509.02 mo
185.76 514.93 li
185.76 521.65 li
185.76 529.18 li
@
310.9 314.23 mo
310.9 319.29 li
310.9 325.05 li
310.9 331.51 li
@
292.32 255.19 mo
292.32 260.78 li
292.32 267.14 li
292.32 274.27 li
@
331.2 238.3 mo
331.2 246.27 li
331.2 255.08 li
331.2 264.73 li
331.2 275.22 li
@
338.4 508.74 mo
532.8 508.74 li
532.8 365.79 li
338.4 365.79 li
cp
.783689 .786528 .793894 rgb
ef
.136538 .123054 .126659 rgb
%ADOBeginSubsetFont: WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H)
%%Title: (WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-1011 -330 2260 1078} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 50377 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 6 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE310300EE23D0BA079325E1D5F86AF2FE7DC374914003E
5DDB91552C283> |
53 <001C60D8A8C9B6079F6D57B3723FB4B22D5C20E1F1C72A0399AA7770998D
8437D69485C9602F4A1B2417546875FC37C5472A021735ABA4A2C7A8F6026EA5
C9AFD75C5C2EAB528E96944AC7B8CD8D44AFF41B780FC08A7F23300E2F6FD959
F0FBAA55E1303509ACEE71164ADCD14E28880E59894F7A3E4A37E0C447912A50
86D93CC1D6469B7BC732AB7AAE7FF703CED4C640F7BC8F2C478F39D4AB635748
AAB3> |
82 <001C60D8A8C9B7EF322852D7947AF851E81AE289747BB9CD61B0A6FB90D0
AE1EA11CBD580D095D0D26138593C373A2A2E8D1C841302D805BFC29AD1F43E4
969BB4B8163FB546F06FE089C5E3BB0B2A701FCCCBB1CDEB541E33A999ABA154
AFCDDDF9DF61E9ABE4DE2EBDBDCC4B76D2B37294DCB82B34A9CB6515664AC82C
79C7C7CBDD2C> |
90 <001C60D8A8C9B6079F6CB095FCE101F0532A59F0DB37BE38F67E9DF09EED
EC8D28130996EC8A357B76A03E928EA8B59045E0CF5055ABFE25FFC5D0245226
1271D9E75EA87409A16B349314768EA1C62A13ACF3FF168ED136> |
36 <001C60D8A8C9B64EDFFB76AD9BF0F37AEE7A4EAB207DBDE262584A19FD51
2B262C70EAAAF4FA965D2221D0509F7964915871B707FFA918BEE73B8F2AE7C4
A09E070175351ACAF1D8> |
39 <001C60D8A8C9B6079F4E9CC3C752C0037920D4D5B6CB8DCD9E22F6A1F6F0
903552F3096C7841FDF56B7FF718FBE996C037D3AFB847DF20BB2AE7EFECD278
6D8F638930874E713C26E09FB72D6F46F8368E6C1A84F301DADAC42ECD61618E
216E9BB7B95328149D758CADDE85C6BA0E209D49A706077923B03466D5B251EE
F7CB130618AB531A51E906A233B7F30E> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H /Identity-H 0 [/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [12.0002 0 0 -12.0002 0 0 ]msf
425.84 502.75 mo
(\0005)sh
434.506 502.75 mo
(\000R)sh
441.18 502.75 mo
(\000Z)sh
344 379.95 mo
(\000$)sh
352.004 379.95 mo
(\000')sh
360.67 379.95 mo
(\000')sh
369.336 379.95 mo
(\0005)sh
352.52 488.34 mo
407.579 488.34 li
407.579 396.422 li
352.52 396.422 li
cp
1 1 1 rgb
ef
1.5 lw
352.52 488.34 mo
407.579 488.34 li
407.579 396.422 li
352.52 396.422 li
cp
.136538 .123054 .126659 rgb
@
407.37 419.58 mo
402.36 419.58 li
395.72 419.58 li
387.44 419.58 li
377.52 419.58 li
365.97 419.58 li
352.77 419.58 li
@
407.58 465.3 mo
402.54 465.3 li
395.85 465.3 li
387.51 465.3 li
377.52 465.3 li
365.88 465.3 li
352.59 465.3 li
@
gsave
396.33 469.14 mo
396.33 439.348 li
360.329 439.348 li
360.329 469.14 li
cp
clp
%ADOBeginSubsetFont: WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (WDZEMR+Cambria#20Math-KSCms-UHC-H)
%%Title: (WDZEMR+Cambria#20Math-KSCms-UHC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /WDZEMR+Cambria#20Math-KSCms-UHC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-1475 -2463 2868 3117} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 6997 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B6472030318CD4127C796377DABFD8006FC8CD7AAF1086964
F20EE651118638C13AC909581621FA1FBAC552E6A16F7B4972529EBE8A80E782
DD8AB05FDEEBDFC49979639D0FF68DCB6E7F422169AA9A2DB1DEF4F4B413623F
5F563C56D612D674F82D41A71448843BD967EEE7B9B5E5851CDE54BA3652F7BD
EAFCDD43D27FDE0DE42D02A7D2B502434D5DE03C37B40825A9A0E097F17F7836
8B6C52A18DA8C4E8168AC56AD15BCF0B69C17FC31C7A04A95D974197259FB36A
E72A5300CDD86C2372DFF50F7695D6D8E6898504FD1B1E5E543A89FFBE60F42D
9B97A8DA995D7DC487489AC6073B6078ACF7C0324D45E66DA26D3EFF3411DA7F
D9C5DE33005> |
1710 <001C60D8A8C9B68D9214DE2909EF85E43D15F4DCE6B9E449611AAC82B6
9141CCA4734AD655702AD36C04739F4258340CAA5F5808FFC76294AE70DEA06E
6713B2384D665AB0F3C1EFCAFEE940332E0535DE5BBB5D463C0EDB5C9180608A
AFF21B6598B27728C5EEB63257C75C113E43764CDA0B023DA6AEAC5AF44707C2
FEBB1D6BD159198A9E13D5D73601DC92ED722F1D708774822C669A6E049207B3
3C07C5E9B48C984BCED2265D86E033EF8A37D541147BAE1A84FCD5F1721160A4
3F5BD9> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H /Identity-H 0 [/WDZEMR+Cambria#20Math-KSCms-UHC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [0 -20.0287 -20.0367 0 0 0 ]msf
385.679 462.775 mo
(\006\256)sh
%ADOBeginSubsetFont: QJJAAA+Calibri,Bold Initial
ct_T42Dict begin
-0.516 -0.305 1.238 0.969
 256 array 0 1 255 {1 index exch /.notdef put} for  /QJJAAA+Calibri,Bold
Type42DictBegin
[<00010000000c000c000c000c4f532f32fc0abab4000000cc000000606376
74202f4935490000012c000006086670676da1ea42ac0000073400000913
676c7966371f1fe0000077980000063468656164f2f402dd000010480000
0036686865610d8d06c00000108000000024686d74781a1b02b5000010a4
000025846c6f6361a104a3ba0000362800001e546d6178701c0416200000
547c000000206e616d65de4952880000549c00000d5c7072657028b9ff7e
000061f8000015a0676469720000000000000000000000000003044a02bc
00050008059905330000011e05990533000003d000ba02000800020f0702
030404030204e00002ff4000acff00000001000000004d53202000200000
00a00600fe0001c4079e02262000019f0000000003c0050e000000200003
0000079e0000fe930000000000000000000000810081009c00ab00b500ba
00c100ca00d300f3010a0060008500bf00e300ea00f200fb010001070115
011c01290000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe83056d000d03c000060017
0000fffaffe9fea9ffe90000050e000600170000fffaffe9fe93050e0017
0426000600170000fffaffe9ff12ffed050e00170426000600170000fffa
ffe9fe93feb8fece060b0010050e0006001002cbfffafff001edfffa023f
00060010ff36fffafff00287000600100000fffafff0079efeaffe9f0000
0000000000000000000000700072007500780079007a007b007d007e007f
008300860087008800890085007f0086008b008c008d008e008f00900091
00920093009400950096009700980099009a009b009c009d009e009f0092
00930094009b009c009e009e00960099009a009d009e00a200a600a900ac
00a200a300a400a500a700a800a900aa00ab00ac00ae00a300a500a700a8
00aa00ab00ac00ad00ae00a000a100a300a600a700a900aa00ac00ad00af
00af00b000b100b200b300b400b500af00af00b000b200b300b400b500b8
00c000b600b700b800b900ba00bb00bc00bd00be00bf00c000c100c200b9
00ba00bc00bd00bf00c000c100c200b600b700b800b900ba00bb00bc00bd
00be00bf00c000c100c200c000c100c200c300c400c500c600c700c800c9
00ca00cb00cc00cd00ce00cf00c300c400c500c600c700c800c900ca00cb
00cc00cd00ce00cf00c300c400c500c600c700c800c900ca00cb00cc00cd
00ce00cf00c500c800c900ca00cb00ce00cf00d000d100d200d300d400d5
00d600d700d900db00de00df00e000e200e300ec00d000d100d200d300d4
00d500d600d700d800d900da00db00dd00de00df00e000e100e300e500e9
00ec00ed00d100d300d400d500d800d900da00dc00e000e100e800d000d1
00d400d600e000e4010800f5010200fb00ff0108008f0090009600920093
00990090009100970098009a009d00a400a600a700a800a900af009a00a2
00a300a700a900aa00ab00ac00ad00b000ad009b00aa00ab00ad00b0009a
00aa00ac00ad00ae00af00b100b900bb00bc00bd00be00c100c200c300c4
00c500c600c700c800c900ca00cb00ce00b300b400b500b600b700b800bc
00c200c500c800ca00cb00cd00ce00cf00d000c700b700b800b900bb00bc
00be00c600c700c800c900cb00cf00d000b200b600b700c200c400c500c6
00c700cb00cc00cd00ce00cf00d000d100d400d500d700d800d900da00db
00dc00de00df00e000e200e300e500e600d100d300d600d700d800da00db
00dc00dd00de00df00e000e100e200e300e400e500d100d200d400d500da
00db00dd00de00df00e000e100e200e600d200d300d400d700d800dd00de
00e000e100e200e300e400e500e600d200da00e100e900ea00ec00e800e9
00ea00eb00ec00ed00eb00e700ea00eb00ec00ed00e700e900ea00ec00ed
00ee00ef00f500ee00ef00f000f100f200f300f400f500f600ee00f000f2
00ef00f000f100f200f300f400f500f600ee00ef00f000f100f200f300f4
00f500f600f700f700f800f900fa00fb00fc00fd00f700f800f900fa00fb
00fd00f700f800f900fa00fb00fc00fd00fd00fe00ff0100010101020103
00fe010001010102010300fe00ff01000101010201030102010301040105
0106010701080109010a010c010d010e010f011001070104010501060107
01080109010a010b010d010e010f01100111010401050106010701080109
010a010b010c010d010e010f0110011101040105010601070109010e010f
011201130114011501170118011a011b011c011d011e011f012101220112
01130114011501170119011b011c011d011e012001210123012401250113
011401150116011701180119011a011b011c011d011f01200117011c011d
011e012001210129013001770129012b012e012f01300131013401350137
0139012b012d013001320134013a012e01300134013a014200500062006c
00fa05e802cc0114011400a000b140465f5e5d5c5b5a5958555453525150
4f4e4d4c4b4a494847464544434241403f3e3d3c3b3a39383736352f2e2d
2c2826252423221f181411100f0d0b0a090807060504030201002c452346
6020b02660b004262348482d2c452346236120b02661b004262348482d2c
45234660b0206120b04660b004262348482d2c4523462361b0206020b026
61b02061b004262348482d2c45234660b0406120b06660b004262348482d
2c4523462361b0406020b02661b04061b004262348482d2c0110203c003c
2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed51582320
b04d44235920b0042651582320b00d44235921212d2c20204518684420b0
01602045b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b43
23430b2d2c00b0282370b101283e01b0282370b10228453ab10200080d2d
2c2045b00325456164b050515845441b2121592d2c2045b0004360442d2c
01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb810006260
2b0c642364615c58b00361592d2c8a03458a8a87b0112bb0292344b0297a
e4182d2c4565b02c234445b02b23442d2c4b525845441b2121592d2c01b0
05251023208af500b0016023edec2d2c01b005251023208af500b0016123
edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b001
610110203c003c2d2c00b00743b006430b2d2c21210c6423648bb8400062
2d2c21b08051580c6423648bb82000621bb200402f2b59b002602d2c21b0
c051580c6423648bb81555621bb200802f2b59b002602d2c0c6423648bb8
4000626023212d2c4523456023456023456023766818b08062202d2cb004
26b00426b00425b0042545234520b003266062636820b0032661658a2344
442d2c2045b0005458b040442045b04061441b2121592d2c45b1302f4523
456160b0016069442d2c4b5158b02f2370b01423421b2121592d2c4b5158
20b0032545695358441b2121591b2121592d2c45b01443b0006063b00160
69442d2cb02f45442d2c452320458a60442d2c45234560442d2c4b235158
b90033ffe0b134201bb3330034005944442d2cb0164358b00326458a5864
66b01f601b64b020606620581b21b04059b001615923586559b029234423
10b029e01b2121212121592d2cb0164358b004254564b020606620581b21
b04059b0016123586559b0292344b00425b00725082058021b0359b00525
10b004252046b0042523423cb0072510b006252046b00425b0016023423c
2058011b0059b0052510b00425b029e0b0072510b00625b029e0b00425b0
0725082058021b0359b00425b003254348b00625b00325b0016043481b21
59212121212121212d2cb0164358b004254564b020606620581b21b04059
b0016123581b6559b0292344b00525b00825082058021b0359b0042510b0
05252046b0042523423cb00425b0072508b0072510b006252046b00425b0
016023423c2058011b0059b0042510b00525b029e0b02920456544b00725
10b00625b029e0b00525b00825082058021b0359b00525b003254348b004
25b0072508b00625b00325b0016043481b2159212121212121212d2c02b0
0425202046b004252342b0052508b003254548212121212d2c02b0032520
b0042508b0022543482121212d2c452320451820b0005020582365235923
6820b040505821b04059235865598a60442d2c4b53234b515a5820458a60
441b2121592d2c4b545820458a60441b2121592d2c4b53234b515a58381b
2121592d2cb000214b5458381b2121592d2cb002435458b0462b1b212121
21592d2cb002435458b0472b1b212121592d2cb002435458b0482b1b2121
2121592d2cb002435458b0492b1b212121592d2c208a08234b538a4b515a
5823381b2121592d2c0020b200400325b0062649618b3812342d2c014623
466023466123201020468a61b8ff80628ab140408a704560683a2d2c208a
2349648a2353583c1b21592d2c4b52587d1b7a592d2cb012004b014b5442
2d2cb1020042b123018851b1400188535a58b910000020885458b2020102
43604259b12401885158b920000040885458b2020202436042b124018854
58b2022002436042004b014b5258b2020802436042591bb9400000808854
58b202040243604259b94000008063b80100885458b202080243604259b9
4000010063b80200885458b202100243604259b94000020063b804008854
58b202400243604259595959592d2c451868234b51582320452064b04050
587c59688a6059442d2cb00016b00225b0022501b001233e00b002233eb1
0102060cb00a236542b00b234201b001233f00b002233fb10102060cb006
236542b0072342b00116012d2c20b82000628a6023622d2cb0072558001b
0159b0042510b00325b0022520b8ffff545821cd1bed5921b006255cb006
255a58b0092b5920b005254ab0042547b004254760b0062547b0806361b0
0225b0005558b00325b00725496359b0082558001b0159b00425b0062549
b009255cb009255a58b0092b59b0072546b0806361b0032520b000555863
1b2159612320b0005558b080631b21b08059b0592bb006255c586959b004
25202010b00048233ab0062658001b0159b0052658b003252f598a122332
21212d2cb00625b00a2587b00625b009254ab0005358b00625b00a251bb0
0925b0072559b00225b00225070cb005256323b00625636020b940000400
63535821b00426b00426b00a1bb94000040063655158b0042665b0042665
b00a1bb00426b00426b000b00325b003250b0d0ab0092eb00725b007250b
0d0ab00b2eb00525b0052507595920b0005558b00525b0052587b00725b0
07250bb0092510b00b25b0092620b8ffff545821cd1bed59b00525b00525
07b00825b00b254923b00625b0062587b00a2510b00b25c15920b00051b8
00522378b00161b00225b00725b0072507b00a25b00d254961b08062b005
25b005250bb00a252338b00625b0062587b00825b008250bb00a2510b00b
25c4b00625b0062507b00925b00c2549b0032554b8ffa723792121212121
212121212121212d2c23b0005458b9400000001bb900004000598ab00054
58b9400000001bb90000400059b05b2b2d2c08b0005458b9400000001bb9
00004000590db05b2b2d2c8a8a080d8ab0005458b9400000001bb9000040
0059b05b2b2d2cb00426b00426080db00426b00426080db05b2b2d000001
00000005bd718a94f8f05f0f3cf50019080000000000bbeb7ccc00000000
d20f7e50fbdafd8d09ec07c5000100090002000000000000000100000600
fe0001c40aa0fbdafa8609ec000100000000000000000000000000000399
040e0000000000000000000001cf00000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000006fe008d000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000044b004b0000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000002d8007e0000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000029b00e6000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000382007900000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000009e009e009e009e009e009e009e009e009e009e009e009e
009e009e009e009e009e009e009e009e009e009e009e009e009e009e009e
009e009e009e009e009e009e009e009e009e009e009e009e009e009e009e
009e009e009e009e009e009e009e009e009e009e009e009e009e009e009e
009e009e009e009e009e009e009e009e009e009e009e0162016201620162
016201620162016201620162016201620162016201620162016201620162
016201620162016201620162016201620162016201620162016201620162
016201620162016201620162016201620162016201620162016201620162
016201620162016201620162016201620162016201620162016201620162
016201620162016201620162016201620162016201620162016201620162
016201620162016201620162016201620162016201620162016201620162
016201620162016201620162016201620162016201620162016201620162
016201620162016201620162016201620162016201620162016201620162
016201620162016201620162016201620162016201620162016201620162
016201620162016201620162016201620162016201620162016201620162
016201620162016201620162016201620162016201620162016201620162
016201620162016201620162016201620162016201620162016201620162
016201620162016201620162016201620162016201620162016201620162
016201620162016201620162016201620162016201620162016201620162
01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe
01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe
01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe
01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe
01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe
01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe
01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe01fe
01fe01fe01fe01fe01fe01fe01fe01fe01fe027d027d027d027d027d027d
027d027d027d027d027d027d027d027d027d027d027d027d027d027d027d
027d027d027d027d027d027d027d027d027d027d027d027d027d027d027d
027d027d027d027d027d027d027d027d027d027d027d027d027d027d027d
027d027d027d027d027d027d027d027d027d027d027d027d027d027d027d
027d027d027d027d027d027d027d027d027d027d027d027d027d027d027d
027d027d027d027d027d027d027d027d027d027d027d027d027d027d027d
027d027d027d027d027d027d027d027d027d027d027d027d027d027d027d
027d027d027d027d027d027d027d027d027d027d027d027d027d027d027d
027d027d027d027d027d027d027d027d027d027d027d027d027d027d027d
027d027d027d027d027d027d027d027d027d027d027d027d027d027d027d
027d027d027d027d027d027d027d027d027d027d027d027d027d027d027d
027d027d027d027d027d027d027d027d027d027d027d027d027d027d027d
027d027d027d027d027d027d027d027d027d027d027d027d027d027d027d
027d027d027d027d027d027d027d027d027d027d027d027d027d027d027d
027d027d027d027d027d027d027d027d027d027d027d027d027d027d027d
027d027d027d027d027d027d027d027d027d027d027d027d027d027d027d
027d027d027d027d027d027d027d027d027d027d027d027d027d027d027d
027d027d027d027d027d027d027d027d027d027d027d027d027d027d027d
027d027d027d027d027d027d027d027d027d027d027d027d027d027d027d
027d027d027d027d027d027d027d027d027d027d027d027d027d027d027d
027d027d027d027d027d027d027d027d027d027d027d027d027d027d027d
027d027d027d027d027d027d027d027d027d027d027d027d027d027d027d
027d027d027d027d027d027d027d027d027d027d027d027d027d027d027d
027d027d027d027d027d027d027d027d027d027d027d027d027d027d027d
027d027d027d027d027d027d027d027d027d027d027d027d027d027d027d
027d027d027d027d027d027d027d027d027d027d027d027d027d027d027d
027d027d027d027d027d027d027d027d027d027d027d027d027d027d027d
027d027d027d027d027d027d027d027d027d027d027d027d027d027d027d
027d027d027d027d027d027d027d027d027d027d027d027d027d027d027d
027d027d027d027d027d02cb02cb02cb02cb02cb02cb02cb02cb02cb02cb
02cb02cb02cb02cb02cb02cb02cb02cb02cb02cb02cb02cb02cb02cb02cb
02cb02cb02cb02cb02cb02cb02cb02cb02cb02cb02cb02cb02cb02cb02cb
02cb02cb02cb02cb02cb02cb02cb02cb02cb02cb02cb02cb02cb02cb02cb
02cb02cb02cb02cb02cb02cb02cb02cb02cb02cb02cb02cb02cb02cb02cb
02cb02cb02cb02cb02cb02cb02cb031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a031a0001
00000f29004f00050000000000020010002f006000000c6515a000000000
0000002d02220000000300000000006400000000000300000001000e0064
00000003000000020008032a0000000300000003002e0304000000030000
00040018031a00000003000000050018033200000003000000060018034a
0000000300000007007603620000000300000008002a000e000000030000
0009002003d8000000030000000a02a00064000000030000000b005603f8
000000030000000c002a044e000000030000000d02980478000000030000
000e006c071000010000000000000032077c0001000000000001000707ae
0001000000000002000409110001000000000003001708fe000100000000
0004000c09090001000000000005000c09150001000000000006000c0921
0001000000000007003b092d000100000000000800150783000100000000
000900100968000100000000000a015007ae000100000000000b002b0978
000100000000000c001509a3000100000000000d014c09b8000100000000
000e00360b040003000104090000006400000003000104090001000e0064
00030001040900020008032a0003000104090003002e0304000300010409
00040018031a00030001040900050018033200030001040900060018034a
0003000104090007007603620003000104090008002a000e000300010409
0009002003d8000300010409000a02a00064000300010409000b005603f8
000300010409000c002a044e000300010409000d02980478000300010409
000e006c071000a9002000320030003100350020004d006900630072006f
0073006f0066007400200043006f00720070006f0072006100740069006f
006e002e00200041006c006c002000520069006700680074007300200052
0065007300650072007600650064002e00430061006c0069006200720069
002000690073002000610020006d006f006400650072006e002000730061
006e0073002000730065007200690066002000660061006d0069006c0079
0020007700690074006800200073007500620074006c006500200072006f
0075006e00640069006e006700730020006f006e0020007300740065006d
007300200061006e006400200063006f0072006e006500720073002e0020
004900740020006600650061007400750072006500730020007200650061
006c0020006900740061006c006900630073002c00200073006d0061006c
006c00200063006100700073002c00200061006e00640020006d0075006c
007400690070006c00650020006e0075006d006500720061006c00200073
006500740073002e0020004900740073002000700072006f0070006f0072
00740069006f006e007300200061006c006c006f00770020006800690067
006800200069006d007000610063007400200069006e0020007400690067
00680074006c007900200073006500740020006c0069006e006500730020
006f0066002000620069006700200061006e006400200073006d0061006c
006c0020007400650078007400200061006c0069006b0065002e00200043
0061006c0069006200720069002700730020006d0061006e007900200063
0075007200760065007300200061006e006400200074006800650020006e
006500770020007200610073007400650072006900730065007200200074
00650061006d00200075007000200069006e002000620069006700670065
0072002000730069007a0065007300200074006f00200072006500760065
0061006c002000610020007700610072006d00200061006e006400200073
006f006600740020006300680061007200610063007400650072002e004d
006900630072006f0073006f00660074003a002000430061006c00690062
0072006900200042006f006c006400560065007200730069006f006e0020
0035002e0037003400430061006c0069006200720069002d0042006f006c
006400430061006c00690062007200690020006900730020006100200074
0072006100640065006d00610072006b0020006f00660020007400680065
0020004d006900630072006f0073006f00660074002000670072006f0075
00700020006f006600200063006f006d00700061006e006900650073002e
004c007500630028006100730029002000640065002000470072006f006f
00740068007400740070003a002f002f007700770077002e006d00690063
0072006f0073006f00660074002e0063006f006d002f007400790070006f
006700720061007000680079002f006300740066006f006e007400730068
007400740070003a002f002f0066006f006e007400660061006200720069
006b002e0063006f006d0059006f00750020006d00610079002000750073
00650020007400680069007300200066006f006e00740020006100730020
007000650072006d00690074007400650064002000620079002000740068
0065002000450055004c004100200066006f007200200074006800650020
00700072006f006400750063007400200069006e00200077006800690063
00680020007400680069007300200066006f006e00740020006900730020
0069006e0063006c007500640065006400200074006f0020006400690073
0070006c0061007900200061006e00640020007000720069006e00740020
0063006f006e00740065006e0074002e00200059006f00750020006d0061
00790020006f006e006c0079002000280069002900200065006d00620065
00640020007400680069007300200066006f006e007400200069006e0020
0063006f006e00740065006e00740020006100730020007000650072006d
00690074007400650064002000620079002000740068006500200065006d
00620065006400640069006e006700200072006500730074007200690063
00740069006f006e007300200069006e0063006c00750064006500640020
0069006e0020007400680069007300200066006f006e0074003b00200061
006e006400200028006900690029002000740065006d0070006f00720061
00720069006c007900200064006f0077006e006c006f0061006400200074
00680069007300200066006f006e007400200074006f0020006100200070
00720069006e0074006500720020006f00720020006f0074006800650072
0020006f0075007400700075007400200064006500760069006300650020
0074006f002000680065006c00700020007000720069006e007400200063
006f006e00740065006e0074002e0068007400740070003a002f002f0077
00770077002e006d006900630072006f0073006f00660074002e0063006f
006d002f007400790070006f006700720061007000680079002f0066006f
006e00740073002f00640065006600610075006c0074002e006100730070
0078a92032303135204d6963726f736f667420436f72706f726174696f6e
2e20416c6c205269676874732052657365727665642e43616c6962726920
69732061206d6f6465726e2073616e732073657269662066616d696c7920
7769746820737562746c6520726f756e64696e6773206f6e207374656d73
20616e6420636f726e6572732e204974206665617475726573207265616c
206974616c6963732c20736d616c6c20636170732c20616e64206d756c74
69706c65206e756d6572616c20736574732e204974732070726f706f7274
696f6e7320616c6c6f77206869676820696d7061637420696e2074696768
746c7920736574206c696e6573206f662062696720616e6420736d616c6c
207465787420616c696b652e2043616c696272692773206d616e79206375
7276657320616e6420746865206e65772072617374657269736572207465
616d20757020696e206269676765722073697a657320746f207265766561
6c2061207761726d20616e6420736f6674206368617261637465722e4d69
63726f736f66743a2043616c6962726920426f6c6456657273696f6e2035
2e373443616c696272692d426f6c6443616c696272692069732061207472
6164656d61726b206f6620746865204d6963726f736f66742067726f7570
206f6620636f6d70616e6965732e4c7563286173292064652047726f6f74
687474703a2f2f7777772e6d6963726f736f66742e636f6d2f7479706f67
72617068792f6374666f6e7473687474703a2f2f666f6e7466616272696b
2e636f6d596f75206d617920757365207468697320666f6e742061732070
65726d6974746564206279207468652045554c4120666f72207468652070
726f6475637420696e207768696368207468697320666f6e742069732069
6e636c7564656420746f20646973706c617920616e64207072696e742063
6f6e74656e742e20596f75206d6179206f6e6c792028692920656d626564
207468697320666f6e7420696e20636f6e74656e74206173207065726d69
747465642062792074686520656d62656464696e67207265737472696374
696f6e7320696e636c7564656420696e207468697320666f6e743b20616e
6420286969292074656d706f726172696c7920646f776e6c6f6164207468
697320666f6e7420746f2061207072696e746572206f72206f7468657220
6f75747075742064657669636520746f2068656c70207072696e7420636f
6e74656e742e687474703a2f2f7777772e6d6963726f736f66742e636f6d
2f7479706f6772617068792f666f6e74732f64656661756c742e61737078
b10903b802f9b21e1d1fb802f8b21e2b1fb802f7b21e2c1fb802f6b21e2c
1fb802f5b21e2c1fb802f4b21e2b1fb802f3b21e2c1fb802f2b21e2c1fb8
02f1b21e2c1fb802f0b21e2c1fb802efb21e2c1fb802eeb21e2b1fb802ed
b21e2b1fb802ecb21e2c1fb802ebb21e2c1fb802eab21e2c1fb802e9b21e
2c1fb802e8b21e2c1fb802e7b21e2c1fb802e6b21e2c1fb802e5b21e2c1f
b802e4b21e091fb802e3b21e2c1fb802e2b21e2c1fb802e1b21d121fb802
e0b21d191fb802dfb21d2f1fb802deb21d2f1fb802ddb21d2f1fb802dcb2
1d2f1fb802dbb21d191fb802dab21d2f1fb802d9b21d2f1fb802d8b21d2f
1fb802d7b21d2f1fb802d6b21d2f1fb802d5b21d2f1fb802d4b21d2f1fb8
02d3b21d2f1fb802d2b21d2f1fb802d1b21d2f1fb802d0b21d2f1fb802cf
b21d2f1fb802ceb21d121fb802cdb21d121fb802ccb21d121fb802cbb21d
121fb802cab21d191fb802c9b21d2f1fb802c8b21d2f1fb802c7b21d2f1f
b802c6b21d2f1fb802c5b21d2f1fb802c4b21d2f1fb802c3b21d2f1fb802
c2b21d2f1fb802c1b21d2f1fb802c0b21d2f1fb802bfb21d121fb802beb2
1d121fb802bdb21d2f1fb802bcb21d2f1fb802bbb21d2f1fb802bab21d2f
1fb802b9b21d2f1fb802b8b21d2f1fb802b7b21d2f1fb802b6b21d2f1fb8
02b5b21d2f1fb802b4b21d2f1fb802b3b21d2f1fb802b2b21d2f1fb802b1
b21c321fb802b0b21c321fb802afb21c331fb802aeb21c331fb802adb21c
331fb802acb21c331fb802abb21c331fb802aab21c311fb802a9b21c311f
b802a8b21c321fb802a7b21c321fb802a6b21c321fb802a5b21c321fb802
a4b21c321fb802a3b21c321fb802a2b21c331fb802a1b21c331fb802a0b2
1c331fb8029fb21c331fb8029eb21c331fb8029db21c331fb8029cb21c31
1fb8029bb21c311fb8029ab21c321fb80299b21c321fb80298b21c321fb8
0297b21c321fb80296b21c321fb80295b21c331fb80294b21c331fb80293
b21c331fb80292b21c331fb80291b21c331fb80290b21c331fb8028fb21c
331fb8028eb21c311fb8028db21c321fb8028cb21c321fb8028bb21c321f
b8028ab21c321fb80289b21c321fb80288b21c331fb80287b21c331fb802
86b21c331fb80285b21c331fb80284b21c331fb80283b21c331fb80282b2
1b341fb80281b21b341fb80280b21b341fb8027fb21b341fb8027eb21b34
1fb8027db21b341fb8027cb21b341fb8027bb21b341fb8027ab21b341fb8
0279b21b341fb80278b21b341fb80277b21b341fb80276b21b341fb80275
b21b341fb80274b21b341fb80273b21b341fb80272b21b341fb80271b21b
341fb80270b21b341fb8026fb21a351fb8026eb21a351fb8026db21a351f
b8026cb21a351fb8026bb21a351fb8026ab21a351fb80269b21a351fb802
68b21a351fb80267b21a351fb80266b21a351fb80265b21a351fb80264b2
1a351fb80263b21a351fb80262b21a351fb80261b21a351fb80260b21a35
1fb8025fb21a351fb8025eb21a351fb8025db21a351fb8025cb21a351fb8
025bb21a351fb8025ab21a351fb80259b219371fb80258b219371fb80257
b219371fb80256b219371fb80255b219371fb80254b219371fb80253b219
371fb80252b219371fb80251b219371fb80250b219371fb8024fb219371f
b8024eb219371fb8024db219371fb8024cb219371fb8024bb219371fb802
4ab219371fb80249b219371fb80248b219371fb80247b219371fb80246b2
19371fb80245b219371fb80244b219371fb80243b219371fb80242b21937
1fb80241b219371fb80240b219371fb8023fb219371fb8023eb219371fb8
023db219371fb8023cb219371fb8023bb219371fb8023ab219371fb80239
b218391fb80238b218391fb80237b218391fb80236b218391fb80235b218
391fb80234b218391fb80233b218391fb80232b218391fb80231b218391f
b80230b218391fb80301b2182e1fb8022fb218391fb8022eb218391fb802
2db218391fb8022cb218391fb8022bb218391fb8022ab218391fb80229b2
18391fb80228b218391fb80227b218391fb80226b218391fb80225b2173b
1fb80224b2173b1fb80223b217321fb80222b2173a1fb80221b2173b1fb8
0220b2173b1fb8021fb2173b1fb8021eb2173b1fb8021db2173b1fb8021c
b2173b1fb8021bb2173b1fb8021ab2173b1fb80219b2173b1fb80218b217
3b1fb80217b2173b1fb80216b2173b1fb80215b217321fb80214b2173a1f
b80213b2173b1fb80212b2173b1fb80211b2173b1fb80210b2173b1fb802
0fb2173b1fb8020eb2173b1fb8020db2173b1fb8020cb2173b1fb8020bb2
173b1fb8020ab2173b1fb80209b217321fb80208b217321fb80207b2173b
1fb80206b2173b1fb80205b2173b1fb80204b2173b1fb80203b2173b1fb8
0202b2173b1fb80201b2173b1fb80200b2173b1fb801ffb2173b1fb801fe
b2173b1fb801fdb2173b1fb801fcb2173b1fb801fbb2173b1fb801fab217
3b1fb801f9b2173b1fb801f8b2173b1fb801f7b217321fb801f6b2173a1f
b801f5b2173b1fb801f4b2173b1fb801f3b2173b1fb801f2b2173b1fb801
f1b2173b1fb801f0b2173b1fb801efb2173b1fb801eeb2173b1fb801edb2
173b1fb801ecb2173b1fb801ebb2173b1fb801eab2173b1fb801e9b2173b
1fb801e8b2173b1fb801e7b217321fb801e6b216231fb801e5b216231fb8
01e4b216371fb801e3b216371fb801e2b216381fb801e1b216381fb801e0
b216431fb801dfb216441fb801deb216441fb801ddb216441fb801dcb216
451fb801dbb216461fb801dab216461fb801d9b216461fb801d8b216231f
b801d7b216231fb801d6b216381fb801d5b216431fb801d4b216431fb801
d3b216431fb801d2b216441fb801d1b216461fb801d0b216461fb801cfb2
16461fb801ceb216461fb801cdb216461fb801ccb216461fb801cbb21643
1fb801cab216231fb801c9b216231fb801c8b216371fb801c7b216371fb8
01c6b216381fb801c5b216421fb801c4b216431fb801c3b216441fb801c2
b216451fb801c1b216461fb801c0b216461fb801bfb216461fb801beb216
461fb801bdb216461fb801bcb216461fb801bbb216461fb801bab216371f
b801b9b216381fb801b8b216421fb801b7b216431fb801b6b216431fb801
b5b216431fb801b4b216441fb801b3b216441fb801b2b216441fb801b1b2
16451fb801b0b216451fb801afb216451fb801aeb216461fb801adb21646
1fb801acb216461fb801abb216461fb801aab216461fb801a9b215341fb8
01a8b215411fb801a7b215411fb801a6b2154d1fb801a5b2154e1fb801a4
b2154f1fb801a3b215521fb801a2b215401fb801a1b2154d1fb801a0b215
4e1fb8019fb2154f1fb8019eb215521fb8019db2154d1fb8019cb215401f
b8019bb2154d1fb8019ab2154e1fb80199b2154e1fb80198b2154f1fb801
97b2154f1fb80196b215501fb80195b215521fb80194b215521fb80193b2
15521fb80192b215411fb80191b2154f1fb80190b215501fb8018fb21550
1fb8018eb215511fb8018db215521fb8018cb215521fb8018bb215521fb8
018ab214581fb80189b214591fb80188b2145c1fb80187b2145d1fb80186
b2144a1fb80185b2145b1fb80184b2145c1fb80183b214591fb80182b214
5d1fb8018140af145d1ff00f451fef0e481fe00c4e1fc20c4e1fc10c4e1f
c00c4e1fbf0b561fb20b561fb10b561fb00b561faf0b561fae0b561fad0b
561fac0b561fab0b561faa0b561fa90b561fa80b561fa70b561fa60b561f
a50b561fa40b561fa30b561fa20b561fa10b561fa00b561f9f0b561f9e0a
681f9a0a681f990a681f980a681f970a681f960a681f950a681f940a681f
930a681f920a681f910a681f9009681f8f09681f8e09681f8d09681f8c09
681f410902fc02fa0056001f02fb02fa0068001f017fb213321fb8017eb2
12371fb80174b212371fb80173b211421fb80172b211421fb80171b21142
1fb80170b211421fb8016fb211421fb8016eb211421fb8016db211421fb8
016cb211421fb8016bb211421fb8016ab211421fb8013cb211421fb8013b
b210421fb8013ab210421fb80139b210421fb80138b210421fb80137b210
421fb80136b210421fb80135b210421fb80134b210421fb80133b210421f
b80132b20f451fb80131b20f451fb80130b20f451fb80112b20f451fb801
11b20f451fb80110b20f451fb8010fb20f451fb8010eb20f451fb8010db2
0e481fb8010cb20e481fb8010bb20e481fb8010ab20e481fb80109b20e48
1fb80108b20e481fb80107b20d4a1fb80106405b0d4a1fee0d4a1fed0d4a
1fec0d4a1feb0d4a1fea0d4a1fe90c4e1fdf0c4e1fde0c4e1fdd0c4e1fdc
0c4e1fdb0c4e1fda0c4e1fd90b561fd80b561fd70b561fbe0b561fbd0b56
1fbc0b561fbb0b561fba0b561f9d0a681f9c0a681fb80180b213321fb801
7ab211401fb80179b211421fb80178b211421fb80177b211421fb80176b2
11421fb80175b211421fb80143b211421fb80142b210421fb80141b21042
1fb80140b210421fb8013fb210421fb8013eb210421fb8013db20f451fb8
0115b20f451fb80114b20f451fb80113b20f451fb903030302b2401fa4be
030200b4030200c4030200030300b213321fb8017bb213321fb80153b212
371fb80152b211401fb80151b211401fb80150b211401fb8014fb211401f
b8014eb211401fb8014db211401fb8014cb211401fb8014bb211401fb801
4ab211401fb80149b211401fb80148b211401fb80147b211401fb80146b2
11401fb80145b211401fb80144b211401fb80122b211401fb80121b21042
1fb80120b210421fb8011fb210421fb8011eb210421fb8011db210421fb8
011cb210421fb8011bb210421fb8011ab210421fb80119b210421fb80118
b20f451fb80117b20f451fb80116409b0f451ffd0f451ffc0f451ffb0f45
1ffa0f451ff90e481ff80e481ff70e481ff60e481ff50e481ff40e481ff3
0d4a1ff20d4a1ff10d4a1fe70d4a1fe60d4a1fe50d4a1fe40d4a1fe30d4a
1fe20d4a1fe10c4e1fcd0c4e1fcc0c4e1fcb0c4e1fca0c4e1fc90c4e1fc8
0c4e1fc70c4e1fc60c4e1fc50c4e1fc40c4e1fc30c4e1fb80c4e1fb70b56
1fb60b561fb50b561fb40b561fb30b561f9b0a681fb802fdb212371fb801
7db212371fb8017cb212371fb80169b2112e1fb80168b2112e1fb80167b2
11401fb80166b211401fb80165b211401fb80164b211401fb80163b21140
1fb80162b211401fb80161b211401fb80160b211401fb8015fb211401fb8
015eb211401fb8015db211401fb8015cb211401fb8015bb211401fb8015a
b211401fb80159b211401fb80158b211401fb80157b211401fb80156b211
401fb80155b211401fb80154b211401fb8012fb211401fb8012eb210421f
b8012db210421fb8012cb210421fb8012bb210421fb8012ab210421fb801
29b210421fb80128b210421fb80127b210421fb80126b210421fb80125b2
0f451fb80124b20f451fb80123b20f451fb80105b20f451fb80104b20f45
1fb80103b20f451fb80102b20f451fb80101b20e481fb8010040a20e481f
ff0e481ffe0e481fe80c4e1fd60c4e1fd50c4e1fd40c4e1fd30c4e1fd20c
4e1fd10c4e1fd00c4e1fcf0c4e1fce0b561fb90b561f8503251f84032e1f
83012e1f8248805581ab80557f487d557eab7d550b7d3b7d4b7d030b7d1b
7d4b7d7b7dab7ddb7d067c487a557bab7a55047a147a020a7948775578ab
77550b77010c764875555475e475f4750314755475647574759475d475e4
7507a475b475c47503b8ffc0401275383b46807590750214757475020075
010fb8ffc04021750b0e467448725573ab725504723472023bf47201e072
01023072015072607202b8ffc0b372242846b8ffc0403572161a46107230
7240720371486f5570ab6f554f6f6f6f7f6f9f6fbf6f057f6f8f6f02af6f
bf6f02406f090d466e486d55df6d0100bc02ff001002ff00c002ffb2030a
6fbb02fe000100ef02fe40ff016b032e1f6a03251f692e675568ab675566
2e645565ab6455632e6255612e60555f2e5d555eab5d555c2e5a555bab5a
55592e58555703251f562e545555ab5455532e515552ab51554f2e4e554e
03251f4d2e4b554cab4b554a2e485549ab4855504801472e46554503361f
001f01001e01001e701e801ef01e040b601d701d02701de01df01d03701c
f01c027f1b010f1a7f1a8f1a030f1a8f1a020f1a8f1a020f191f198f199f
19af19050f198f199f19030c7012801202701180110230114011d011e011
040011a011020f8f0f9f0faf0f034f0f5f0fef0fff0f04af0f01af0ebf0e
cf0e034f0e5f0e6f0e030f0eaf0ebf0e0310400e2e31460f0d1f0d40472f
0d033c2f0d3f0d4f0d038f0d01400d2e3246400d2427463f0c4f0c5f0c03
9f0c01400c262946ef0aff0a02400a242746ef09ff0902ff090100030120
01010001100120010308b8ffc0b401151f4603bd01000100000500010190
00542b4bb807ff524bb008505bb00188b02553b00188b040515ab00688b0
00555a5b58b101018e59b101024354b0144b515a58b101018e59858d8d00
1d424bb01d5358b203a0a01d42594bb0805358b20340401d42594bb0ff53
58b20300001d42592b5e73757373742b732b73742b2b73745e732b5e7374
757374755e73747573015e7374737475757473745e737473002b2b732b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b73745e73732b2b73
74752b2b732b2b73755f75755e732b2b2b5e7373732b7374752b5e732b2b
5e732b2b73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b732b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[1589 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> QJJAAA+Calibri,Bold AddT42Char 
1 0 0 <00050000fe7303db050e000300070039004d004e0054bc000d019d001700
3a01cbb44444082d07be019d0002002001cb00080001019d401304020d1b
1b3f2335068c035111493f078c0254003ffddeddc63ffddecd12392fcd01
2fddedd6ed10fdc611392fedd4ed3130011121110111211101140e020707
060623222e02352726363333323e0235342623220e0223222e0235343637
3e0333321e0203140e0223222e0235343e0233321e020103dbfc4f0345fd
240279213b533105012b25171f130808031f1e0d2533200f4b4d2336281a
05040806030508072736422355774a22ce0a18271c1d27180a0a18271d1c
27180afdc2050efaf2050efb570444fbbc02e839583e2406790d0b020509
089d281e1524311c3d4b0d0f0d050e1b171a1c0708110e0a2a4861fd991a
25170a0a17251a1c25180a0a1825fd3b>QJJAAA+Calibri,Bold AddT42Char 
QJJAAA+Calibri,Bold /CharStrings get begin
/space 3 def
end
QJJAAA+Calibri,Bold /Encoding get
dup 32 /space put
pop
end
%ADOEndSubsetFont
/WDZEMS+Calibri,Bold /QJJAAA+Calibri,Bold findfont ct_VMDictPut
/WDZEMS+Calibri,Bold*1 
[32{/.notdef}rp /space 223{/.notdef}rp]
WDZEMS+Calibri,Bold nf
WDZEMS+Calibri,Bold*1 [0 -12.0285 -12.0333 0 0 0 ]msf
385.679 445.663 mo
( )sh
grestore
352.52 468.42 mo
352.52 464.72 li
352.52 459.6 li
352.52 453.08 li
352.52 445.15 li
352.52 435.81 li
@
gsave
351.36 416.22 mo
407.459 416.22 li
407.459 398.219 li
351.36 398.219 li
cp
clp
%ADOBeginSubsetFont: WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMR+Cambria#20Math-KSCms-UHC-H 3 GetGlyphDirectory
2777 <001C60D8A8C9B7C56CB4E54A8931B9A35D4532798FF02EBE5561A43013
B9F11093B33E0F94C505ED639C2EB785A53D4C360870C896B854693CA793DEA7
519028247DB9C528218216FB7DCEBF1DF25480582C8C719AEFD7156EE408B229
86A7729A33D0A6FA5D3AA648C810E8913D2CF51A0C14C88701BD53DECDAA37A7
9032714A122C4D6202F077B872488D79E11A1D83350DB043451609E80F915993
BC7C591AB6E04A871A24278E0EE1C028DCC918D93B55E45CF5513369FC> |
2778 <001C60D8A8C9B7C56CB48BFC6F8739B554D48C52545BEA8B083700CD7B
275A5B85A352D9A416038545852E7741109608E487DE1BF979AED61D9B72EED9
891F2D1544A8D7A0AE614E0BEC9C9EAD5256CB1DD931DCB04AF348D4AFFC0408
675349AAE60B63ABD2E5B7FCEC34F8405F5D0B52D099EF1CD972D99D090310DE
E20897E87CF7AEED57> |
485 <001C60D8A8C9B6E59951F2D6E6516FC628A9A749F7948DF6558BFD38B29
5A53DCFEE54A24562C1C383EEB57AB35B4669> |
!
end
end end
%ADOEndSubsetFont
/WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [12.0568 0 0 -12.0023 0 0 ]msf
351.36 411.579 mo
(\012\331)sh
358.594 411.579 mo
(\012\332)sh
365.767 411.579 mo
(\012\332)sh
374.893 411.579 mo
(\001\345)sh
385.939 411.579 mo
(\012\332)sh
393.173 411.579 mo
(\012\331)sh
400.407 411.579 mo
(\012\331)sh
%ADOBeginSubsetFont: GFNBAA+Calibri,BoldItalic Initial
ct_T42Dict begin
-0.691 -0.305 1.262 0.965
 256 array 0 1 255 {1 index exch /.notdef put} for  /GFNBAA+Calibri,BoldItalic
Type42DictBegin
[<00010000000c000c000c000c4f532f32fc0ababd000000cc000000606376
742055d14f580000012c000006ac6670676da1ea42ac000007d800000913
676c79666e39468000007af80000067a68656164f1c6048b000010ec0000
0036686865610df70e050000112400000024686d74781a02021b00001148
000026106c6f6361d7dfdaaa0000375800001ee06d6178701cfb17a30000
5638000000206e616d6521e74a2c0000565800000d83707265708c07c7b9
000063dc0000171b676469720000000000000000000000000003044b02bc
00050008059905330000011e05990533000003d000ba02000800020f0702
0304040a0204e00002ff4000acff00000001000000004d53202000210000
00a00600fe0001c4079e02262000019f0000000003c0050e000000200003
0000079e0000fe930000000000000000000000700081009c00ab00b500ba
00c100ca00d300f3010a0060008500bf00e300ea00f200fb010001070115
011c01290000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe83056d000d03c000060017
0000fffaffe9fea9ffe90000050e000600170000fffaffe9fe93050e0017
0426000600170000fffaffe9ff12ffed050e00170426000600170000fffa
ffe9fe93feb8fece060b0010050e0006001002cbfffafff001edfffa023f
00060010ff36fffafff00287000600100000fffafff0079efeaffe9f0000
00000000000000000000005f0060006e006f007000710062006700600072
0078007a007b007d007e007f0080008300850086008700890086008c008d
008e008f009100920093009400950096009700980099009a009b009c009d
009e009300960099009e0094009500000099009a00a000a200a600a800aa
00ac00ad00ae00a100a200a300a400a500a700a800a900aa00ab00a300a7
00a800aa00ab00ac00ad00ae009e00a300a600a700a900aa00ac00ad00af
00b000b100ac00ad00ae00af00b000b100b200b300b400b500af00af00b0
00b100b200b300b400b500b700b800b900b600b700b800b900ba00bb00bc
00bd00be00bf00c000c100c200c000c100c200b900ba00bb00bd00be00bf
00c000c100c200b600b700b800b900ba00bb00bc00bd00be00bf00c000c1
00c200cc00c300c400c500c600c700c800c900ca00cb00cc00cd00ce00cf
00c400c500c600c700c800c900ca00cb00ce00cf00c400c500c600c700c8
00c900ca00cb00cc00cd00ce00cf00c300c400c500c600c700c800c900ca
00cb00cc00cd00ce00cf00d000d100d200d300d400d500d600d800d900da
00db00de00df00e200e300e400ec00d000d100d400d500d600dc00dd00de
00e000e400e200e800d000d100d200d300d400d500d600d700d800d900da
00db00dc00dd00de00df00e000e100e200e300e400e600e700e800e900ed
00ee00d100d200d300d400d500d800d900da00dc00e100e800f600f700fb
0108011a011d010e011300f500f800fb010d011600f600fa0109010d0121
0127012d012e012f01340135013b014101420152012f0130006a006b0090
00910094009600980099009a009a009c0077007b008900940092009300a3
00a400a500a6008100a900ab00ac00ad00ae00af00b100b300b4009b00bb
00bb00bb00bf00bc00bd00c200c300c400c500c600c700c800c900ca00cb
00cd00d000a800ac00b100b400b500b600b700b800b900ba00bb00bc00bd
00be00c200c400c500c600c800b400ca000000b400b500b600b700b800b9
00be00bf00c300c600c700c800c900ca00cb00cf00d000aa00ad00ae00b1
00b200ba00be00c000c500c600c800c900cf00d000d100d200d5000000d4
00d900da00db00dc00dd00de00e200e500d100d300d400d100d200d800da
00db00cb00de00df00df00e100e200e400e500e600d600d700d100d300d3
00d400d500d700ce00d600db00dc00dd00de00c400bb00e100d200d200e0
00d200d100d300d500d600d900d600d600db00c900dc00ac00e100de00de
00df00e000e800eb00ed00e800e900ea00e000e700ed00bc00e300ea00e5
00ba00e700e800e300e800e900ea00cc00ed00f000f200f400ee00ef00f1
00f200f300f400f400f400c100ee00f200ee00ee00f100ef00db00f300db
00ee00ef00eb00d700f000dd00ec00f500f200f700f700f300f900f500f6
00fc00fc00f400d900fa00fb00fc00f700f700da00f900f600fa00fb00fb
00ff00fe00ff010001010102010300f900ff0100010000fc00fc00fc00e2
00fd00e900fe00fa00fe010100fd010301040106010701080109010a010b
010c010d0100010101070108010900ff0100010100fa01020104010b010c
010800ff010001060107010800f8010a010b010c010d010f011001110112
011301140115011600fd010e010f01120118010f01100111010901130114
0115011601170118010e010f011001110112011301150000011701180119
011a0000011e0120012100ce011c011e00f6011a011c011d012001220119
0102011d000000d5012301270128012901300133013500000124012500fd
012e012f013e013f012300000125012601270000012b00fe012f0130013c
013e014101440145012300ff012c0136013b013e01460000000000000000
00000000000000000000000002990092000000000000042600d8050e0105
03c000c2024e0078042600d700b100a000500058005e006a05e802cc4046
5f5e5d5c5b5a59585554535251504f4e4d4c4b4a49484746454443424140
3f3e3d3c3b3a39383736352f2e2d2c2826252423221f181411100f0d0b0a
090807060504030201002c4523466020b02660b004262348482d2c452346
236120b02661b004262348482d2c45234660b0206120b04660b004262348
482d2c4523462361b0206020b02661b02061b004262348482d2c45234660
b0406120b06660b004262348482d2c4523462361b0406020b02661b04061
b004262348482d2c0110203c003c2d2c20452320b0cd442320b8015a5158
2320b08d44235920b0ed51582320b04d44235920b0042651582320b00d44
235921212d2c20204518684420b001602045b04676688a4560442d2c01b1
0b0a432343650a2d2c00b10a0b4323430b2d2c00b0282370b101283e01b0
282370b10228453ab10200080d2d2c2045b00325456164b050515845441b
2121592d2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061
b0008b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c8a03
458a8a87b0112bb0292344b0297ae4182d2c4565b02c234445b02b23442d
2c4b525845441b2121592d2c01b005251023208af500b0016023edec2d2c
01b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c20
b001600110203c003c2d2c20b001610110203c003c2d2c00b00743b00643
0b2d2c21210c6423648bb84000622d2c21b08051580c6423648bb8200062
1bb200402f2b59b002602d2c21b0c051580c6423648bb81555621bb20080
2f2b59b002602d2c0c6423648bb84000626023212d2c4523456023456023
456023766818b08062202d2cb00426b00426b00425b0042545234520b003
266062636820b0032661658a2344442d2c2045b0005458b040442045b040
61441b2121592d2c45b1302f4523456160b0016069442d2c4b5158b02f23
70b01423421b2121592d2c4b515820b0032545695358441b2121591b2121
592d2c45b01443b0006063b0016069442d2cb02f45442d2c452320458a60
442d2c45234560442d2c4b235158b90033ffe0b134201bb3330034005944
442d2cb0164358b00326458a586466b01f601b64b020606620581b21b040
59b001615923586559b02923442310b029e01b2121212121592d2cb01643
58b004254564b020606620581b21b04059b0016123586559b0292344b004
25b00725082058021b0359b0052510b004252046b0042523423cb0072510
b006252046b00425b0016023423c2058011b0059b0052510b00425b029e0
b0072510b00625b029e0b00425b00725082058021b0359b00425b0032543
48b00625b00325b0016043481b2159212121212121212d2cb0164358b004
254564b020606620581b21b04059b0016123581b6559b0292344b00525b0
0825082058021b0359b0042510b005252046b0042523423cb00425b00725
08b0072510b006252046b00425b0016023423c2058011b0059b0042510b0
0525b029e0b02920456544b0072510b00625b029e0b00525b00825082058
021b0359b00525b003254348b00425b0072508b00625b00325b001604348
1b2159212121212121212d2c02b00425202046b004252342b0052508b003
254548212121212d2c02b0032520b0042508b0022543482121212d2c4523
20451820b00050205823652359236820b040505821b04059235865598a60
442d2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b
2121592d2c4b53234b515a58381b2121592d2cb000214b5458381b212159
2d2cb002435458b0462b1b21212121592d2cb002435458b0472b1b212121
592d2cb002435458b0482b1b21212121592d2cb002435458b0492b1b2121
21592d2c208a08234b538a4b515a5823381b2121592d2c0020b200400325
b0062649618b3812342d2c014623466023466123201020468a61b8ff8062
8ab140408a704560683a2d2c208a2349648a2353583c1b21592d2c4b5258
7d1b7a592d2cb012004b014b54422d2cb1020042b123018851b140018853
5a58b910000020885458b202010243604259b12401885158b92000004088
5458b2020202436042b12401885458b2022002436042004b014b5258b202
0802436042591bb940000080885458b202040243604259b94000008063b8
0100885458b202080243604259b94000010063b80200885458b202100243
604259b94000020063b80400885458b202400243604259595959592d2c45
1868234b51582320452064b04050587c59688a6059442d2cb00016b00225
b0022501b001233e00b002233eb10102060cb00a236542b00b234201b001
233f00b002233fb10102060cb006236542b0072342b00116012d2c20b820
00628a6023622d2cb0072558001b0159b0042510b00325b0022520b8ffff
545821cd1bed5921b006255cb006255a58b0092b5920b005254ab0042547
b004254760b0062547b0806361b00225b0005558b00325b00725496359b0
082558001b0159b00425b0062549b009255cb009255a58b0092b59b00725
46b0806361b0032520b0005558631b2159612320b0005558b080631b21b0
8059b0592bb006255c586959b00425202010b00048233ab0062658001b01
59b0052658b003252f598a12233221212d2cb00625b00a2587b00625b009
254ab0005358b00625b00a251bb00925b0072559b00225b00225070cb005
256323b00625636020b94000040063535821b00426b00426b00a1bb94000
040063655158b0042665b0042665b00a1bb00426b00426b000b00325b003
250b0d0ab0092eb00725b007250b0d0ab00b2eb00525b0052507595920b0
005558b00525b0052587b00725b007250bb0092510b00b25b0092620b8ff
ff545821cd1bed59b00525b0052507b00825b00b254923b00625b0062587
b00a2510b00b25c15920b00051b800522378b00161b00225b00725b00725
07b00a25b00d254961b08062b00525b005250bb00a252338b00625b00625
87b00825b008250bb00a2510b00b25c4b00625b0062507b00925b00c2549
b0032554b8ffa723792121212121212121212121212d2c23b0005458b940
0000001bb900004000598ab0005458b9400000001bb90000400059b05b2b
2d2c08b0005458b9400000001bb900004000590db05b2b2d2c8a8a080d8a
b0005458b9400000001bb90000400059b05b2b2d2cb00426b00426080db0
0426b00426080db05b2b2d00000100000005bd717b8dd33d5f0f3cf50019
080000000000bbeb7ccc00000000d20f8007fa78fd8d0a1e07bc00030009
0002000000000000000100000600fe0001c40aa0fa78f9cc0a1e0800019a
0000000000000000000000000399040e0000000000000000000001cf0000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000006fe003400000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000439003e000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000002d10026000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000029b009b00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
038200e80000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000a800a800a800a800a800a800a800a800a800a8
00a800a800a800a800a800a800a800a800a800a800a800a800a800a800a8
00a800a800a800a800a800a800a800a800a800a800a800a800a800a800a8
00a800a800a800a800a800a800a800a800a800a800a800a800a800a800a8
00a800a800a800a800a800a800a800a800a800a800a800a800a801520152
015201520152015201520152015201520152015201520152015201520152
015201520152015201520152015201520152015201520152015201520152
015201520152015201520152015201520152015201520152015201520152
015201520152015201520152015201520152015201520152015201520152
015201520152015201520152015201520152015201520152015201520152
015201520152015201520152015201520152015201520152015201520152
015201520152015201520152015201520152015201520152015201520152
015201520152015201520152015201520152015201520152015201520152
015201520152015201520152015201520152015201520152015201520152
015201520152015201520152015201520152015201520152015201520152
015201520152015201520152015201520152015201520152015201520152
015201520152015201520152015201520152015201520152015201520152
015201520152015201520152015201520152015201520152015201520152
015201520152015201520152015201520152015201520152015201520152
0152015201f501f501f501f501f501f501f501f501f501f501f501f501f5
01f501f501f501f501f501f501f501f501f501f501f501f501f501f501f5
01f501f501f501f501f501f501f501f501f501f501f501f501f501f501f5
01f501f501f501f501f501f501f501f501f501f501f501f501f501f501f5
01f501f501f501f501f501f501f501f501f501f501f501f501f501f501f5
01f501f501f501f501f501f501f501f501f501f501f501f501f501f501f5
01f501f501f501f501f501f501f501f501f501f501f501f501f501f501f5
01f501f501f501f501f501f501f501f501f501f501f5027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c027c027c027c027c027c027c027c027c
027c027c027c027c027c027c027c02e102e102e102e102e102e102e102e1
02e102e102e102e102e102e102e102e102e102e102e102e102e102e102e1
02e102e102e102e102e102e102e102e102e102e102e102e102e102e102e1
02e102e102e102e102e102e102e102e102e102e102e102e102e102e102e1
02e102e102e102e102e102e102e102e102e102e102e102e102e102e102e1
02e102e102e102e102e102e102e102e102e1033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d033d033d033d033d
033d033d033d033d033d033d033d033d033d033d033d000100000f6f0057
00050000000000020010002f006000000d16171b000000000000002d0222
0000000300000000006400000000000300000001000e0064000000030000
00020016032a0000000300000003003c030400000003000000040026031a
000000030000000500180340000000030000000600240358000000030000
00070076037c0000000300000008002a000e0000000300000009002003f2
000000030000000a02a00064000000030000000b00560412000000030000
000c002a0468000000030000000d02980492000000030000000e006c072a
0001000000000000003207960001000000000001000707c8000100000000
0002000b092b0001000000000003001e0918000100000000000400130923
0001000000000005000c0936000100000000000600120942000100000000
0007003b095400010000000000080015079d00010000000000090010098f
000100000000000a015007c8000100000000000b002b099f000100000000
000c001509ca000100000000000d014c09df000100000000000e00360b2b
0003000104090000006400000003000104090001000e0064000300010409
00020016032a0003000104090003003c030400030001040900040026031a
000300010409000500180340000300010409000600240358000300010409
00070076037c0003000104090008002a000e0003000104090009002003f2
000300010409000a02a00064000300010409000b00560412000300010409
000c002a0468000300010409000d02980492000300010409000e006c072a
00a9002000320030003100350020004d006900630072006f0073006f0066
007400200043006f00720070006f0072006100740069006f006e002e0020
0041006c006c002000520069006700680074007300200052006500730065
0072007600650064002e00430061006c0069006200720069002000690073
002000610020006d006f006400650072006e002000730061006e00730020
00730065007200690066002000660061006d0069006c0079002000770069
0074006800200073007500620074006c006500200072006f0075006e0064
0069006e006700730020006f006e0020007300740065006d007300200061
006e006400200063006f0072006e006500720073002e0020004900740020
006600650061007400750072006500730020007200650061006c00200069
00740061006c006900630073002c00200073006d0061006c006c00200063
006100700073002c00200061006e00640020006d0075006c007400690070
006c00650020006e0075006d006500720061006c00200073006500740073
002e0020004900740073002000700072006f0070006f007200740069006f
006e007300200061006c006c006f00770020006800690067006800200069
006d007000610063007400200069006e002000740069006700680074006c
007900200073006500740020006c0069006e006500730020006f00660020
00620069006700200061006e006400200073006d0061006c006c00200074
00650078007400200061006c0069006b0065002e002000430061006c0069
006200720069002700730020006d0061006e007900200063007500720076
0065007300200061006e006400200074006800650020006e006500770020
00720061007300740065007200690073006500720020007400650061006d
00200075007000200069006e002000620069006700670065007200200073
0069007a0065007300200074006f002000720065007600650061006c0020
00610020007700610072006d00200061006e006400200073006f00660074
0020006300680061007200610063007400650072002e004d006900630072
006f0073006f00660074003a002000430061006c00690062007200690020
0042006f006c00640020004900740061006c006900630056006500720073
0069006f006e00200035002e0037003400430061006c0069006200720069
002d0042006f006c0064004900740061006c0069006300430061006c0069
00620072006900200069007300200061002000740072006100640065006d
00610072006b0020006f006600200074006800650020004d006900630072
006f0073006f00660074002000670072006f007500700020006f00660020
0063006f006d00700061006e006900650073002e004c0075006300280061
00730029002000640065002000470072006f006f00740068007400740070
003a002f002f007700770077002e006d006900630072006f0073006f0066
0074002e0063006f006d002f007400790070006f00670072006100700068
0079002f006300740066006f006e007400730068007400740070003a002f
002f0066006f006e007400660061006200720069006b002e0063006f006d
0059006f00750020006d0061007900200075007300650020007400680069
007300200066006f006e00740020006100730020007000650072006d0069
00740074006500640020006200790020007400680065002000450055004c
004100200066006f00720020007400680065002000700072006f00640075
0063007400200069006e0020007700680069006300680020007400680069
007300200066006f006e007400200069007300200069006e0063006c0075
00640065006400200074006f00200064006900730070006c006100790020
0061006e00640020007000720069006e007400200063006f006e00740065
006e0074002e00200059006f00750020006d006100790020006f006e006c
0079002000280069002900200065006d0062006500640020007400680069
007300200066006f006e007400200069006e00200063006f006e00740065
006e00740020006100730020007000650072006d00690074007400650064
002000620079002000740068006500200065006d00620065006400640069
006e00670020007200650073007400720069006300740069006f006e0073
00200069006e0063006c007500640065006400200069006e002000740068
0069007300200066006f006e0074003b00200061006e0064002000280069
00690029002000740065006d0070006f0072006100720069006c00790020
0064006f0077006e006c006f006100640020007400680069007300200066
006f006e007400200074006f002000610020007000720069006e00740065
00720020006f00720020006f00740068006500720020006f007500740070
00750074002000640065007600690063006500200074006f002000680065
006c00700020007000720069006e007400200063006f006e00740065006e
0074002e0068007400740070003a002f002f007700770077002e006d0069
00630072006f0073006f00660074002e0063006f006d002f007400790070
006f006700720061007000680079002f0066006f006e00740073002f0064
0065006600610075006c0074002e0061007300700078a92032303135204d
6963726f736f667420436f72706f726174696f6e2e20416c6c2052696768
74732052657365727665642e43616c696272692069732061206d6f646572
6e2073616e732073657269662066616d696c79207769746820737562746c
6520726f756e64696e6773206f6e207374656d7320616e6420636f726e65
72732e204974206665617475726573207265616c206974616c6963732c20
736d616c6c20636170732c20616e64206d756c7469706c65206e756d6572
616c20736574732e204974732070726f706f7274696f6e7320616c6c6f77
206869676820696d7061637420696e2074696768746c7920736574206c69
6e6573206f662062696720616e6420736d616c6c207465787420616c696b
652e2043616c696272692773206d616e792063757276657320616e642074
6865206e65772072617374657269736572207465616d20757020696e2062
69676765722073697a657320746f2072657665616c2061207761726d2061
6e6420736f6674206368617261637465722e4d6963726f736f66743a2043
616c6962726920426f6c64204974616c696356657273696f6e20352e3734
43616c696272692d426f6c644974616c696343616c696272692069732061
2074726164656d61726b206f6620746865204d6963726f736f6674206772
6f7570206f6620636f6d70616e6965732e4c756328617329206465204772
6f6f74687474703a2f2f7777772e6d6963726f736f66742e636f6d2f7479
706f6772617068792f6374666f6e7473687474703a2f2f666f6e74666162
72696b2e636f6d596f75206d617920757365207468697320666f6e742061
73207065726d6974746564206279207468652045554c4120666f72207468
652070726f6475637420696e207768696368207468697320666f6e742069
7320696e636c7564656420746f20646973706c617920616e64207072696e
7420636f6e74656e742e20596f75206d6179206f6e6c792028692920656d
626564207468697320666f6e7420696e20636f6e74656e74206173207065
726d69747465642062792074686520656d62656464696e67207265737472
696374696f6e7320696e636c7564656420696e207468697320666f6e743b
20616e6420286969292074656d706f726172696c7920646f776e6c6f6164
207468697320666f6e7420746f2061207072696e746572206f72206f7468
6572206f75747075742064657669636520746f2068656c70207072696e74
20636f6e74656e742e687474703a2f2f7777772e6d6963726f736f66742e
636f6d2f7479706f6772617068792f666f6e74732f64656661756c742e61
73707800b10903b802a3b21b341fb8029bb21a351fb8028eb21a351fb802
72b219371fb80271b219371fb80270b219371fb8025cb218391fb8025bb2
18391fb8025ab218391fb80223b2173b1fb80222b2173b1fb80221b2173b
1fb80220b2173b1fb8021fb2173b1fb8021eb2173b1fb8021db2173b1fb8
021cb2173b1fb80219b2173b1fb8021bb2173b1fb80218b2173b1fb80217
b216461fb801e1b216461fb801e0b216461fb801dfb216461fb801deb216
461fb801ddb216461fb801dcb216461fb801dbb216461fb801dab216461f
b801d9b216461fb801d8b216461fb801d7b216461fb801d6b216461fb801
d3b216461fb801d5b216461fb801d4b216461fb801d2b216461fb801d1b2
16461fb801d0b216461fb801ceb216461fb801cdb216461fb801ccb21646
1fb801cbb216461fb801cab216461fb801c9b216461fb801c8b216461fb8
01c7b216461fb801c6b216461fb801c4b216461fb801c3b216461fb801c2
b216461fb801c1b216461fb801bab215461fb801cfb215551fb801b9b215
551fb801b8b215551fb801b7b215551fb801b6b215641fb801b5b215641f
b801b4b215641fb801b3b215641fb801b2b215641fb801c5b215641fb803
34b21f2d1fb80333b21f2d1fb80332b21f2d1fb80331b21f2d1fb80330b2
1f2d1fb8032fb21b341fb8032eb21f2d1fb8030db21e2f1fb8030bb21e2f
1fb802fbb21d301fb802fab21d301fb802f8b21d301fb802f7b21d301fb8
02f6b21d301fb802f5b21d301fb802f4b21d301fb802f3b21d301fb802f2
b21d301fb802dab21c331fb802d9b21c331fb802d8b21c331fb802d7b21c
331fb802d5b21c331fb802d4b21c331fb802d3b21c331fb802b9b21b341f
b8030cb21b341fb802b7b21b341fb802d2b21b341fb802d1b21b341fb802
b6b21b341fb802b4b21b341fb802b8b21a351fb802a2b21a351fb802a1b2
1a351fb802a0b21a351fb802b5b21a351fb8029eb21a351fb802d6b21a35
1fb8029cb21a351fb8029fb219371fb8028cb219371fb8028db219371fb8
0289b2173b1fb80286b219371fb80285b219371fb8026fb218391fb8028b
b218391fb80287b218391fb8026db218391fb8026cb218391fb8026bb218
391fb8026ab2173b1fb80255b2173b1fb80259b2173b1fb80258b2173b1f
b80257b2173b1fb80256b2173b1fb8028ab2173b1fb80253b2173b1fb802
51b2173b1fb8029db2173b1fb8024eb2173b1fb80288b2173b1fb80250b2
173b1fb8024fb2173b1fb8024db2173b1fb8024cb2173b1fb8030fb2173b
1fb8024ab2173b1fb8024bb2173b1fb80216b216461fb80215b216461fb8
026eb216461fb80252b216461fb80214b216461fb80213b216461fb80212
b216461fb80211b216461fb80210b216461fb8020fb216461fb8020eb216
461fb8020db216461fb8020cb216461fb8020bb216461fb8020ab216461f
b80254b216461fb80209b216461fb801c0b215641fb801bfb215641fb803
1eb21f2d1fb8031db21f2d1fb8031cb21f2d1fb8031bb21f2d1fb80319b2
1f2d1fb80318b21f2d1fb80304b21e2f1fb80303b21e2f1fb802e7b21d30
1fb802e6b21d301fb802e5b21d301fb802e4b21d301fb802c7b21c331fb8
02c6b21c331fb802c5b21c331fb802c4b21b341fb802c3b21b341fb802ad
b21b341fb802acb21b341fb802abb21b341fb8031ab21a351fb80236b217
3b1fb80235b2173b1fb80263b216461fb80316b21f2d1fb80315b21f2d1f
b80314b21f2d1fb80313b21f2d1fb80312b21f2d1fb80311b21f2d1fb803
10b21f2d1fb80301b21e2f1fb80300b21e2f1fb802ffb21e2f1fb802fdb2
1e2f1fb802fcb21e2f1fb802e2b21d301fb802e1b21d301fb802e0b21d30
1fb802dfb21d301fb802deb21d301fb802ddb21d301fb802dcb21d301fb8
02dbb21d301fb802c2b21c331fb802c1b21c331fb802c0b21c331fb802bf
b21c331fb802beb21c331fb802bdb21c331fb802bcb21c331fb802bbb21c
331fb802bab21c331fb802a9b21b341fb802a8b21b341fb802a7b21b341f
b802a6b21b341fb802a5b21b341fb802a4b21b341fb802e3b21a351fb802
95b21a351fb80294b21a351fb80291b21a351fb8028fb21a351fb80293b2
19371fb80292b219371fb8027ab219371fb80279b219371fb80278b21937
1fb80277b219371fb80290b219371fb80276b219371fb80275b219371fb8
0274b219371fb80273b219371fb80262b218391fb8025fb218391fb8025e
b218391fb8025db218391fb80261b218391fb80234b2173b1fb80233b217
3b1fb80232b2173b1fb80231b2173b1fb80230b2173b1fb80260b2173b1f
b8022fb2173b1fb8022eb2173b1fb8022db2173b1fb8022bb2173b1fb802
2ab2173b1fb80229b2173b1fb80226b2173b1fb80225b2173b1fb80224b2
173b1fb80228b2173b1fb80227b2173b1fb80302b216461fb8022cb21646
1fb801f6b216461fb801f4b216461fb801f3b216461fb801f2b216461fb8
01f1b216461fb801f0b216461fb801efb216461fb801eeb216461fb801ed
b216461fb801ecb216461fb801ebb216461fb801eab216461fb801e9b216
461fb801e8b216461fb801e7b216461fb801e6b216461fb801e5b216461f
b801f5b216461fb801e4b216461fb801e3b216461fb801e2b216461fb803
2db21f2d1fb8032cb21f2d1fb8032bb21f2d1fb8032ab21f2d1fb80329b2
1f2d1fb80328b21f2d1fb80327b21f2d1fb80325b21f2d1fb80323b21f2d
1fb80322b21f2d1fb80321b21f2d1fb8031fb21f2d1fb8030ab21e2f1fb8
0309b21e2f1fb80308b21e2f1fb80307b21e2f1fb80306b21e2f1fb802f1
b21d301fb802f0b21d301fb802efb21d301fb802eeb21d301fb802edb21d
301fb802ecb21d301fb802eab21d301fb802e9b21d301fb802e8b21d301f
b802cfb21c331fb802ceb21c331fb802ebb21c331fb802d0b21c331fb802
cdb21c331fb802ccb21b341fb802cab21b341fb802c9b21b341fb802c8b2
1b341fb80326b21b341fb802b2b21a351fb802b0b21a351fb802afb21a35
1fb802aeb21a351fb8029ab21a351fb80299b21a351fb80298b21a351fb8
02cbb21a351fb802aab21a351fb80305b219371fb80296b219371fb80283
b219371fb80280b219371fb80281b219371fb8027fb219371fb8027eb219
371fb80265b218391fb802b3b218391fb80269b218391fb80268b2173b1f
b80266b2173b1fb80264b2173b1fb802b1b2173b1fb80245b2173b1fb802
48b2173b1fb80242b2173b1fb80241b2173b1fb80240b2173b1fb8023fb2
173b1fb80284b2173b1fb80282b2173b1fb80297b2173b1fb8023cb2173b
1fb8023eb2173b1fb8023bb2173b1fb8023ab2173b1fb80239b2173b1fb8
0249b2173b1fb80247b2173b1fb80246b2173b1fb80238b2173b1fb80237
b2173b1fb80208b216461fb80207b216461fb8023db216461fb80206b216
461fb80205b216461fb80204b216461fb80203b216461fb80202b216461f
b80201b216461fb80244b216461fb80243b216461fb80200b216461fb802
7bb216461fb801ffb216461fb801feb216461fb80267b216461fb801fdb2
16461fb801fcb216461fb801fbb216461fb801fab216461fb801f9b21646
1fb801f8b216461fb801beb215641fb801bdb215641fb801bcb215641fb8
01bbb215641fb801b1b2148b1fb801b0b2148b1fb8027db219371fb8027c
b219371fb8011e40c710421ff70e481ff60e481ff50d4a1fe20d4a1fe10d
4a1fe00c4e1fc50c4e1fc40c4e1fc30c4e1fc20c4e1fc10c4e1fc00c4e1f
bf0b561fbe0b561fb40b561fb30b561fb20b561fb10b561fb00b561faf0b
561fae0b561fad0b561fac0b561fab0b561faa0b561fa90b561fa80b561f
a70b561fa60b561fa50b561fa40b561fa30b561fa10a681fa00a681f9f0a
681f9e0a681f9d0a681f9c0a681f9b0a681f9a0a681f990a681f980a681f
970a681f960a681f9509771f9109771f9009771f8f09771f8e09771fb903
530350400a561f8d09771f8c09651f4109035203500068001f0351035000
68001f01a2b213321fb801a1b213321fb801a0b212371fb8019fb212371f
b80191b212371fb80190b211401fb8018fb211401fb8018eb211401fb801
8db211401fb8018cb211401fb8018bb211401fb8018ab211401fb80189b2
11401fb80188b211401fb80187b211401fb8014eb211401fb8014db21042
1fb8014cb210421fb8014bb210421fb8014ab210421fb80149b210421fb8
0148b210421fb80147b210421fb80146b210421fb80145b210421fb80144
b20f451fb80143b20f451fb80142b20f451fb8011db20f451fb8011cb20f
451fb8011bb20f451fb8011ab20f451fb80119b20f451fb80118b20e481f
b80117b20e481fb80116b20e481fb80115b20e481fb80114b20e481fb801
13b20e481fb80112b20d4a1fb8011140570d4a1ff40d4a1ff30d4a1ff20d
4a1ff10d4a1ff00d4a1fef0d4a1fee0c4e1fdf0c4e1fde0c4e1fdd0c4e1f
dc0c4e1fdb0c4e1fda0c4e1fd90b561fd80b561fbd0b561fbc0b561fba0b
561fb90b561fa20a681f9409771fb80199b213321fb80198b213321fb801
69b211401fb80168b211401fb80167b211401fb80166b211401fb80165b2
11401fb80164b211401fb80163b211401fb80162b211401fb80161b21140
1fb80160b211401fb80135b211401fb80134b210421fb80133b210421fb8
0132b210421fb80131b210421fb80130b210421fb8012fb210421fb8012e
b210421fb8012db20f451fb8012cb20f451fb80107b20f451fb80106b20f
451fb80105b20f451fb9034f034eb23b1f34bf034e0044034e0054034e00
03ffc0034eb2292c46b9ffc0034eb2121646b801adb213141fb801acb213
1b1fb801abb2131b1fb801aab213231fb801a9b213231fb801a8b213231f
b801a7b213321fb801a6b213321fb801a5b213321fb801a4b213321fb801
a3b213321fb80197b213321fb80196b213321fb80195b213321fb80194b2
12371fb80193b212371fb80192b212371fb8015fb212371fb8015eb21140
1fb8015db211401fb8015cb211401fb8015bb211401fb8015ab211401fb8
0159b211401fb80158b211401fb80157b211401fb80156b211401fb80155
b211401fb80154b211401fb80153b211401fb80152b211401fb80151b211
401fb80150b211401fb8014fb211401fb8012bb211401fb8012ab210421f
b80129b210421fb80128b210421fb80127b210421fb80126b210421fb801
25b210421fb80124b210421fb80123b210421fb80122b210421fb80121b2
0f451fb80120b20f451fb8011fb20f451fb80104b20f451fb80103b20f45
1fb80102b20f451fb80101b20f451fb8010040830e481fff0e481ffe0e48
1ffd0e481ffc0e481ffb0e481ffa0d4a1ff90d4a1ff80d4a1fec0d4a1feb
0d4a1fea0d4a1fe90d4a1fe80d4a1fe70d4a1fe60c4e1fe50c4e1fe40c4e
1fe30c4e1fcf0c4e1fce0c4e1fcd0c4e1fcc0c4e1fcb0c4e1fca0c4e1fc9
0c4e1fc80c4e1fc70c4e1fc60c4e1fb80c4e1fb70b561fb60b561fb50b56
1fb801afb213321fb801aeb213321fb8019eb213321fb8019db213321fb8
019cb212371fb8019bb212371fb8019ab212371fb80186b212371fb80185
b2112e1fb80184b211401fb80183b211401fb80182b211401fb80181b211
401fb80180b211401fb8017fb211401fb8017eb211401fb8017db211401f
b8017cb211401fb8017bb211401fb8017ab211401fb80179b211401fb801
78b211401fb80177b211401fb80176b211401fb80175b211401fb80174b2
11401fb80173b211401fb80172b211401fb80171b211401fb80170b21140
1fb8016fb211401fb8016eb211401fb8016db211401fb8016cb211401fb8
0141b211401fb80140b210421fb8013fb210421fb8013eb210421fb8013d
b210421fb8013cb210421fb8013bb210421fb8013ab210421fb80139b210
421fb80138b210421fb80137b20f451fb80136b20f451fb80110b20f451f
b8010fb20f451fb8010eb20f451fb8010db20f451fb8010cb20f451fb801
0bb20e481fb8010ab20e481fb80109b20e481fb80108402f0e481fed0c4e
1fd70c4e1fd60c4e1fd50c4e1fd40c4e1fd30c4e1fd20c4e1fd10c4e1fd0
0b561f9309771f9209771fb8016bb212371fb8016a406e11401f8503251f
84032e1f83012e1f8248805581ab80557f487d557eab7d550b7d3b7d4b7d
030b7d1b7d4b7d7b7dab7ddb7d067c487a557bab7a55047a147a020a7948
775578ab77550b77010c764875555475e475f47503147554756475747594
75d475e47507a475b475c47503b8ffc0401275383b468075907502147574
75020075010fb8ffc04020750b0e467448725573ab725504722472547203
39f07201024072016072707202b8ffc0b372242846b8ffc0401b72161a46
2072407250720371486f5570ab6f556e486d55ef6d0110410a0355002003
5500d003550003000f0354008f035440ff02006c706c02096a03251f692e
675568ab6755662e645565ab6455632e6255612e60555f2e5d555eab5d55
5c2e5a555bab5a55592e58555703251f562e545555ab5455532e515552ab
51554f2e4e554e03251f4d2e4b554cab4b554a2e485549ab485550480147
2e46554503361f001f01001e01001e701e801ef01e040b601d701d02701d
e01df01d03701cf01c027f1b010f1a7f1a8f1a030f1a8f1a020f1a8f1a02
0f191f198f199f19af19050f198f199f19030c7012801202701180110230
114011d011e011040011a011020f8f0f9f0faf0f034f0f5f0fef0fff0f04
af0f01af0ebf0ecf0e034f0e5f0e6f0e030f0eaf0ebf0e0310400e2e3146
0f0d404b1f0d2f0d033c2f0d3f0d4f0d038f0d01400d2e3246400d242746
3f0c4f0c5f0c039f0c01400c262946ef0aff0a02400a2427464009262d46
4009171b460003012001010001100120010308b8ffc0b401151f4603bd01
00010000050001019000542b4bb807ff524bb008505bb00188b02553b001
88b040515ab00688b000555a5b58b101018e59b101024354b0144b515a58
b101018e59858d8d001d424bb01d5358b203a0a01d42594bb0805358b203
40401d42594bb0ff5358b20300001d42592b5e7375732b2b2b732b73742b
2b73745e732b5e7374757374755e73747573015e7374737475757473745e
737473002b2b732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
5e737473732b2b2b732b2b73755f755e732b2b2b5e7373732b7374752b5e
732b2b5e732b2b73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b742b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b185f5e0000>
[1659 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> GFNBAA+Calibri,BoldItalic AddT42Char 
1 0 0 <00050000fe7303e0050e00030007003b00550056004fb52d162d16083c41
0a023a0049000701b00002002002000008000101b1401204022537060351
1b0d117051015144070254003fdddedd5ddeddcd3fdddecd012fddedd6ed
10fdd6ed1239392f2f3130011121110111211101140e020707060623222e
02373736363333323e0235342e0223220e0223222635343e02373e033332
1e0201140e0207060623222e0235343e0237363633321e020103e0fc4f03
46fd240276204468481e032d25161f1207011905231a0b2f4228120d1d2f
23263a291a06080704060a07082737422245674422fecb04080e090e2b20
1c23130604090f0b0d29211a221307fe26050efaf2050efb570444fbbc03
1136654e3306790d0b02050908a7211b1e303b1e14251d110d0f0d0e0e07
1c1f1c0707120f0a233d51fd9e091c201d0a0d0e0910150c0b1d1f1e0a0e
0c080f16fd21>GFNBAA+Calibri,BoldItalic AddT42Char 
GFNBAA+Calibri,BoldItalic /CharStrings get begin
/space 3 def
end
GFNBAA+Calibri,BoldItalic /Encoding get
dup 32 /space put
pop
end
%ADOEndSubsetFont
/WDZEMT+Calibri,BoldItalic /GFNBAA+Calibri,BoldItalic findfont ct_VMDictPut
/WDZEMT+Calibri,BoldItalic*1 
[32{/.notdef}rp /space 223{/.notdef}rp]
WDZEMT+Calibri,BoldItalic nf
WDZEMT+Calibri,BoldItalic*1 [12.0568 0 0 -12.0023 0 0 ]msf
407.491 411.579 mo
( )sh
grestore
gsave
351.86 439.62 mo
407.959 439.62 li
407.959 421.62 li
351.86 421.62 li
cp
clp
/WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [12.0568 0 0 -12.0023 0 0 ]msf
351.86 434.979 mo
(\012\331)sh
359.094 434.979 mo
(\012\331)sh
366.327 434.979 mo
(\012\332)sh
375.393 434.979 mo
(\001\345)sh
386.439 434.979 mo
(\012\331)sh
393.673 434.979 mo
(\012\331)sh
400.907 434.979 mo
(\012\332)sh
WDZEMS+Calibri,Bold*1 [12.0568 0 0 -12.0023 0 0 ]msf
407.991 434.979 mo
( )sh
grestore
gsave
352.51 483.66 mo
408.609 483.66 li
408.609 465.66 li
352.51 465.66 li
cp
clp
/WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [12.0568 0 0 -12.0023 0 0 ]msf
352.51 479.019 mo
(\012\331)sh
359.744 479.019 mo
(\012\331)sh
366.977 479.019 mo
(\012\331)sh
376.043 479.019 mo
(\001\345)sh
387.089 479.019 mo
(\012\332)sh
394.323 479.019 mo
(\012\332)sh
401.496 479.019 mo
(\012\332)sh
WDZEMS+Calibri,Bold*1 [12.0568 0 0 -12.0023 0 0 ]msf
408.641 479.019 mo
( )sh
grestore
407.52 443.58 mo
402.48 443.58 li
395.79 443.58 li
387.45 443.58 li
377.46 443.58 li
365.82 443.58 li
352.53 443.58 li
@
410.83 488.34 mo
465.889 488.34 li
465.889 396.422 li
410.83 396.422 li
cp
1 1 1 rgb
ef
410.83 488.34 mo
465.889 488.34 li
465.889 396.422 li
410.83 396.422 li
cp
.136538 .123054 .126659 rgb
@
465.67 419.58 mo
460.67 419.58 li
454.03 419.58 li
445.75 419.58 li
435.83 419.58 li
424.27 419.58 li
411.08 419.58 li
@
465.89 465.3 mo
460.84 465.3 li
454.15 465.3 li
445.81 465.3 li
435.83 465.3 li
424.19 465.3 li
410.9 465.3 li
@
gsave
455.76 468.92 mo
455.76 439.128 li
419.759 439.128 li
419.759 468.92 li
cp
clp
/WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [0 -20.0287 -20.0367 0 0 0 ]msf
445.109 462.555 mo
(\006\256)sh
WDZEMS+Calibri,Bold*1 [0 -12.0285 -12.0333 0 0 0 ]msf
445.109 445.443 mo
( )sh
grestore
410.83 468.42 mo
410.83 464.72 li
410.83 459.6 li
410.83 453.08 li
410.83 445.15 li
410.83 435.81 li
@
gsave
409.67 416.22 mo
465.769 416.22 li
465.769 398.219 li
409.67 398.219 li
cp
clp
/WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [12.0568 0 0 -12.0023 0 0 ]msf
409.67 411.579 mo
(\012\332)sh
416.874 411.579 mo
(\012\331)sh
424.107 411.579 mo
(\012\331)sh
433.203 411.579 mo
(\001\345)sh
444.249 411.579 mo
(\012\332)sh
451.483 411.579 mo
(\012\331)sh
458.717 411.579 mo
(\012\331)sh
WDZEMT+Calibri,BoldItalic*1 [12.0568 0 0 -12.0023 0 0 ]msf
465.801 411.579 mo
( )sh
grestore
gsave
410.79 439.26 mo
466.889 439.26 li
466.889 421.26 li
410.79 421.26 li
cp
clp
/WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [12.0568 0 0 -12.0023 0 0 ]msf
410.79 434.619 mo
(\012\331)sh
417.994 434.619 mo
(\012\332)sh
425.197 434.619 mo
(\012\331)sh
434.323 434.619 mo
(\001\345)sh
445.369 434.619 mo
(\012\331)sh
452.603 434.619 mo
(\012\332)sh
459.837 434.619 mo
(\012\332)sh
WDZEMS+Calibri,Bold*1 [12.0568 0 0 -12.0023 0 0 ]msf
466.921 434.619 mo
( )sh
grestore
gsave
410.82 483.66 mo
466.919 483.66 li
466.919 465.66 li
410.82 465.66 li
cp
clp
/WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [12.0568 0 0 -12.0023 0 0 ]msf
410.82 479.019 mo
(\012\331)sh
418.054 479.019 mo
(\012\331)sh
425.227 479.019 mo
(\012\332)sh
434.353 479.019 mo
(\001\345)sh
445.399 479.019 mo
(\012\332)sh
452.603 479.019 mo
(\012\331)sh
459.837 479.019 mo
(\012\332)sh
WDZEMS+Calibri,Bold*1 [12.0568 0 0 -12.0023 0 0 ]msf
466.951 479.019 mo
( )sh
grestore
465.83 443.58 mo
460.79 443.58 li
454.1 443.58 li
445.76 443.58 li
435.77 443.58 li
424.13 443.58 li
410.84 443.58 li
@
469.51 488.34 mo
524.569 488.34 li
524.569 396.422 li
469.51 396.422 li
cp
1 1 1 rgb
ef
469.51 488.34 mo
524.569 488.34 li
524.569 396.422 li
469.51 396.422 li
cp
.136538 .123054 .126659 rgb
@
524.36 419.58 mo
519.36 419.58 li
512.71 419.58 li
504.43 419.58 li
494.52 419.58 li
482.96 419.58 li
469.77 419.58 li
@
524.57 465.3 mo
519.53 465.3 li
512.84 465.3 li
504.5 465.3 li
494.51 465.3 li
482.87 465.3 li
469.58 465.3 li
@
gsave
514.62 469.06 mo
514.62 439.268 li
478.619 439.268 li
478.619 469.06 li
cp
clp
/WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [0 -20.0287 -20.0367 0 0 0 ]msf
503.969 462.695 mo
(\006\256)sh
WDZEMS+Calibri,Bold*1 [0 -12.0285 -12.0333 0 0 0 ]msf
503.969 445.583 mo
( )sh
grestore
469.51 468.42 mo
469.51 464.72 li
469.51 459.6 li
469.51 453.08 li
469.51 445.15 li
469.51 435.81 li
@
gsave
468.39 416.58 mo
524.489 416.58 li
524.489 398.58 li
468.39 398.58 li
cp
clp
/WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [12.0568 0 0 -12.0023 0 0 ]msf
468.39 411.939 mo
(\012\332)sh
475.624 411.939 mo
(\012\332)sh
482.857 411.939 mo
(\012\331)sh
491.923 411.939 mo
(\001\345)sh
502.969 411.939 mo
(\012\331)sh
510.173 411.939 mo
(\012\332)sh
517.407 411.939 mo
(\012\332)sh
WDZEMT+Calibri,BoldItalic*1 [12.0568 0 0 -12.0023 0 0 ]msf
524.521 411.939 mo
( )sh
grestore
gsave
469.11 439.62 mo
525.209 439.62 li
525.209 421.62 li
469.11 421.62 li
cp
clp
/WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [12.0568 0 0 -12.0023 0 0 ]msf
469.11 434.979 mo
(\012\331)sh
476.314 434.979 mo
(\012\332)sh
483.517 434.979 mo
(\012\332)sh
492.643 434.979 mo
(\001\345)sh
503.689 434.979 mo
(\012\331)sh
510.923 434.979 mo
(\012\331)sh
518.157 434.979 mo
(\012\332)sh
WDZEMS+Calibri,Bold*1 [12.0568 0 0 -12.0023 0 0 ]msf
525.241 434.979 mo
( )sh
grestore
gsave
469.5 483.66 mo
525.599 483.66 li
525.599 465.66 li
469.5 465.66 li
cp
clp
/WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [12.0568 0 0 -12.0023 0 0 ]msf
469.5 479.019 mo
(\012\332)sh
476.734 479.019 mo
(\012\331)sh
483.967 479.019 mo
(\012\331)sh
493.033 479.019 mo
(\001\345)sh
504.079 479.019 mo
(\012\331)sh
511.313 479.019 mo
(\012\331)sh
518.547 479.019 mo
(\012\332)sh
WDZEMS+Calibri,Bold*1 [12.0568 0 0 -12.0023 0 0 ]msf
525.631 479.019 mo
( )sh
grestore
524.52 443.58 mo
519.47 443.58 li
512.78 443.58 li
504.44 443.58 li
494.46 443.58 li
482.82 443.58 li
469.53 443.58 li
@
%ADOBeginSubsetFont: WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H 1 GetGlyphDirectory
37 <001C60D8A8C9B64EDFFBC5F0FB660C6E1DA634C0D3DFD7638F691800E53B
EA8B59F2DCC0C9592C02A8457AFE92A71AFF8AE9C49F02FD6B78E1BBB16BA469
BEED11AD1B59668A849D6901775E26A2CD56EF27D0EB2872A9E71ED807A27FCE
A0DD67E892F9BB8A9A405355EF66828A19603719E873D5B1727E7EC58625ED85
F9E20DED9BCDA72DAE93C3648BD48634FA18C36B264CC99C6EAB172B6B7F6A90
6495C5C532A40B75A4A03AB9107FA00AB61C1EACE9> |
!
end
end end
%ADOEndSubsetFont
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
402.26 386.34 mo
(\000%)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
402.26 386.34 mo
(\000%) false chp
.0071429 lw
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
414.275 386.34 mo
(\0005)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
414.275 386.34 mo
(\0005) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
427.282 386.34 mo
(\000$)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
427.282 386.34 mo
(\000$) false chp
@
%ADOBeginSubsetFont: WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H 1 GetGlyphDirectory
48 <001C60D8A8C9B6B41CB5135377F63047D687DDD4732256121C08BDC25123
F0EC60459DFA189BDBF0851BC0BA70232EBBCCC091A52AE18B18D13E11DF1F1C
0B01E3BED50DA3474889D5174A46B0> |
!
end
end end
%ADOEndSubsetFont
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
439.297 386.34 mo
(\0000)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
439.297 386.34 mo
(\0000) false chp
@
%ADOBeginSubsetFont: WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H 1 GetGlyphDirectory
3 <001C60D8A8C9B854D00D> |
!
end
end end
%ADOEndSubsetFont
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
454.3 386.34 mo
(\000\003)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
454.3 386.34 mo
(\000\003) false chp
@
%ADOBeginSubsetFont: WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H 1 GetGlyphDirectory
11 <001C60D8A8C9B81F2C3A905B4292D22857E244293C6B1762613CD82C5CD8
44A761925A0220289C9ADA9D9554DBE251CD86E8E0DE375F391110C98F7E664F
05268965613C80D3797E> |
!
end
end end
%ADOEndSubsetFont
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
459.31 386.34 mo
(\000\013)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
459.31 386.34 mo
(\000\013) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
465.32 386.34 mo
(\000%)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
465.32 386.34 mo
(\000%) false chp
@
%ADOBeginSubsetFont: WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H 1 GetGlyphDirectory
12 <001C60D8A8C9B81F2C6205DBA33BA26EAB4146D925D4351E507C545BE783
C26B53FF649362084DE143811D4FD4BC71DB2585CA8CCDD263C92524ACFF6750
2E557639255FE9> |
!
end
end end
%ADOEndSubsetFont
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
477.33 386.34 mo
(\000\014)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
477.33 386.34 mo
(\000\014) false chp
@
3 lw
360 151.91 mo
360 163.64 li
360 176.6 li
360 190.8 li
360 206.23 li
@
299.33 803.8 mo
299.33 793.85 307.39 785.8 317.33 785.8 cv
327.27 785.8 335.33 793.85 335.33 803.8 cv
335.33 803.8 li
335.33 813.74 327.27 821.8 317.33 821.8 cv
307.39 821.8 299.33 813.74 299.33 803.8 cv
cp
1 1 1 rgb
ef
2.25 lw
299.33 803.8 mo
299.33 793.85 307.39 785.8 317.33 785.8 cv
327.27 785.8 335.33 793.85 335.33 803.8 cv
335.33 803.8 li
335.33 813.74 327.27 821.8 317.33 821.8 cv
307.39 821.8 299.33 813.74 299.33 803.8 cv
cp
.136538 .123054 .126659 rgb
@
299.33 803.8 mo
335.33 803.8 li
@
317.33 821.8 mo
317.33 785.8 li
@
253.83 931.69 mo
397.83 931.69 li
397.83 899.6 li
253.83 899.6 li
cp
.860359 .863234 .87069 rgb
ef
1.5 lw
253.83 931.69 mo
397.83 931.69 li
397.83 899.6 li
253.83 899.6 li
253.83 931.69 li
@
245.33 923.19 mo
389.33 923.19 li
389.33 891.1 li
245.33 891.1 li
cp
1 1 1 rgb
ef
245.33 923.19 mo
389.33 923.19 li
389.33 891.1 li
245.33 891.1 li
cp
.136538 .123054 .126659 rgb
@
%ADOBeginSubsetFont: HJCBAA+TIMES#20NEW#20ROMAN,Bold Initial
ct_T42Dict begin
-0.555 -0.305 2 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /HJCBAA+TIMES#20NEW#20ROMAN,Bold
Type42DictBegin
[<00010000000c000c000c000c4f532f3216615a8d000000cc000000606376
742070f2f1560000012c000008266670676d682061fb00000954000005f2
676c7966feba328a00006f980000089e68656164e791242400000f480000
00366868656113040d9000000f8000000024686d7478406201e000000fa4
0000238e6c6f63616eb06c170000333400001aba6d617870165013a90000
4df0000000206e616d65295bf98d00004e1000000e42707265706b6e3b5c
00005c5400001341676469720000000000000000000000000003036a02bc
00050008059a053300000125059a0533000003a000660212010502020803
070505020304e0002affc00078410000000900000000544d432000200020
fffc056bfe460133072101bb400001ffffff000003a7054c000000200004
058e001f054c001f054c001c0394001b0000ffe10000ffe40000ffe8fe4a
fffc056b0023fe6affe00313000001240000012400000000000000000025
0084002400e8009600bf005d00cb02030045012e00580004011800190002
0139004b011000170005010a00280023004b00500015004a00e5010d00af
003100ea014600810125004f009c0022004e00160041009100a00147ffe9
008100d3016900ab001700a801400027004c0148ffdf00510050ffb7012e
0000003b0097009a010e001f004c010a0123ffde00220073008700ba00d6
00ff005a009805a0ffe900500052006effb7005c00d1015a015bff1c0049
006e007e009800a100bd00e4018801c00405ff6000350062007201070113
01280382ffa8003805d809b5ffc4ffd00010006e00a100ba00ec022b0446
ffee004000e80401ff680003001300330033006e00a200b600dc01180135
0343000e0034005c005d007c00af0328003b00480089009c00ba017b01af
030effa4001700370063007f00e0017801c0022105d805f0ff7a00120027
00340052008a00a400c100c300eb011801460154036dfe3fff4e00010008
002b0045006e0084008600ae00af00c200c200c4010f01210149017b01c1
01de01e1036e03e6006300a700ed00f600f801280169017e023f02820532
fd81ffb5002600350040004500490057006c00ac01260140015b017b019c
0277027e027f03b603dc042804efff38ffc30006002f0040008200aa00b6
00ce00d300d700e50146014d01d6027e03b30586ff7b0012002f0068007f
008400a500b900f501050109010c01140120013301370178017b01c001e1
021d02230258036203af058cff79ff8d00210024005d00650068006a0083
008500b700cf00e200eb00ed011a0120012f0137013f0150018d018f01c4
02cf0357035c03960440049604ab04c204fc051105c2fed1fee000130021
00240030004d004d005d0066007a007c00b800b800c300da0103011b011e
012f013d014a0150015f0166017c0190019501a301a601b601c701d001e9
01ef01f90218028c029402bb02c502cf02d0031d032a0344039f03cc0421
04da04fb0761fd1dfebffeefff0bff2bff33ff90ff9cffdbffed00010008
001c0025003f0043005a006b0080008400900095009d00a700b400cd00d5
00d600df00df00df00e400f000f600fb010601130119011b012201230127
012c013f015701580177018a019301a401c601e101e401fc0200020c0222
0222022a0236024a025c028202ec02fc030a032303410378039703d203fa
04790532053205ab05b505f006e4072508ccfc9bfddefe00fe69fe96fe9b
ff3500030006000e00130019003400420048004a00570064007100710072
00760077007a007a0083009c00af00af00b200bb00c800cc00cf00cf00db
00dc00df00e400e400e400e900eb00f400fd00fe01020105010501080108
011b01220123013001370143015b016001650178017801780178017b0182
018901980198019b019e01a101a601d101d201d301df01e301f502000200
022d02410247024a0250025b025d025d025f02630281028b02b402b402ce
02d602db02e202fa03100311031f0327034503670388038a03b003b403d4
03d5042604410448046b04c704d1053205480549055f0563058b05a105a3
05c205ca05e405ff069306a206b806e8070a073607500754078907a907bb
07dc07ff08270120014d011b0129000000000000000000000093015b042f
029001ff02b800db00be027403cb029401ab000000000000000000000000
058a038a0364005f02b803bd029d7c9003e203ac02820000044400000000
003d010a00cc00bc00cc05d3041505e800c7021a00ee00000194036102be
029902180136033b048504cc0050007905a305a302df020702af000001eb
0064005f0055011900f2045600ef00c800cf058a0143014602de01ab02c6
024a005d00d800a402bb009900a0006501370274036400b500fa009101b9
032001b60025007f00d000ec00e000000000000000000000042ffd42023f
06180276063a013701b90151ffc70229ffeb023f02e1018500db03fa0190
0156014e012f00a600e300bb00d50134011f04fe041b00d100e4011e009b
00cd00e700b300e200ca042400b800f500b90334005a04e00123012ffdc9
fe440574038301f602410002001700500015004f001700a8005100980052
0049006e000e00af017b017b019c006a008300eb00cd0122000005d306da
009a008f00ba0315002503a5028002ff03c80420009200e0034c009b007d
00f8011c013400a8006d006900000420ffe6fea4006a006a003800380162
015a0044006d0048001eff6d00a600a600400040ff5cff990559052b00ce
014c011500bf0140011800c800960509feed004800b4009500db0048018b
00b3fe6400c000ea01180125013203b003ed0576059005aa05b405be05cd
063100780084009b00cc00e200f4010a0120016300d100ea00f701080142
0019002c00340041003800480058006c025903bd0043011a007000d30028
003700420050005a0064007300780082008c009c00a500bd00ce00f00110
015c00be00d801020117012c016300ea01080041004b0055005f007300a6
0109018301b300410064001e002a00eb00fa010e01380274002c00400082
009600b600c000cc00dc00e600f000ff010a0120012c013b014401560163
00f70057006401100136005001b10000ffb60039004e004403cc00e50024
01100042012201a400f0006000e0000e001d003905e30102002cfe4eff38
026903bd011600ff000e00a00054001b003d01710041000f005000fd0015
014f0035fe47003900ab0080005005a50016002b00ac0115021504570555
007300da005c00ce0072ff58019a0744000040425554403f3e3d3c3b3a39
38373534333231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a
191817161514131211100f0e0d0c0b0a090807060504030201002c452346
6020b02660b004262348482d2c452346236120b02661b004262348482d2c
45234660b0206120b04660b004262348482d2c4523462361b0206020b026
61b02061b004262348482d2c45234660b0406120b06660b004262348482d
2c4523462361b0406020b02661b04061b004262348482d2c0110203c003c
2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed51582320
b04d44235920b09051582320b00d44235921212d2c20204518684420b001
602045b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323
430b2d2c00b0172370b101173e01b0172370b10217453ab10200080d2d2c
45b01a234445b01923442d2c2045b00325456164b050515845441b212159
2d2cb00143632362b0002342b00f2b2d2c2045b0004360442d2c01b00643
b00743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c6423
64615c58b00361592d2c45b0112bb0172344b0177ae4182d2c45b0112bb0
1723442d2cb01243588745b0112bb0172344b0177ae41b038a45186920b0
1723448a8a8720b0a05158b0112bb0172344b0177ae41b21b0177ae45959
182d2c2d2cb0022546608a46b040618c482d2c4b53205c58b002855958b0
0185592d2c20b0032545b019234445b01a23444565234520b00325606a20
b009234223688a6a606120b01a8ab000527921b21a1a40b9ffe0001a4520
8a54582321b03f1b235961441cb114008a5279b31940201945208a545823
21b03f1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c
0d4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb11011
432343650b2d2c4b525845441b2121592d2c0120b003252349b04060b020
6320b000525823b002253823b002256538008a63381b212121212159012d
2c4bb06451584569b00943608a103a1b212121592d2c01b005251023208a
f500b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b0
062510f500edec2d2c20b001600110203c003c2d2c20b001610110203c00
3c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c
76b8029f23701020b8029f4520b0005058b00161593a2f182d2c21210c64
23648bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59
b002602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d
2c0c6423648bb84000626023212d2cb4000100000015b00826b00826b008
26b008260f10161345683ab001162d2cb4000100000015b00826b00826b0
0826b008260f1016134568653ab001162d2c4b53234b515a5820458a6044
1b2121592d2c4b545820458a60441b2121592d2c4b53234b515a58381b21
21592d2c4b5458381b2121592d2cb0134358031b02592d2cb0134358021b
03592d2c4b54b012435c5a58381b2121592d2cb012435c580cb00425b004
25060c6423646164b807085158b00425b00425012046b01060482046b010
6048590a21211b2121592d2cb012435c580cb00425b00425060c64236461
64b807085158b00425b00425012046b8fff060482046b8fff06048590a21
211b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58
b03b2b1b2121592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a
034b54b00426024b545a8a8a0ab012435c5a58381b2121592d2c46234660
8a8a462320468a608a61b8ff8062232010238ab9032703278a70456020b0
005058b00161b8ffba8b1bb0468c59b0106068013a2d2cb1020042b12301
8851b1400188535a58b910000020885458b202010243604259b124018851
58b920000040885458b202020243604259b12401885458b2022002436042
004b014b5258b2020802436042591bb940000080885458b2020402436042
59b94000008063b80100885458b202080243604259b94000010063b80200
885458b2021002436042595959592d2cb0024354584b53234b515a58381b
2121591b21212121592d000000010000000535c3376504c95f0f3cf50819
080000000000a2e3354600000000d1f36e5cfb89fd8c1000083500010009
0001000000000000000100000721fe4500571000fb89fadf100000010000
000000000000000000000000046b0639011c000000000200000002000000
02aa00af047100b000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000078d0029
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000473
004f00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000038d004b0000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000196ffba00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000004e6ffba000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000100ffba0800ffba
1000ffba0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
003600360036003600a300fe00fe00fe00fe00fe00fe00fe00fe00fe00fe
00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe
00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe
00fe00fe00fe01f801f801f801f801f801f801f801f801f801f801f801f8
01f801f801f801f801f801f801f801f801f801f801f802fb02fb02fb02fb
02fb02fb02fb02fb02fb02fb02fb02fb02fb02fb03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd03cd
03cd03cd03e703e703e703e703e703e703e703e703e703e703e703e703e7
03e703e703e703e703e703e703e703e703e703e703e703e703e703e703e7
03e703e703e703e703e703e703e703e703e703e703e703e703e703e703e7
040104010401040104010401040104010401040104010401040104010401
040104010401040104010401040104010401040104010401040104010401
040104010401040104010401040104010401040104010401040104010401
040104010401040104010401040104010401040104010401040104010401
040104010401040104010401040104010401040104010401040104010401
040104010401040104010401040104010401040104010401040104010401
040104010401040104010401040104010401040104010401040104010401
040104010401040104010401040104010401040104010401040104010401
040104010401040104010401040104010401040104010401040104010401
040104010401040104010401040104010401040104010401040104010401
040104010401040104010401040104010401040104010401040104010401
040104010401040104010401040104010401040104010401040104010401
040104010401040104010401040104010401040104010401040104010401
040104010401040104010401040104010401040104010401040104010401
040104010401040104010401040104010401040104010401040104010401
040104010401040104010401040104010401040104010401040104010401
040104010401040104010401040104010401040104010401040104010401
040104010401040104010401040104010401040104010401040104010401
040104010401040104010401040104010401040104010401040104010401
040104010401040104010401040104010401040104010401040104010401
040104010401040104010401040104010401040104010401040104010401
040104010401040104010401040104010401040104010401040104010401
04010401041b0435044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
044f044f044f044f044f044f044f044f044f044f044f044f044f044f044f
0000000100000d5c003700020000000000020010002f00560000088b1341
000000000000005303ea0000000300000000006a00000000000300000001
001e006a0000000300000002000801120000000300000003006c00e00000
000300000004002800f200000003000000050018014c0000000300000006
002c016400000003000000070076006a0000000300000008003000ae0000
00030000000900860190000000030000000d029a02160001000000000000
003504b00001000000000001000f04e50001000000000002000405390001
000000000003003605200001000000000004001405290001000000000005
000c05560001000000000006001605620001000000000007003b04e50001
00000000000800180507000100000000000900430578000100000000000d
014d05bb0003000104030002000e07280003000104030004002e07080003
000104050002000a07560003000104050004002a07360003000104060002
000607800003000104060004002607600003000104070002000807a60003
000104070004002807860003000104080002000c07ce0003000104080004
002c07ae0003000104090000006a00000003000104090001001e006a0003
000104090002000801120003000104090003006c00e00003000104090004
002800f200030001040900050018014c0003000104090006002c01640003
0001040900070076006a0003000104090008003000ae0003000104090009
00860190000300010409000d029a021600030001040a0002000e07fa0003
0001040a0004002e07da00030001040b00020012082800030001040b0004
0032080800030001040c00020008085a00030001040c00040028083a0003
0001040e00020010088c00030001040e00040030086c0003000104100002
0012085a00030001041000040032083a0003000104130002000608bc0003
0001041300040026089c0003000104140002000e08e20003000104140004
002e08c20003000104150002001409100003000104150004003408f00003
000104160002000e09440003000104160004002e09240003000104190002
0014097200030001041900040034095200030001041b0002000a09a60003
0001041b0004002a098600030001041d0002000607a600030001041d0004
0026078600030001041f0002000a09d000030001041f0004002a09b00003
000104240002000c09fa0003000104240004002c09da00030001042a0002
00080a2600030001042a000400280a0600030001042d0002000a0a4e0003
0001042d0004002a0a2e00030001080a0002000e07fa00030001080a0004
002e07da0003000108160002000e09440003000108160004002e09240003
00010c0a0002000e07fa000300010c0a0004002e07da000300010c0c0002
0008085a000300010c0c00040028083a00a9002000320030003100340020
0054006800650020004d006f006e006f007400790070006500200043006f
00720070006f0072006100740069006f006e002e00200041006c006c0020
005200690067006800740073002000520065007300650072007600650064
002e00540069006d006500730020004e0065007700200052006f006d0061
006e00200069007300200061002000740072006100640065006d00610072
006b0020006f006600200054006800650020004d006f006e006f00740079
0070006500200043006f00720070006f0072006100740069006f006e002e
004d006f006e006f0074007900700065003a00540069006d006500730020
004e0065007700200052006f006d0061006e00200042006f006c0064003a
00560065007200730069006f006e00200035002e0031003100200028004d
006900630072006f0073006f00660074002900560065007200730069006f
006e00200035002e0032003100540069006d00650073004e006500770052
006f006d0061006e00500053002d0042006f006c0064004d0054004d006f
006e006f0074007900700065002000540079007000650020004400720061
00770069006e00670020004f006600660069006300650020002d00200053
00740061006e006c006500790020004d006f007200690073006f006e002c
00200056006900630074006f00720020004c0061007200640065006e0074
002000310039003300320059006f00750020006d00610079002000750073
00650020007400680069007300200066006f006e00740020006100730020
007000650072006d00690074007400650064002000620079002000740068
0065002000450055004c004100200066006f007200200074006800650020
00700072006f006400750063007400200069006e00200077006800690063
00680020007400680069007300200066006f006e00740020006900730020
0069006e0063006c007500640065006400200074006f0020006400690073
0070006c0061007900200061006e00640020007000720069006e00740020
0063006f006e00740065006e0074002e002000200059006f00750020006d
006100790020006f006e006c0079002000280069002900200065006d0062
006500640020007400680069007300200066006f006e007400200069006e
00200063006f006e00740065006e00740020006100730020007000650072
006d00690074007400650064002000620079002000740068006500200065
006d00620065006400640069006e00670020007200650073007400720069
006300740069006f006e007300200069006e0063006c0075006400650064
00200069006e0020007400680069007300200066006f006e0074003b0020
0061006e006400200028006900690029002000740065006d0070006f0072
006100720069006c007900200064006f0077006e006c006f006100640020
007400680069007300200066006f006e007400200074006f002000610020
007000720069006e0074006500720020006f00720020006f007400680065
00720020006f007500740070007500740020006400650076006900630065
00200074006f002000680065006c00700020007000720069006e00740020
0063006f006e00740065006e0074002ea9203230313420546865204d6f6e
6f7479706520436f72706f726174696f6e2e20416c6c2052696768747320
52657365727665642e54696d6573204e657720526f6d616e206973206120
74726164656d61726b206f6620546865204d6f6e6f7479706520436f7270
6f726174696f6e2e4d6f6e6f747970653a54696d6573204e657720526f6d
616e20426f6c643a56657273696f6e20352e313120284d6963726f736f66
742956657273696f6e20352e323154696d65734e6577526f6d616e50532d
426f6c644d544d6f6e6f7479706520547970652044726177696e67204f66
66696365202d205374616e6c6579204d6f7269736f6e2c20566963746f72
204c617264656e742031393332596f75206d617920757365207468697320
666f6e74206173207065726d6974746564206279207468652045554c4120
666f72207468652070726f6475637420696e207768696368207468697320
666f6e7420697320696e636c7564656420746f20646973706c617920616e
64207072696e7420636f6e74656e742e2020596f75206d6179206f6e6c79
2028692920656d626564207468697320666f6e7420696e20636f6e74656e
74206173207065726d69747465642062792074686520656d62656464696e
67207265737472696374696f6e7320696e636c7564656420696e20746869
7320666f6e743b20616e6420286969292074656d706f726172696c792064
6f776e6c6f6164207468697320666f6e7420746f2061207072696e746572
206f72206f74686572206f75747075742064657669636520746f2068656c
70207072696e7420636f6e74656e742e00540069006d006500730020004e
0065007700200052006f006d0061006e0020004e00650067007200650074
006100540069006d006500730020004e0065007700200052006f006d0061
006e002000740075010d006e00e900540069006d006500730020004e0065
007700200052006f006d0061006e002000660065006400540069006d0065
00730020004e0065007700200052006f006d0061006e0020004600650074
007400540069006d006500730020004e0065007700200052006f006d0061
006e0020038803bd03c403bf03bd03b100540069006d006500730020004e
0065007700200052006f006d0061006e0020004e00650067007200690074
006100540069006d006500730020004e0065007700200052006f006d0061
006e0020004c0069006800610076006f00690074007500540069006d0065
00730020004e0065007700200052006f006d0061006e0020004700720061
00730073006500740074006f00540069006d006500730020004e00650077
00200052006f006d0061006e0020004600e9006c006b00f6007600e90072
00540069006d006500730020004e0065007700200052006f006d0061006e
002000560065007400540069006d006500730020004e0065007700200052
006f006d0061006e002000480061006c007600660065007400540069006d
006500730020004e0065007700200052006f006d0061006e00200050006f
00670072007500620069006f006e006100540069006d006500730020004e
0065007700200052006f006d0061006e0020004e00650067007200690074
006f00540069006d006500730020004e0065007700200052006f006d0061
006e0020041f043e043b0443043604380440043d044b043900540069006d
006500730020004e0065007700200052006f006d0061006e002000540075
010d006e00e900540069006d006500730020004e0065007700200052006f
006d0061006e0020004b0061006c0131006e00540069006d006500730020
004e0065007700200052006f006d0061006e0020004b007200650070006b
006f00540069006d006500730020004e0065007700200052006f006d0061
006e0020011100e20323006d00540069006d006500730020004e00650077
00200052006f006d0061006e0020004c006f0064006900610000b15420b8
040cb30c0e3220b8040cb2131732b8040bb328201f0f4110041200800412
0002000f0412003f0412005f04120003005f0412000100400412b2783340
b80412b2723340b80412b26e3340b80412b26a3340b80412b2543340bc04
12004a0033ffc00412b317183240b80412b30a0c3280b80412b308093240
b80411b25a33404109041100560033ffc0041100530033ffc00411b25033
40b80411b24d3340bc041100470033ffc00411b344453240b80411b24233
40bc0411003e0033ffc00411b23a331f4124041100200411004004110070
041100af041100f004110006000f0411002f04110090041100ff04110004
002f041100400411007f0411008f041100a0041100e004110006ffc00411
b208330f411b0410008f04100002000f0410001f0410002f041000030060
0409000100b004090001000f0408003f0408004f0408009f04070004040a
b2006c1fb9ffc00403b345453240b80403b32b2e3240b80403b2282932b9
ffc00403b21a1c32bd040302990027001fffc00401b2161b32b9ffc00400
b2424232b9ffc00400b2363832b9ffc00400b32a2d32df410a040000ef04
000002040004010028001fffc00401b3282e32f0bf0401000103fe000f01
01001fffc003fcb310143240b803fdb30f133240411003f9005003f90002
00b003b100c003b10002006f03f5007f03f50002ffc003afb22d3132b9ff
c003afb30a0e3210411003ef002003ef008003ef000300a003ef00010020
03ef004003ef0002ffc003efb313163240b803e7b20f1132b9ffc003dfb2
303432b9ffc003dfb310183250411403dc000103c903d20023001f03e203
d2001e001f03c703d2001d001f03c603c8000d001fffc003a4b30f103280
411003a3000103a303790029001f03a5037a0032001f03a8037e001b001f
ffc003d9b20e1132b9ffc003d9b2282a32410a03a7037c0032001f037303
710034001f036c036bb2321f20bb03a40001004003ecb3090b3240b803ec
b2101532bd03e9036b0014001f03e4036bb2171f0fbd036e002f036e0002
ffc003b8b3090d3290410c03b800a003b80002001f03d20001009f03d200
01004003d2b2090b32410a03a903800016001f03cf03810015001f03aa03
82b2151fc0bb03f70001004003f6b3090d3240b803a2b2083340b803a2b3
0d0e32c0410903a2000100b003f200c003f20002ffc003f4b32638320041
26038c0030038c0002002003e3003003e30002001003ee003003ee005003
ee006f03ee007f03ee009f03ee0006000003ed003003ed0002002f03de00
7003db009003db009f03de0004ffc00379b20f1032b9ffc00379b2242832
b9037d037cb2321f10bb037e0001ffc0037eb3090e3240b8037cb2121332
b9ffc0037cb30c0e323fbd03d7004f03d70002004003d8b31718326fbb03
8e000100400390b3181b3240b803d4b2090c32bd037b037a0032001fffc0
037ab20e1132bd038003820016001f03810382b2151fb0be03820001000f
03830001004003ffb30c11327f411403540001006f0354008f035400d003
5400ef03540004000f0354002f0354005f0354000300400350b30e0f320f
bb035a000100400349b20e331fbd0348007f03480002ffc00348b2152232
b9ffc00347b2152232b9ffc0040fb21b1e32beffc0040f002d0100003204
0e0406b22f1f51bb034b0001034f034eb2641f40b80351b20e0f32b9ffc0
034eb3383a3230bb034e0001ffc0034eb21f2332b9ffc0034eb2131932b9
ffc00346b2091132b9ffc00343b30a11320fbb03440001ffc0032bb2080e
32b9ffc0032bb2161b32b9ffc0032ab31417321f4110033a0001000f0333
0001000003370020033700300337008003330004ffc00332b31012325041
6403320001004003320060033200a0033200b00332000400100332003003
320050033200e003320004000f0336007f033600ff033600030070033600
f003360002000f0331003f0331008f033100bf033100e003310005000f03
31006003310002008f03300001006003300090033000020050032f000100
10032f0040032f0060032f0080032f00a0032f00c0032f00f0032f000700
cf032d00ff032d00020030032d0080032d00b0032d00df032d0004006f03
2c007f032c00020012032000fd0800001f007f0299403a017f007f017f02
7f037f047f057f107f11084035252c32406a252c32402e252c324028252c
323760097009800903300940095009031009200902b8ffc0b2073a33b8ff
c04012063a33da4dea4dfa4d0312379006900702cf410c011100df011100
ef0111000300cf011000df011000ef0110408703cf3edf3eef3e03cf4ddf
4def4d03cfdedfdeefde03cf2ddf2def2d03404d1b3a32375f016f017f01
8f01041f012f013f014f01045f036f037f038f03041f032f033f034f0304
600b700b800b03300b400b500b03100b200b02900ba00bb00bc00bd00b05
b006c006d006e006f0060550066006700680069006a006061f072f073f07
400604f0414302db000100a002db00b002db0002008002db009002db0002
001002db000100c002db00d002db0002009002db0001006002db007002db
0002004002db005002db0002002302db003002db000202db002300a002da
0001008002da009002da0002004002da0001002302da003002da000202da
0023000002d90001007002d9009002d9000202d9401c2230244024021024
202402002401f02401d024e02402b024c02402c0413a02d8000100a002d8
00b002d80002008002d8009002d80002002302d8003002d8000202d80023
00c002d7000100a002d700b002d70002008002d7009002d7000200a002d7
00b002d70002008002d7009002d70002006002d7007002d70002004002d7
005002d70002002302d7003002d7000202d7b223370f4117029b0001005f
029b009f029b00df029b0003002f029b003f029b006f029b0003001f029b
0001029b029b0040029ab3272c3280b8029ab2263340b8029ab2223340b8
029ab21e3340b8029ab21c3340b8029ab3191a325f410f029a009f029a00
df029a0003000f029a001f029a003f029a0003ffc00299b2443340b80299
b23d3340b80299b23a33df413702990001005f029900af02990002004f02
99009f02990002002f0299003f0299000200af02990001000f0299003f02
99000200b0029900e0029900020070029900a002990002004f0299005f02
990002001f0299002f0299003f02990003029a029a02990299000f027a00
2f027a400b0200161600000012110812b802bab269121fb802b4b228101f
b802b3b228101fb802b2b228101f411302030023000d01ee0023000d01ae
0023000d019f0023000d01940023000d01570023000d010f400b230df923
0dc5230da7230d410a024a0024000d01f00024000d01e90024000d016a40
0e240de8240dc6240da3240da2240dbb01e30022000d0121401a220de522
0ddd220db7220daa220d93220d5c220d51220d4c220d410a02280020000d
021d0020000d015e0020000d011c4017200dfc200de1200dcb200dc8200d
a1200d59200d3a200d410a01f20034000d019c0034000d01970034000d01
35b7340d1f340d1d340dba0202000f015bb20f0009bb0202015b000d030a
b22a3e1fb80309b22a3e1fb80221b24d251fb8021cb24d411fb8021bb24d
521fb8021ab24d721fb80213b24d931f4109020f01b10401001f020e01b1
0801001f020cb22a811fb8020bb22a811fb80208b22a5e1fb80205b22a39
1fb801feb22a231fb801fbb2661d1fb801fab2661e1fb801f6b266341fb8
01f5b266341fbc01f300660201001f01f1b2669e1f410901ea0028080100
1f01e7002602ab001f01b8b24d3f1fb801b7b24d931f410901b4003e0125
001f01b200400401001f01acb22a721fb801a8b22a281fb801a7b22a241f
b801a6b22a241fb801a3b22a1f1fb801a1b2662e1fb8019eb266931fb801
9db266e41fb8019ab2286c1f4109019900280401001f019800260401001f
0173b24d1b1fb80171b24d241fb80170b24d2f1fb8016fb24d351fb8016b
b23ecd1fb80169b23ee41f4109016701b1019a001f0166002a02ab001f01
61b2662a1fb8015fb2669e1f4109015d0028019a001f015c00350401001f
0147b24d391fb80146b23ecd1f410d0145003e0125001f01440143010100
1f014201b102ab001f0140b22a301fb8013eb22a261fb8013db2661d1fb8
013cb2662b1fb80138b228811fb80137b2289e1fbc01360028019a001f01
29b24d721fbc0124002a0201001f0123b22aab1fb8011fb266291fb8011e
b266451fb8011bb228811f41090113003e0125001f0112003e0401001f01
11b22a291fb80110b22a201fbe010b0066019a001f010a0026019ab61ffd
4d721ffb3eb80156b21ffa40b80801b21ff728b80801b61fec4d621feb4d
b80401b21fea40b802abb61fdf4d721fde3eb802ab400b1fdc2ae41fdb66
221fca2ab80401401b1fc92a2e1fc326791fb828bb1fb34d1e1fb166291f
b066621faf66b80401b21fae26b802abb21fa828b80201400b1fa0664c1f
982a2b1f9726b8019ab61f9266291f8740b802ab401b1f852a791f822681
1f754d931f744d891f732a1d1f70285e1f6a28b8040140171f692a521f68
2a201f6766291f6566671f612a931f6035b80801b61f5e2acd1f5335b808
01b21f4b66b80156b21f493eb80801b61f4866521f4626b80201b21f3f66
b80156400b1f3b66341f322a931f2e35bb0401001f002d0143b3cd1f5537
bc022f0007018000070172402e07bd077e076207540742072f0727072507
21071e071408120810080e080c080a0808080608040802080008000214b8
ffe0402b0000010014061000000100060400000100041000000100100200
0001000200000001000002010802004a00b013034b024b5342b0372b4bb8
07ff52b0382b4bb008505b58b101018e59014bb0c063004b6220b0f65323
b8010a515ab005234201b0124b004b544218b0382bb00288b801005458b8
01ffb101018e851bb0124358b90001012c858d1bb900010146858d595900
16763f183f123e113946443e113946443e113946443e113946443e113946
60443e113946604445442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b
2b2b2b2b2b182b1db0964b5358b0aa1d59b0324b5358b0ff1d594bb02953
205c58b9026c026a4544b9026b026a45445958b90168026c455258b9026c
01684459594bb03b53205c58b9003e026b4544b9004d026b45445958b902
5c003e455258b9003e025c4459594bb03b53205c58b901b1003e4544b13e
3e45445958b9024f01b1455258b901b1024f4459594bb05a53205c58b901
43003e4544b13e3e45445958b9038b0143455258b90143038b4459594bb0
9e53205c58b9002a026c4544b90040026c45445958b9056c002a455258b9
002a056c4459594bb01853205c58b126264544b1662645445958b1322645
5258b126324459594bb05153205c58b126264544b1282645445958b1ad26
455258b126ad4459594bb8010153205c58b126264544b1352645445958b9
02280026455258b9002602284459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b01b33d766e58456523456023456560234560
b08b766818b080622020b16e764565234520b003266062636820b0032661
65b076236544b06e234420b13d584565234520b003266062636820b00326
6165b058236544b03d2344b10058455458b158406544b23d403d45236144
59b34e813871456523456023456560234560b089766818b080622020b138
814565234520b003266062636820b003266165b081236544b038234420b1
4e714565234520b003266062636820b003266165b071236544b04e2344b1
0071455458b171406544b24e404e45236144594b5242014b5058b1080042
59435c58b108004259b3020b0a124358601b2159421610703eb0124358b9
3b21187e1bba040001a8000b2b59b00c2342b00d2342b0124358b92d412d
411bba04000400000b2b59b00e2342b00f2342b0124358b9187e3b211bba
01a80400000b2b59b0102342b01123420074184569444569447373737374
74757575752b2b2b73732b2b2b2b2b2b18456944737373742b4544737373
737374747445447374747474747475757545447375454473737474454473
73737373747474740075757575757575757575752b2b7474747474740073
2b4358b14d4d451869441bb8ffc0b34d1b3a322b5973002b2b7575752b2b
2b2b2b0073732b435c58b8ffc0b2071633b8ffc0400b061633d54de54df5
4d03c0410c011100d0011100e00111000300c0011000d0011000e0011040
1e03c03ed03ee03e03c04dd04de04d03c0ded0dee0de03c02dd02de02d03
372b74747474747473002b2b590173737473747374737473747374752b73
7573002b2b2b01732b2b2b2b752b2b2b732b2b2b002b2b742b732b737374
2b73732b2b2b2b2b2b732b732b2b2b742b2b2b73737373732b73732b2b2b
73002b2b2b2b7374732b732b2b2b2b752b2b2b2b2b2b2b2b752b2b2b2b2b
732b2b2b2b7374752b2b7373732b2b2b752b2b732b2b2b2b2b2b2b2b2b2b
73747573742b7374752b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b7374
752b2b2b2b00000000>
[2207 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> HJCBAA+TIMES#20NEW#20ROMAN,Bold AddT42Char 
1 0 0 <0002011c0000051c0500000300070042b40201c30607b803084013000504
c303000a0704c3010019080605c30203bc014100090125015600182b10f6
3cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121
011c0400fc2003c0fc400500fb002004c000>HJCBAA+TIMES#20NEW#20ROMAN,Bold AddT42Char 
HJCBAA+TIMES#20NEW#20ROMAN,Bold /CharStrings get begin
/space 3 def
end
HJCBAA+TIMES#20NEW#20ROMAN,Bold /Encoding get
dup 32 /space put
pop
end
%ADOEndSubsetFont
/WDZEMU+TIMES#20NEW#20ROMAN,Bold /HJCBAA+TIMES#20NEW#20ROMAN,Bold findfont ct_VMDictPut
/WDZEMU+TIMES#20NEW#20ROMAN,Bold*1 
[32{/.notdef}rp /space 223{/.notdef}rp]
WDZEMU+TIMES#20NEW#20ROMAN,Bold nf
WDZEMU+TIMES#20NEW#20ROMAN,Bold*1 [12.0002 0 0 -12.0002 0 0 ]msf
317.33 910.74 mo
( )sh
320.33 910.74 mo
( )sh
323.33 910.74 mo
( )sh
326.33 910.74 mo
( )sh
245.78 904.12 mo
253.97 907.32 li
@
245.78 912.12 mo
253.77 907.24 li
@
%ADOBeginSubsetFont: WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H 10 GetGlyphDirectory
28 <001C60D8A8C9B7EF32244EE7EE65252AFDE7A87147B98F817ACA14068158
F04D76F606D92C8708963AB0B310975551765E9B943C7ABD06736F810E77DBD2
9A2E49FA1F8298919F21695DD0762728F6C5F9CE6BA38AFB0BD76E4D2D5270DF
932577825AF827E54BFF69BA26CF7E465422C6CFDD20EF9C01A6DF7A7222A3E0
811F4B3EFF93FF4C5FCC92F0D8EC2C6F539E950BF919F249AF80B0B0EF377235
E58D601739744AD3C0BF2C69D7823B4A27829936A78CB8564E8D3374A2> |
27 <001C60D8A8C9B7EF32247F6B858C671ACA38419CAC2CA3572806C32DFCEF
39A73BC736CF0645D3BD7B44BCAC96D7298DAA2DDF8FB99B7BA1A39CD9AF99DB
6C6E1CB268CF2C6C981A97D270F4F71EE2846EF89FA2D524658CB6812B8AA838
B8FBC2CCED00217A78DEFF4E5FC344AB937A624A04EB29B0EB10C658A607BCFB
2B26DD114E5845864DA5F787AE1D65D5C942B95FE3BD5B1728824F1E21322F0C
54E7074BACBBB36039FDE28F35BD9E73CF0B0540C9B0A426B07A05902986605B
6E40C89D9C3DCD8E65BF2C0BA8AB4D713B97CD6E5253C5E3167C5EF3A1F76CE9
36877151A5FEEA3547> |
19 <001C60D8A8C9B7EF3228538BC6BE53702F0C053928FE107BAD4926ADBC63
1C4D3103C7AAEA995C11C594D136F55F4521543C825853B121815959920C779B
B5ECE682ACE33FB34F6000B715490178C9B22D6FBFD35A68468D02151CD19A5E
72032B21AF0780FF27D3B13BB07A69697FD16E529BCB7037EABC1B6632D88804
E8ADD85543891C88D31F> |
69 <001C60D8A8C9B7EF322B3AD187CC063EEB438BFC9878BF9AE6FF7D50BF05
BE6C5DA3539E70570F4B6E464FD69E7E5925EBFCAF3328A01A3B753C501A15A2
613B992D41A9F5C67B5BCA31F8CEFCDBFBCDA4F7FF4EF3F50D58B6FD8061925E
E2FE4E12DD3F3A23149B0774F1E24C32C6BFC63BBA39587AE220AC083583EA1D
9B84B192AE6DB424399D74156A30> |
76 <001C60D8A8C9B88C0872290ED46E75B471EF9A32A065F435BC4A725E2C76
FC3297> |
87 <001C60D8A8C9B854D0F4A616668523AAC17659898A98BC3DDE8791BCB138
6A94C6160C4AEF915AAB66B7C85DA32A9F7A204F5B7A90A1740FD451BBB94376
FA4D0D42EC756491EDA42C56883B4D31D5BCF815A787B298A71EE28782> |
72 <001C60D8A8C9B7EF3224049D8582075AFDEAA343D3A7852EA0C933CC396F
ADE32342834FF208E6E269411C814D2F8359A6E04DE46CED988B3610A6CC97A4
63465312DBE1423B6F16CC68E59F2B1597E2C6E79FCE640A5D2A8F2770E2AC4D
C72436B9D1C0B43833A46E9CA78A368CCF72033F19E2173F54C0966368F24F20
D67BC46E767C63023C32896D25623920B098843A33> |
74 <001C60D8A8C9B7EF32240FBCC594584616E2395312F8E48A4EB2907157C3
E7820880FF16F39C0B2AC721B9CDCDD403A1F73A2F2A98073359D7291C2B3904
077FAC5EC7E6E55D75CBE0DD85E301C7AD34ED17954BBB8632DDA64EF3B06805
B6DD65CE41331D7F94280AE56C136CC82192A47D8126FAEAD75AA8A97500B0B3
AE371F79689251F9973A6EEEE71B3D8D4A3B81A2A30DA8609C5585E37EC32841
89DDD4A3E5054C09A72B730DC395D3A7E52A39E06777C28772CD8CC288C9611E
3880A1AF52348D85> |
86 <001C60D8A8C9B7A73DB6F42200733DBD2DAFEADC3433EE98688A940AF3BE
C28F692DA23E4A393F35D82279AF00203A47F6D44E1F384965DA2FBD45501F8E
47BBF8F6DF6F9A76757F2DFC13F924E20DAE9C30F6EECD3223B9C4FF4AEB03FC
C99E351C3ACF17DC352EE099F903C3E8DB7074F6ACD59B37E7C171A8EFECFEF3
5C1C02D26B48547890C0D21AB918E1E7B1E7297D44B9A133A7D05A29007F7239
472E6D45411526269469AA97678B74143AC5290A208F655FC16619B5C56FD21E
F3DAC5FC18989706B2A099> |
85 <001C60D8A8C9B81F2C3A2F8D0C311B84EE8E038C0F8EDF9FB36208B52F33
ABBBEB31AAFDF789ABCF0C97C3FFEC17BF339D03A49D0FAC80E504CDD4AF8C66
526AEDB5F46F> |
!
end
end end
%ADOEndSubsetFont
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
268.32 910.87 mo
(\000\034)sh
276.106 910.87 mo
(\000\033)sh
283.892 910.87 mo
(\000\023)sh
291.678 910.87 mo
(\000\023)sh
299.464 910.87 mo
(\000\003)sh
303.35 910.87 mo
(\000E)sh
311.136 910.87 mo
(\000L)sh
314.246 910.87 mo
(\000W)sh
318.136 910.87 mo
(\000\003)sh
322.026 910.87 mo
(\0005)sh
332.136 910.87 mo
(\000H)sh
339.922 910.87 mo
(\000J)sh
347.708 910.87 mo
(\000L)sh
350.818 910.87 mo
(\000V)sh
357.818 910.87 mo
(\000W)sh
361.708 910.87 mo
(\000H)sh
369.494 910.87 mo
(\000U)sh
347.12 868.78 mo
287.54 868.78 li
270.53 844.72 li
364.13 844.72 li
347.12 868.78 li
cp
.783689 .786528 .793894 rgb
ef
.136538 .123054 .126659 rgb
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
302.76 863.28 mo
(\0000)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
302.76 863.28 mo
(\0000) false chp
.0055555 lw
@
%ADOBeginSubsetFont: WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H 1 GetGlyphDirectory
56 <001C60D8A8C9B6079F6CADFBB735717170AC59198FE655A00960E5009AB6
8E470B1BA0CE1AECC6DE0A1635B5762532A026D4E08C3BEA79E1F814F5787109
C234A8A5895541E0AAB2D8FE3599E4043A1E5330F2F058A407B7F6FC75FBC84B
CB6849F5816261DA0BF04DAE5A5C95C21C0DDB826042C08D65BC2BD02170F17B
A2> |
!
end
end end
%ADOEndSubsetFont
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
314.429 863.28 mo
(\0008)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
314.429 863.28 mo
(\0008) false chp
@
%ADOBeginSubsetFont: WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H 1 GetGlyphDirectory
59 <001C60D8A8C9B64EDFFB606FB7C95FC788F435F1AD48E9865866035A5CE3
09EAB89E9299450196C772F8F5F4A42EE42974824FD98880987B2B012EAF2FCE
A5C809A4F9D134933901FC611B6B85A8EE672DE7ADBC20B4> |
!
end
end end
%ADOEndSubsetFont
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
324.546 863.28 mo
(\000;)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
324.546 863.28 mo
(\000;) false chp
@
3 lw
317.33 823.42 mo
317.33 829.2 li
317.33 835.77 li
317.33 843.15 li
@
322.85 837.63 mo
317.33 843.15 li
311.81 837.63 li
@
317.33 925.06 mo
317.33 935.1 li
317.33 946.19 li
317.33 958.34 li
317.33 971.54 li
@
318.05 936.62 mo
335.27 936.62 li
353.97 936.62 li
374.13 936.62 li
395.75 936.62 li
418.85 936.62 li
@
418.85 804.17 mo
418.85 826.69 li
418.85 851.12 li
418.85 877.47 li
418.85 905.74 li
418.85 935.93 li
@
418.76 803.81 mo
404.93 803.81 li
389.92 803.81 li
373.74 803.81 li
356.38 803.81 li
337.85 803.81 li
@
343.37 809.33 mo
337.85 803.81 li
343.37 798.29 li
@
1.5 lw
279.03 856.75 mo
271.39 856.75 li
262.94 856.75 li
253.69 856.75 li
243.63 856.75 li
@
275.01 852.73 mo
279.03 856.75 li
275.01 860.77 li
@
317.54 972.73 mo
320.76 972.73 li
320.76 992.06 li
317.54 998.5 li
314.32 992.06 li
314.32 972.73 li
317.54 972.73 li
@
327.41 925.44 mo
316.68 936.16 li
306.29 946.56 li
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
273.66 941.07 mo
(\000\034)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
273.66 941.07 mo
(\000\034) false chp
.0055555 lw
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
281.453 941.07 mo
(\000\033)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
281.453 941.07 mo
(\000\033) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
289.245 941.07 mo
(\000\023)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
289.245 941.07 mo
(\000\023) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
297.038 941.07 mo
(\000\023)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
297.038 941.07 mo
(\000\023) false chp
@
gsave
236.35 883.3 mo
267.644 883.3 li
267.644 847.299 li
236.35 847.299 li
cp
clp
%ADOBeginSubsetFont: WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMR+Cambria#20Math-KSCms-UHC-H 3 GetGlyphDirectory
1871 <001C60D8A8C9B74D93A5A192672FD228D4708B61E2554DD8941DE75CB8
7C3586EC5E14A1E5A88489B38F826BC24E60FDD443754BAFB8BCA8D802BD51F1
9080A7A99BBA66DE627ECEBD72EAC075CB339AC272414E3EEAA47F0E24F98312
21FAA83E408D51273FBF07CF742AD6D3DD7555B8331B48C70C78D06A527A8D9C
CFE456E1EFDCF65153E3E592E3E7FE95654A0E339BFCC2EFC9216CDE3F4F5947
FE86262F79CEE74C37921814ADCFF503DF28E5C501DEE456BDB1ACCC4455ED38
6E4712955D4A5CF40EEF9BE10DBB06CE4A8445A3F1A478BE671DCABD0881071C
CF876724951CFDA2F81247D8DF5B09C4F412F782> |
1857 <001C60D8A8C9B7AB676D2B474C469BAEFE4CB79113AD639D26E2AB1350
90B40A373A81FDB8A6DF8851C83E6499BF4A0129CF4779E3A8F344261777897C
9965C9EF53BFAFCBC6895A20DB4F807F3E46BD0626A719D52E91CF5618DDDAA4
9429953B06D25362026409045DB9831FBB619552CF2A8794F5A9AE56ED9DE3A4
6B6F0E61D23A4E9F82720FB6FE12E14BD0E795D4E581A6F27CC110087C007972
2A45D19A7FDA82E777EF85D2CB8C241100124441F9733260477B38F2C06ADB3E
1D> |
1864 <001C60D8A8C9B82E3491B38B14CACFB3729C41091A9561EAECD2269DC0
F0FAE766564B010CF54A5BA91E63C2F06BD1ED2B48CFEBEDDB5FE2E109246519
4023F9D96EDC170589CEBD3872113791F9AEBC02DF210A23782F9CF1AB72811B
C10C14AC14960BA4D7280C69F9A52913E7E6152901C2EF270809C83DAE613FCB
779825EE0A3CB34AF58FDC3C> |
!
end
end end
%ADOEndSubsetFont
/WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [16.0595 0 0 -16.0648 0 0 ]msf
238.147 871.207 mo
(\007O)sh
245.535 871.207 mo
(\007A)sh
253.565 871.207 mo
(\007H)sh
%ADOBeginSubsetFont: WDZEMV+Cambria#20Math-KSCms-UHC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (WDZEMV+Cambria#20Math-KSCms-UHC-H)
%%Title: (WDZEMV+Cambria#20Math-KSCms-UHC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /WDZEMV+Cambria#20Math-KSCms-UHC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-1475 -2463 2868 3117} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 6997 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B6472030318CD4127C796377DABFD8006FC8CD7AAF1086964
F20EE651118638C13AC909581621FA1FBAC552E6A16F7B4972529EBE8A80E782
DD8AB05FDEEBDFC49979639D0FF68DCB6E7F422169AA9A2DB1DEF4F4B413623F
5F563C56D612D674F82D41A71448843BD967EEE7B9B5E5851CDE54BA3652F7BD
EAFCDD43D27FDE0DE42D02A7D2B502434D5DE03C37B40825A9A0E097F17F7836
8B6C52A18DA8C4E8168AC56AD15BCF0B69C17FC31C7A04A95D974197259FB36A
E72A5300CDD86C2372DFF50F7695D6D8E6898504FD1B1E5E543A89FFBE60F42D
9B97A8DA995D7DC487489AC6073B6078ACF7C0324D45E66DA26D3EFF3411DA7F
D9C5DE33005> |
886 <001C60D8A8C9B7917E85A45E52E9BC71C23713C6E48048EB5CD904BD6D6
52DF67E8B05F1892DA85CDF2B03E3489AA98AEC7384464EAAD589BDCA0EC6BE4
342760EA02937139FF9D039B2F78B3EF0976238500EB73A9E1D7639A8437A09B
01D0A8C3A53418FC13F0F81B0BBD7C6797765426F45091D1B1B695CD1DAB0949
927138F988D697B2D0C1C686527CA25429EC2A2702A9E4FB5F6> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /WDZEMV+Cambria#20Math-KSCms-UHC-H-Identity-H /Identity-H 0 [/WDZEMV+Cambria#20Math-KSCms-UHC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/WDZEMV+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [11.5499 0 0 -11.5538 0 0 ]msf
258.465 874.451 mo
(\003v)sh
%ADOBeginSubsetFont: MZQAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.305 1.238 0.961
 256 array 0 1 255 {1 index exch /.notdef put} for  /MZQAAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f32f9dcb878000000cc000000606376
7420b09bc4d20000012c0000051c6670676df6f64d0c000006480000091a
676c79662ce2f6930000850c000005d268656164f312fd1500000f640000
0036686865610dad06da00000f9c00000024686d74781982033a00000fc0
000025846c6f6361571259a10000354400001e546d617870213624940000
5398000000206e616d651bad7180000053b800000d3e70726570f7fb63c9
000060f800002414676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e00002ff4000acff00000001000000004d53202000400000
00a00600fe0001c4079e02262000019f0000000003b7050e000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e4047645f5e5d5c5b5a595855
54535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a393837
36352f2e2d2c2826252423221f181411100f0d0b0a090807060504030201
002c4523466020b02660b004262348482d2c452346236120b02661b00426
2348482d2c45234660b0206120b04660b004262348482d2c4523462361b0
206020b02661b02061b004262348482d2c45234660b0406120b06660b004
262348482d2c4523462361b0406020b02661b04061b004262348482d2c01
10203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0
ed51582320b04d44235920b0042651582320b00d44235921212d2c202045
18684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c
00b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab1
0200080d2d2c2045b00325456164b050515845441b2121592d2c2045b000
4360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8c
b8100062602b0c642364615c58b00361592d2c8a03458a8a87b0112bb029
2344b0297ae4182d2c4565b02c234445b02b23442d2c4b525845441b2121
592d2c01b005251023208af500b0016023edec2d2c01b005251023208af5
00b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c
2d2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c642364
8bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b002
602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c
6423648bb84000626023212d2c4523456023456023456023766818b08062
202d2cb00426b00426b00425b0042545234520b003266062636820b00326
61658a2344442d2c2045b0005458b040442045b04061441b2121592d2c45
b1302f4523456160b0016069442d2c4b5158b02f2370b01423421b212159
2d2c4b515820b0032545695358441b2121591b2121592d2c45b01443b000
6063b0016069442d2cb02f45442d2c452320458a60442d2c45234560442d
2c4b235158b90033ffe0b134201bb3330034005944442d2cb0164358b003
26458a586466b01f601b64b020606620581b21b04059b001615923586559
b02923442310b029e01b2121212121592d2cb0164358b004254564b02060
6620581b21b04059b0016123586559b0292344b00425b00725082058021b
0359b0052510b004252046b0042523423cb0072510b006252046b00425b0
016023423c2058011b0059b0052510b00425b029e0b0072510b00625b029
e0b00425b00725082058021b0359b00425b003254348b00625b00325b001
6043481b2159212121212121212d2cb0164358b004254564b02060662058
1b21b04059b0016123581b6559b0292344b00525b00825082058021b0359
b0042510b005252046b0042523423cb00425b0072508b0072510b0062520
46b00425b0016023423c2058011b0059b0042510b00525b029e0b0292045
6544b0072510b00625b029e0b00525b00825082058021b0359b00525b003
254348b00425b0072508b00625b00325b0016043481b2159212121212121
212d2c02b00425202046b004252342b0052508b003254548212121212d2c
02b0032520b0042508b0022543482121212d2c452320451820b000502058
23652359236820b040505821b04059235865598a60442d2c4b53234b515a
5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b
515a58381b2121592d2cb000214b5458381b2121592d2cb002435458b046
2b1b21212121592d2cb002435458b0472b1b212121592d2cb002435458b0
482b1b21212121592d2cb002435458b0492b1b212121592d2c208a08234b
538a4b515a5823381b2121592d2c0020b200400325b0062649618b381234
2d2c014623466023466123201020468a61b8ff80628ab140408a70456068
3a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a592d2cb01200
4b014b54422d2cb1020042b123018851b1400188535a58b9100000208854
58b202010243604259b12401885158b920000040885458b2020202436042
b12401885458b2022002436042004b014b5258b2020802436042591bb940
000080885458b202040243604259b94000008063b80100885458b2020802
43604259b94000010063b80200885458b202100243604259b94000020063
b80400885458b202400243604259595959592d2c451868234b5158232045
2064b04050587c59688a6059442d2cb00016b00225b0022501b001233e00
b002233eb10102060cb00a236542b00b234201b001233f00b002233fb101
02060cb006236542b0072342b00116012d2c20b82000628a6023622d2cb0
072558001b0159b0042510b00325b0022520b8ffff545821cd1bed5921b0
06255cb006255a58b0092b5920b005254ab0042547b004254760b0062547
b0806361b00225b0005558b00325b00725496359b0082558001b0159b004
25b0062549b009255cb009255a58b0092b59b0072546b0806361b0032520
b0005558631b2159612320b0005558b080631b21b08059b0592bb006255c
586959b00425202010b00048233ab0062658001b0159b0052658b003252f
598a12233221212d2cb00625b00a2587b00625b009254ab0005358b00625
b00a251bb00925b0072559b00225b00225070cb005256323b00625636020
b94000040063535821b00426b00426b00a1bb94000040063655158b00426
65b0042665b00a1bb00426b00426b000b00325b003250b0d0ab0092eb007
25b007250b0d0ab00b2eb00525b0052507595920b0005558b00525b00525
87b00725b007250bb0092510b00b25b0092620b8ffff545821cd1bed59b0
0525b0052507b00825b00b254923b00625b0062587b00a2510b00b25c159
20b00051b800522378b00161b00225b00725b0072507b00a25b00d254961
b08062b00525b005250bb00a252338b00625b0062587b00825b008250bb0
0a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ffa72379
2121212121212121212121212d2c23b0005458b9400000001bb900004000
598ab0005458b9400000001bb90000400059b05b2b2d2c08b0005458b940
0000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940000000
1bb90000400059b05b2b2d2cb00426b00426080db00426b00426080db05b
2b2d2c204569442d0000000100000005bd7159fe62e95f0f3cf500190800
00000000bbeb7ccc00000000d20f7899fbfafd8b09ec07b6000000090002
000000000000000100000600fe0001c40aa0fbfafaa009ec000100000000
000000000000000000000399040e0000000000000000000001cf00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000006d700ac000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
043400600000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000002ca00990000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000029b010a000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000335
008b00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a100a100a100a1
00a100a1014e014e014e014e014e014e014e014e014e014e014e014e014e
014e014e014e014e014e014e014e014e014e014e014e014e014e014e014e
014e014e014e014e014e014e014e014e014e014e014e014e014e014e014e
014e014e014e014e014e014e014e014e014e014e014e014e014e014e014e
014e014e014e014e014e014e014e014e014e014e014e014e014e014e014e
014e014e014e014e014e014e014e014e014e014e014e014e014e014e014e
014e014e014e014e014e014e014e014e014e014e014e014e014e014e014e
014e014e014e014e014e014e014e014e014e014e014e014e014e014e014e
014e014e014e014e014e014e014e014e014e014e014e014e014e014e014e
014e014e014e014e014e014e014e014e014e014e014e014e014e014e014e
014e014e014e014e014e014e014e014e014e014e014e014e014e014e014e
014e014e014e014e014e014e014e014e014e014e014e014e014e014e014e
014e014e014e014e014e014e014e014e014e014e014e014e014e014e014e
014e014e014e014e014e014e014e014e014e014e014e014e014e014e014e
014e014e014e014e014e014e01e501e501e501e501e501e501e501e501e5
01e501e501e501e501e501e501e501e501e501e501e501e501e501e501e5
01e501e501e501e501e501e501e501e501e501e501e501e501e501e501e5
01e501e501e501e501e501e501e501e501e501e501e501e501e501e501e5
01e501e501e501e501e501e501e501e501e501e501e501e501e501e501e5
01e501e501e501e501e501e501e501e501e501e501e501e501e501e501e5
01e501e501e501e501e501e501e501e501e501e501e501e501e501e501e5
01e501e501e501e501e501e501e501e501e501e501e501e501e501e501e5
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e025e025e025e025e
025e025e025e025e025e025e025e025e025e025e025e02a302a302a302a3
02a302a302a302a302a302a302a302a302a302a302a302a302a302a302a3
02a302a302a302a302a302a302a302a302a302a302a302a302a302a302a3
02a302a302a302a302a302a302a302a302a302a302a302a302a302a302a3
02a302a302a302a302a302a302a302a302a302a302a302a302a302a302a3
02a302a302a302a302a302a302a302a302a302a302a302a302a302e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e902e902e902e902e902e902e902e902e902e902e9
02e902e902e902e902e9000100000f29004f00050000000000020010002f
0065000011922414000000000000002d0222000000030000000000640000
0000000300000001000e00640000000300000002000e0304000000030000
0003002403120000000300000004000e0064000000030000000500180336
0000000300000006000e006400000003000000070076034e000000030000
0008002a000e0000000300000009002003c4000000030000000a02a00064
000000030000000b005603e4000000030000000c002a043a000000030000
000d02980464000000030000000e006c06fc000100000000000000320768
00010000000000010007079a0001000000000002000708ea000100000000
0003001208f100010000000000040007079a0001000000000005000c0903
00010000000000060007079a0001000000000007003b090f000100000000
00080015076f00010000000000090010094a000100000000000a0150079a
000100000000000b002b095a000100000000000c00150985000100000000
000d014c099a000100000000000e00360ae6000300010409000000640000
0003000104090001000e00640003000104090002000e0304000300010409
0003002403120003000104090004000e0064000300010409000500180336
0003000104090006000e006400030001040900070076034e000300010409
0008002a000e0003000104090009002003c4000300010409000a02a00064
000300010409000b005603e4000300010409000c002a043a000300010409
000d02980464000300010409000e006c06fc00a900200032003000310035
0020004d006900630072006f0073006f0066007400200043006f00720070
006f0072006100740069006f006e002e00200041006c006c002000520069
0067006800740073002000520065007300650072007600650064002e0043
0061006c0069006200720069002000690073002000610020006d006f0064
00650072006e002000730061006e00730020007300650072006900660020
00660061006d0069006c0079002000770069007400680020007300750062
0074006c006500200072006f0075006e00640069006e006700730020006f
006e0020007300740065006d007300200061006e006400200063006f0072
006e006500720073002e0020004900740020006600650061007400750072
006500730020007200650061006c0020006900740061006c006900630073
002c00200073006d0061006c006c00200063006100700073002c00200061
006e00640020006d0075006c007400690070006c00650020006e0075006d
006500720061006c00200073006500740073002e00200049007400730020
00700072006f0070006f007200740069006f006e007300200061006c006c
006f00770020006800690067006800200069006d00700061006300740020
0069006e002000740069006700680074006c007900200073006500740020
006c0069006e006500730020006f0066002000620069006700200061006e
006400200073006d0061006c006c0020007400650078007400200061006c
0069006b0065002e002000430061006c0069006200720069002700730020
006d0061006e0079002000630075007200760065007300200061006e0064
00200074006800650020006e006500770020007200610073007400650072
00690073006500720020007400650061006d00200075007000200069006e
0020006200690067006700650072002000730069007a0065007300200074
006f002000720065007600650061006c002000610020007700610072006d
00200061006e006400200073006f00660074002000630068006100720061
0063007400650072002e0052006500670075006c00610072004d00690063
0072006f0073006f00660074003a002000430061006c0069006200720069
00560065007200730069006f006e00200035002e0037003400430061006c
006900620072006900200069007300200061002000740072006100640065
006d00610072006b0020006f006600200074006800650020004d00690063
0072006f0073006f00660074002000670072006f007500700020006f0066
00200063006f006d00700061006e006900650073002e004c007500630028
006100730029002000640065002000470072006f006f0074006800740074
0070003a002f002f007700770077002e006d006900630072006f0073006f
00660074002e0063006f006d002f007400790070006f0067007200610070
00680079002f006300740066006f006e007400730068007400740070003a
002f002f0066006f006e007400660061006200720069006b002e0063006f
006d0059006f00750020006d006100790020007500730065002000740068
0069007300200066006f006e00740020006100730020007000650072006d
006900740074006500640020006200790020007400680065002000450055
004c004100200066006f00720020007400680065002000700072006f0064
00750063007400200069006e002000770068006900630068002000740068
0069007300200066006f006e007400200069007300200069006e0063006c
007500640065006400200074006f00200064006900730070006c00610079
00200061006e00640020007000720069006e007400200063006f006e0074
0065006e0074002e00200059006f00750020006d006100790020006f006e
006c0079002000280069002900200065006d006200650064002000740068
0069007300200066006f006e007400200069006e00200063006f006e0074
0065006e00740020006100730020007000650072006d0069007400740065
0064002000620079002000740068006500200065006d0062006500640064
0069006e00670020007200650073007400720069006300740069006f006e
007300200069006e0063006c007500640065006400200069006e00200074
00680069007300200066006f006e0074003b00200061006e006400200028
006900690029002000740065006d0070006f0072006100720069006c0079
00200064006f0077006e006c006f00610064002000740068006900730020
0066006f006e007400200074006f002000610020007000720069006e0074
006500720020006f00720020006f00740068006500720020006f00750074
007000750074002000640065007600690063006500200074006f00200068
0065006c00700020007000720069006e007400200063006f006e00740065
006e0074002e0068007400740070003a002f002f007700770077002e006d
006900630072006f0073006f00660074002e0063006f006d002f00740079
0070006f006700720061007000680079002f0066006f006e00740073002f
00640065006600610075006c0074002e0061007300700078a92032303135
204d6963726f736f667420436f72706f726174696f6e2e20416c6c205269
676874732052657365727665642e43616c696272692069732061206d6f64
65726e2073616e732073657269662066616d696c79207769746820737562
746c6520726f756e64696e6773206f6e207374656d7320616e6420636f72
6e6572732e204974206665617475726573207265616c206974616c696373
2c20736d616c6c20636170732c20616e64206d756c7469706c65206e756d
6572616c20736574732e204974732070726f706f7274696f6e7320616c6c
6f77206869676820696d7061637420696e2074696768746c792073657420
6c696e6573206f662062696720616e6420736d616c6c207465787420616c
696b652e2043616c696272692773206d616e792063757276657320616e64
20746865206e65772072617374657269736572207465616d20757020696e
206269676765722073697a657320746f2072657665616c2061207761726d
20616e6420736f6674206368617261637465722e526567756c61724d6963
726f736f66743a2043616c6962726956657273696f6e20352e373443616c
6962726920697320612074726164656d61726b206f6620746865204d6963
726f736f66742067726f7570206f6620636f6d70616e6965732e4c756328
6173292064652047726f6f74687474703a2f2f7777772e6d6963726f736f
66742e636f6d2f7479706f6772617068792f6374666f6e7473687474703a
2f2f666f6e7466616272696b2e636f6d596f75206d617920757365207468
697320666f6e74206173207065726d697474656420627920746865204555
4c4120666f72207468652070726f6475637420696e207768696368207468
697320666f6e7420697320696e636c7564656420746f20646973706c6179
20616e64207072696e7420636f6e74656e742e20596f75206d6179206f6e
6c792028692920656d626564207468697320666f6e7420696e20636f6e74
656e74206173207065726d69747465642062792074686520656d62656464
696e67207265737472696374696f6e7320696e636c7564656420696e2074
68697320666f6e743b20616e6420286969292074656d706f726172696c79
20646f776e6c6f6164207468697320666f6e7420746f2061207072696e74
6572206f72206f74686572206f75747075742064657669636520746f2068
656c70207072696e7420636f6e74656e742e687474703a2f2f7777772e6d
6963726f736f66742e636f6d2f7479706f6772617068792f666f6e74732f
64656661756c742e61737078000000>
<b2090320b80284b40918014a20b80283b40918014a20b80282b40918014a
20b80281b40918014a20b80280b40918014a20b8027fb40918014a20b802
7eb40918014a20b8027db40918014a20b8027cb40918014a20b8027bb409
18014a20b8027ab40918014a20b80279b40918014a20b80278b40918014a
20b80277b40918014a20b80276b40918014a20b80275b40918014a20b802
74b40918014a20b80273b40918014a20b80271b40918014a20b80270b409
18014a20b8026fb40918014a20b8026eb40918014a20b8026db40918014a
20b8026cb40918014a20b8026bb40918014a20b8026ab40918014a20b802
69b40918014a20b80268b40918014a20b80267b40918014a20b80266b409
18014a20b80265b40918014a20b80264b40918014a20b80263b40918014a
20b80262b40918014a20b80261b40918014a20b80260b40918014a20b802
5fb40918014a20b8025eb40918014a20b8025db40918014a20b8025cb409
18014a20b8025bb40918014a20b8025ab40918014a20b80259b40918014a
20b80258b40918014a20b80257b40918014a20b80256b40918014a20b802
55b40918014a20b80254b40918014a20b80253b40918014a20b80252b409
18014a20b80251b40918014a20b80250b40918014a20b8024fb40918014a
20b8024eb40918014a20b8024db40918014a20b8024cb40918014a20b802
4bb40918014a20b8024ab40918014a20b80249b40918014a20b80248b409
18014a20b80247b40918014a20b80246b40918014a20b80245b40918014a
20b80244b40918014a20b80243b40918014a20b80242b40918014a20b802
41b40918014a20b80240b40918014a20b8023fb40918014a20b8023eb409
18014a20b8023db40918014a20b8023cb40918014a20b8023bb40918014a
20b8023ab40918014a20b80239b40918014a20b80238b40918014a20b802
37b40918014a20b80236b40918014a20b80235b40918014a20b80234b409
18014a20b80233b40918014a20b80232b40918014a20b80231b40918014a
20b80230b40918014a20b8022fb40918014a20b8022eb40918014a20b802
2db40918014a20b8022cb40918014a20b8022bb40918014a20b8022ab409
18014a20b80229b40918014a20b80228b40918014a20b80227b40918014a
20b80226b40918014a20b80225b40918014a20b80224b40918014a20b802
23b40918014a20b80222b40918014a20b80221b40918014a20b80220b409
18014a20b8021fb40918014a20b8021eb40918014a20b8021db40918014a
20b8021cb40918014a20b8021bb40918014a20b8021ab40918014a20b802
19b40918014a20b80218b40918014a20b80217b40918014a20b80216b409
18014a20b80215b40918014a20b80214b40918014a20b80213b40918014a
20b80212b40918014a20b80211b40918014a20b80210b40918014a20b802
0fb40918014a20b8020eb40918014a20b8020db40918014a20b8020cb409
18014a20b8020bb40918014a20b8020ab40918014a20b80209b40918014a
20b80208b40918014a20b80207b40918014a20b80206b40918014a20b802
05b40918014a20b80204b40918014a20b80203b40918014a20b80202b409
18014a20b80201b40918014a20b80200b40918014a20b801ffb40918014a
20b801feb40918014a20b801fdb40918014a20b801fcb40918014a20b801
fbb40918014a20b801fab40918014a20b801f9b40918014a20b801f8b409
18014a20b801f7b40918014a20b801f6b40918014a20b801f5b40918014a
20b801f4b40918014a20b801f3b40918014a20b801f2b40918014a20b801
f1b40918014a20b801f0b40918014a20b801efb40918014a20b801eeb409
18014a20b801edb40918014a20b801ecb40918014a20b801ebb40918014a
20b801eab40918014a20b801e9b40918014a20b801e8b40918014a20b801
e7b40918014a20b801e6b40918014a20b801e5b40918014a20b801e4b409
18014a20b801e3b40918014a20b801e2b40918014a20b801e1b40918014a
20b801e0b40918014a20b801dfb40918014a20b801deb40918014a20b801
ddb40918014a20b801dcb40918014a20b801dbb40918014a20b801dab409
18014a20b801d9b40918014a20b801d8b40918014a20b801d7b40918014a
20b801d6b40918014a20b801d5b40918014a20b801d4b40918014a20b801
d3b40918014a20b801d2b40918014a20b801d1b40918014a20b801d0b409
18014a20b801cfb40918014a20b801ceb40918014a20b801cdb40918014a
20b801ccb40918014a20b801cbb40918014a20b801cab40918014a20b801
c9b40918014a20b801c8b40918014a20b801c7b40918014a20b801c6b409
18014a20b801c5b40918014a20b801c4b40918014a20b801c3b40918014a
20b801c2b40918014a20b801c1b40918014a20b801c0b40918014a20b801
bfb40918014a20b801beb40918014a20b801bdb40918014a20b801bcb409
18014a20b801bbb40918014a20b801bab40918014a20b801b9b40918014a
20b801b8b40918014a20b801b7b40918014a20b801b6b40918014a20b801
b5b40918014a20b801b4b40918014a20b801b3b40918014a20b801b2b409
18014a20b801b1b40918014a20b801b0b40918014a20b801afb40918014a
20b801aeb40918014a20b801adb40918014a20b801acb40918014a20b801
abb40918014a20b801aab40918014a20b801a9b40918014a20b801a8b409
18014a20b801a7b40918014a20b801a6b40918014a20b801a5b40918014a
20b801a4b40918014a20b801a3b40918014a20b801a2b40918014a20b801
a1b40918014a20b801a0b40918014a20b8019fb40918014a20b8019eb409
18014a20b8019db40918014a20b8019cb40918014a20b8019bb40918014a
20b8019ab40918014a20b80199b40918014a20b80198b40918014a20b801
97b40918014a20b80196b40918014a20b80195b40918014a20b80194b409
18014a20b80193b40918014a20b80192b40918014a20b80191b40918014a
20b80190b40918014a20b8018fb40918014a20b8018eb40918014a20b801
8db40918014a20b8018cb40918014a20b8018bb40918014a20b8018ab409
18014a20b80189b40918014a20b80188b40918014a20b80187b40918014a
20b80186b40918014a20b80185b40918014a20b80184b40918014a20b801
83b40918014a20b80182b40918014a20b80181b40918014a20b80180b409
18014a20b8017fb40918014a20b8017eb40918014a20b8017db40918014a
20b8017cb40918014a20b8017bb40918014a20b8017ab40918014a20b801
79b40918014a20b80178b40918014a20b80177b40918014a20b80176b409
18014a20b80175b40918014a20b80174b40918014a20b80173b40918014a
20b80172b40918014a20b80171b40918014a20b80170b40918014a20b801
6fb40918014a20b8016eb40918014a20b8016db40918014a20b8016cb409
18014a20b8016bb40918014a20b8016ab40918014a20b80169b40918014a
20b80168b40918014a20b80167b40918014a20b80166b40918014a20b801
65b40918014a20b80164b40918014a20b80163b40918014a20b80162b409
18014a20b80161b40918014a20b80160b40918014a20b8015fb40918014a
20b8015eb40918014a20b8015db40918014a20b8015cb40918014a20b801
5bb40918014a20b8015ab40918014a20b80159b40918014a20b80158b409
18014a20b80157b40918014a20b80156b40918014a20b80155b40918014a
20b80154b40918014a20b80153b40918014a20b80152b40918014a20b801
50b40918014a20b8014fb40918014a20b8014eb40918014a20b8014cb409
18014a20b8014bb40918014a20b8014ab40918014a20b80149b40918014a
20b80148b40918014a20b80147b40918014a20b80146b40918014a20b801
45b40918014a20b80144b40918014a20b80143b30918014ab80284b21e3e
1fb80283b21e151fb80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8
027fb21e3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027b
b21e3e1fb8027ab21e3e1fb80279b21d411fb80278b21d431fb80277b21d
431fb80276b21d431fb80275b21d411fb80274b21d431fb80273b21d431f
b80272b21d411fb80271b21d421fb80270b21d421fb8026fb21d421fb802
6eb21d431fb8026db21d431fb8026cb21d431fb8026bb21c451fb8026ab2
1c451fb80269b21c451fb80268b21c451fb80267b21c451fb80266b21c44
1fb80265b21c451fb80264b21c451fb80263b21c451fb80262b21c451fb8
0261b21c451fb80260b21c451fb8025fb21c451fb8025eb21c441fb8025d
b21c451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c
451fb80258b21c451fb80257b21c451fb80256b21c451fb80255b21c451f
b80254b21c451fb80253b21c451fb80252b21c451fb80251b21c451fb802
50b21c451fb8024fb21c451fb8024eb21c451fb8024db21c451fb8024cb2
1c451fb8024bb21c451fb8024ab21b491fb80249b21b491fb80248b21b4a
1fb80247b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb8
0243b21b4c1fb80242b21b4b1fb80241b21b491fb80240b21b491fb8023f
b21b4a1fb8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b
4b1fb8023ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1f
b80236b21b4c1fb80235b21b491fb80234b21b491fb80233b21b4a1fb802
32b21b4a1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb2
1b4c1fb8022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c
1fb80229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb8
0225b21b4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221
b21b4b1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b
4c1fb8021cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1f
b80218b21a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a4e1fb802
14b21a4f1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b2
1a4e1fb8020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e
1fb8020bb21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb8
0207b21a4f1fb80206b219501fb80205b219511fb80204b219511fb80203
b219501fb80202b219511fb80201b219511fb80200b219511fb801ffb219
511fb801feb219501fb801fdb219511fb801fcb219511fb801fbb219511f
b801fab219501fb801f9b219511fb801f8b219511fb801f7b219511fb801
f6b219511fb801f5b218541fb801f4b218531fb801f3b218541fb801f2b2
18541fb801f1b218541fb801f0b218531fb801efb218541fb801eeb21854
1fb801edb218541fb801ecb218531fb801ebb218531fb801eab218541fb8
01e9b218541fb801e8b218541fb801e7b218541fb801e6b218531fb801e5
b218541fb801e4b218531fb801e3b218541fb801e2b218541fb801e1b218
541fb801e0b218531fb801dfb218531fb801deb218541fb801ddb218541f
b801dcb218541fb801dbb218541fb801dab218531fb801d9b218541fb801
d8b218541fb801d7b217571fb801d6b217561fb801d5b217561fb801d4b2
17571fb801d3b217571fb801d2b217571fb801d1b217571fb801d0b21756
1fb801cfb217561fb801ceb217571fb801cdb217571fb801ccb217571fb8
01cbb217571fb801cab217561fb801c9b217561fb801c8b217571fb801c7
b217571fb801c6b217571fb801c5b217571fb801c4b217571fb801c3b217
561fb801c2b217571fb801c1b217571fb801c0b217571fb801bfb217561f
b801beb217561fb801bdb217571fb801bcb217571fb801bbb217571fb801
bab217571fb801b9b217571fb801b8b217561fb801b7b217571fb801b6b2
17571fb801b5b217571fb801b4b217571fb801b3b2163f1fb801b2b2165b
1fb801b1b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2165b1fb8
01adb2165b1fb801acb2165b1fb801abb2165b1fb801aab2163e1fb801a9
b2163f1fb801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb801a5b216
5b1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1f
b801a0b2165b1fb8019fb2163e1fb8019eb2163f1fb8019db2163f1fb801
9cb2165b1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1fb80198b2
163e1fb80197b2165b1fb80196b2165b1fb80195b2165b1fb80194b2163e
1fb80193b2163f1fb80192b2163f1fb80191b2165b1fb80190b2165b1fb8
018fb2165b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f1fb8018b
b2165b1fb8018ab2165b1fb80189b2165b1fb80188b2165b1fb80187b216
5b1fb80186b215611fb80185b215621fb80184b215621fb80183b215661f
b80182b215661fb80181b215551fb80180b215451fb8017fb215361fb801
7eb215361fb8017db215611fb8017cb215621fb8017bb215621fb8017ab2
15641fb80179b215661fb80178b215661fb80177b215661fb80176b21566
1fb80175b215661fb80174b215661fb80173b215451fb80172b215621fb8
0171b215621fb80170b215631fb8016fb215641fb8016eb215661fb8016d
b215661fb8016cb215661fb8016bb215661fb8016ab215661fb80169b215
621fb80168b215621fb80167b215611fb80166b215641fb80165b215641f
b80164b215661fb80163b215661fb80162b215661fb80161b215661fb801
60b215661fb8015fb215661fb8015eb215551fb8015db215451fb8015cb2
15451fb8015bb215361fb8015ab215611fb80159b215621fb80158b21562
1fb80157b215631fb80156b215641fb80155b215661fb80154b215661fb8
0153b215661fb80152b215661fb80151b214401fb80150b214551fb8014f
b214561fb8014eb214831fb8014db2142d1fb8014cb214401fb8014bb214
401fb8014ab214411fb80149b214401fb80148b214401fb80147b214411f
b80146b2147e1fb80145b214871fb80144b2147f1fb80143b214801fb801
42b212461fb80141b212461fb80140b212461fb8013fb212461fb8013eb2
12441fb8013db212461fb8013cb211591fb8013bb211591fb8013ab2115b
1fb80139b2115b1fb80138b211471fb80137b211581fb80136b2115a1fb8
0135b2115b1fb80134b2115b1fb80133b2112c1fb80132b211471fb80131
b211551fb80130b211571fb8012fb211571fb8012eb211581fb8012db211
591fb8012cb211591fb8012bb2115a1fb8012ab2115a1fb80129b2115b1f
b80128b2115b1fb80127b2115b1fb80126b2115b1fb80125b211561fb801
24b211561fb80123b211571fb80122b211581fb80121b211591fb80120b2
115a1fb8011fb2115a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b
1fb8011bb2115b1fb8011ab2115b1fb80119b2105d1fb80118b2105e1fb8
0117b2105f1fb80116b2105f1fb80115b2105f1fb80114b2105f1fb80113
b2105f1fb80112b2105d1fb80111b2105e1fb80110b2105f1fb8010fb210
5f1fb8010eb2105f1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1f
b8010ab2105f1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb801
06b2105d1fb80105b2105e1fb80104b2105f1fb80103b2105f1fb80102b2
105f1fb80101b2105f1fb8010040ff0f621fff0f621ffe0f631ffd0f641f
fc0f621ffb0f621ffa0f621ff90f631ff80f641ff70f641ff60f641ff50f
641ff40f621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641f
ed0f621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60e
671fe50e681fe40e681fe30e681fe20e681fe10e671fe00e681fdf0e681f
de0e681fdd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d
311fd60d6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1f
cf0d2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d
6a1fc70d691fc60d681fc50d671fc40d261fc30d311fc20d311fc10d311f
40ffc00d311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741f
b90c741fb80c741fb70c711fb60c711fb50c721fb40c731fb30c741fb20c
741fb10c741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1f
aa0b7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b
7e1fa20b791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f
9b0b7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b
7e1f930b7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f
8c0aa71f8503251f8403381f8301381f8255805581ab80557f557d557eab
7d550b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a5579
55775578ab7755ba028600660285403c5576ab755504751475747503f475
01ab750144750130750102007510752075030c7455725573ab7255007250
728072b072043bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c72
0d104671556f5570ab6f556e666d556a03251f6938675568ab6755663864
5565ab645563386255613860555f385d555eab5d555c385a555bab5a5559
3858555703251f5638545555ab54555338515552ab51554f384e554e0325
1f4d384b554cab4b554a38485549ab4855473846554503381f001c101c20
1c0310b8ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb01bc0
1b03120f1a1f1a02290f1901434f19016f197f198f19030f18cf18024018
292c460f17cf17df17ef1704134017292e460016101620160315b8ffc0b3
164d5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d162326460f
15010f151f1502451f15010011e011f0110315bf10cf10020f0f010f0fff
0f02400f3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f
0d1f0dff0d0316400d313746b8ffc040270c5054460f0b1f0b02553f0b4f
0b02400b3f4346400b2d30460003012001010001100120010308b8ffc0b4
01151f4603bd0100010000050001019000542b4bb80800524bb008505bb0
0188b02553b00188b040515ab00688b000555a5b58b101018e59b1010243
54b0144b515a58b101018e59858d8d001d424bb01d5358b203a0a01d4259
4bb0805358b20340401d42594bb0ff5358b20300001d42592b5e7375732b
2b745e732b2b5e73742b73742b7374745e7301755e73742b2b2b2b5e732b
5e732b7374755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f73
737373742b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2bb1000243545841ff028400640283
0064028200640281006402800064027f0064027e0064027d0064027c0064
027b0064027a006402790064027800640277006402760064027500640274
0064027300640271006402700064026f0064026e0064026d0064026c0064
026b0064026a006402690064026800640267006402660064026500640264
006402630064026200640261006402600064025f0064025e0064025d0064
025c0064025b0064025a0064025900640258006402570064025600640255
00640254006402530064025200640251006402500064024f0064024e0064
024d0064024c0064024b0064024a00640249006402480064024700640246
0064024500640244006402430064024200640241006402400064023f0064
023e0064023d0064023c0064023b0064023a006402390064023800640237
006402360064023500640234006402330064023200640231006402300064
022f0064022e0064022d0064022c0064022b0064022a0064022900640228
006402270064022600640225006402240064022300640222006402210064
02200064021f0064021e0064021d0064021c0064021b0064021a00640219
006402180064021700640216006402150064021400640213006402120064
0211006402100064020f0064020e0064020d0064020c0064020b0064020a
00640209006402080064020700640206006402050064020441ff00640203
006402020064020100640200006401ff006401fe006401fd006401fc0064
01fb006401fa006401f9006401f8006401f7006401f6006401f5006401f4
006401f3006401f2006401f1006401f0006401ef006401ee006401ed0064
01ec006401eb006401ea006401e9006401e8006401e7006401e6006401e5
006401e4006401e3006401e2006401e1006401e0006401df006401de0064
01dd006401dc006401db006401da006401d9006401d8006401d7006401d6
006401d5006401d4006401d3006401d2006401d1006401d0006401cf0064
01ce006401cd006401cc006401cb006401ca006401c9006401c8006401c7
006401c6006401c5006401c4006401c3006401c2006401c1006401c00064
01bf006401be006401bd006401bc006401bb006401ba006401b9006401b8
006401b7006401b6006401b5006401b4006401b3006401b2006401b10064
01b0006401af006401ae006401ad006401ac006401ab006401aa006401a9
006401a8006401a7006401a6006401a5006401a4006401a3006401a20064
01a1006401a00064019f0064019e0064019d0064019c0064019b0064019a
006401990064019800640197006401960064019500640194006401930064
019200640191006401900064018f0064018e0064018d0064018c0064018b
0064018a0064018900640188006401870064018600640185006441800184
006401830064018200640181006401800064017f0064017e0064017d0064
017c0064017b0064017a0064017900640178006401770064017600640175
00640174006401730064017200640171006401700064016f0064016e0064
016d0064016c0064016b0064016a00640169006401680064016700640166
0064016500640164006401630064016200640161006401600064015f0064
015e0064015d0064015c0064015b0064015a006401590064015800640157
0064015600640155006401540064015300640152006401500064014f0064
014e0064014c0064014b0064014a00640149006401480064014700640146
00640145006401440064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[1491 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

2 0 3 <> MZQAAA+Calibri AddT42Char 
2 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>MZQAAA+Calibri AddT42Char 
MZQAAA+Calibri /CharStrings get begin
/space 3 def
end
MZQAAA+Calibri /Encoding get
dup 32 /space put
pop
end
%ADOEndSubsetFont
/WDZEMW+Calibri /MZQAAA+Calibri findfont ct_VMDictPut
/WDZEMW+Calibri*1 
[32{/.notdef}rp /space 223{/.notdef}rp]
WDZEMW+Calibri nf
WDZEMW+Calibri*1 [16.0595 0 0 -16.0648 0 0 ]msf
265.836 871.207 mo
( )sh
grestore
3 lw
331.38 529.07 mo
349.52 529.07 li
369.2 529.07 li
390.43 529.07 li
413.2 529.07 li
437.52 529.07 li
@
331.2 529.24 mo
331.2 536.57 li
331.2 544.91 li
331.2 554.26 li
@
290.88 529.66 mo
290.88 536.87 li
290.88 545.07 li
290.88 554.26 li
@
185.76 529.42 mo
203.73 529.42 li
223.22 529.42 li
244.24 529.42 li
266.8 529.42 li
290.88 529.42 li
@
86.4 508.74 mo
284.4 508.74 li
284.4 365.79 li
86.4 365.79 li
cp
.783689 .786528 .793894 rgb
ef
.136538 .123054 .126659 rgb
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [12.0002 0 0 -12.0002 0 0 ]msf
173.84 502.35 mo
(\0005)sh
182.506 502.35 mo
(\000R)sh
189.18 502.35 mo
(\000Z)sh
241.2 380.75 mo
(\000$)sh
249.204 380.75 mo
(\000')sh
257.87 380.75 mo
(\000')sh
266.536 380.75 mo
(\0005)sh
100.52 488.34 mo
155.579 488.34 li
155.579 396.422 li
100.52 396.422 li
cp
1 1 1 rgb
ef
1.5 lw
100.52 488.34 mo
155.579 488.34 li
155.579 396.422 li
100.52 396.422 li
cp
.136538 .123054 .126659 rgb
@
155.37 419.58 mo
150.36 419.58 li
143.72 419.58 li
135.44 419.58 li
125.52 419.58 li
113.97 419.58 li
100.77 419.58 li
@
155.58 465.3 mo
150.54 465.3 li
143.85 465.3 li
135.51 465.3 li
125.52 465.3 li
113.88 465.3 li
100.59 465.3 li
@
gsave
144.33 469.14 mo
144.33 439.348 li
108.329 439.348 li
108.329 469.14 li
cp
clp
/WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [0 -20.0287 -20.0367 0 0 0 ]msf
133.679 462.775 mo
(\006\256)sh
WDZEMS+Calibri,Bold*1 [0 -12.0285 -12.0333 0 0 0 ]msf
133.679 445.663 mo
( )sh
grestore
100.52 468.42 mo
100.52 464.72 li
100.52 459.6 li
100.52 453.08 li
100.52 445.15 li
100.52 435.81 li
@
gsave
99.36 416.22 mo
155.459 416.22 li
155.459 398.219 li
99.36 398.219 li
cp
clp
/WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [12.0568 0 0 -12.0023 0 0 ]msf
99.36 411.579 mo
(\012\331)sh
106.594 411.579 mo
(\012\332)sh
113.827 411.579 mo
(\012\331)sh
122.893 411.579 mo
(\001\345)sh
133.939 411.579 mo
(\012\332)sh
141.173 411.579 mo
(\012\331)sh
148.407 411.579 mo
(\012\331)sh
WDZEMT+Calibri,BoldItalic*1 [12.0568 0 0 -12.0023 0 0 ]msf
155.491 411.579 mo
( )sh
grestore
gsave
99.861 439.62 mo
155.96 439.62 li
155.96 421.62 li
99.861 421.62 li
cp
clp
/WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [12.0568 0 0 -12.0023 0 0 ]msf
99.861 434.979 mo
(\012\331)sh
107.095 434.979 mo
(\012\331)sh
114.328 434.979 mo
(\012\332)sh
123.394 434.979 mo
(\001\345)sh
134.44 434.979 mo
(\012\331)sh
141.674 434.979 mo
(\012\331)sh
148.908 434.979 mo
(\012\332)sh
WDZEMS+Calibri,Bold*1 [12.0568 0 0 -12.0023 0 0 ]msf
155.992 434.979 mo
( )sh
grestore
gsave
100.51 483.66 mo
156.609 483.66 li
156.609 465.66 li
100.51 465.66 li
cp
clp
/WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [12.0568 0 0 -12.0023 0 0 ]msf
100.51 479.019 mo
(\012\331)sh
107.744 479.019 mo
(\012\331)sh
114.977 479.019 mo
(\012\331)sh
124.043 479.019 mo
(\001\345)sh
135.089 479.019 mo
(\012\331)sh
142.323 479.019 mo
(\012\331)sh
149.557 479.019 mo
(\012\332)sh
WDZEMS+Calibri,Bold*1 [12.0568 0 0 -12.0023 0 0 ]msf
156.641 479.019 mo
( )sh
grestore
155.52 443.58 mo
150.48 443.58 li
143.79 443.58 li
135.45 443.58 li
125.46 443.58 li
113.82 443.58 li
100.53 443.58 li
@
158.83 488.34 mo
213.889 488.34 li
213.889 396.422 li
158.83 396.422 li
cp
1 1 1 rgb
ef
158.83 488.34 mo
213.889 488.34 li
213.889 396.422 li
158.83 396.422 li
cp
.136538 .123054 .126659 rgb
@
213.67 419.58 mo
208.67 419.58 li
202.03 419.58 li
193.75 419.58 li
183.83 419.58 li
172.27 419.58 li
159.08 419.58 li
@
213.89 465.3 mo
208.84 465.3 li
202.15 465.3 li
193.81 465.3 li
183.83 465.3 li
172.19 465.3 li
158.9 465.3 li
@
gsave
203.76 468.92 mo
203.76 439.128 li
167.759 439.128 li
167.759 468.92 li
cp
clp
/WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [0 -20.0287 -20.0367 0 0 0 ]msf
193.109 462.555 mo
(\006\256)sh
WDZEMS+Calibri,Bold*1 [0 -12.0285 -12.0333 0 0 0 ]msf
193.109 445.443 mo
( )sh
grestore
158.83 468.42 mo
158.83 464.72 li
158.83 459.6 li
158.83 453.08 li
158.83 445.15 li
158.83 435.81 li
@
gsave
157.67 416.22 mo
213.769 416.22 li
213.769 398.219 li
157.67 398.219 li
cp
clp
/WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [12.0568 0 0 -12.0023 0 0 ]msf
157.67 411.579 mo
(\012\331)sh
164.904 411.579 mo
(\012\331)sh
172.137 411.579 mo
(\012\331)sh
181.203 411.579 mo
(\001\345)sh
192.249 411.579 mo
(\012\332)sh
199.483 411.579 mo
(\012\331)sh
206.717 411.579 mo
(\012\331)sh
WDZEMT+Calibri,BoldItalic*1 [12.0568 0 0 -12.0023 0 0 ]msf
213.801 411.579 mo
( )sh
grestore
gsave
158.79 439.26 mo
214.889 439.26 li
214.889 421.26 li
158.79 421.26 li
cp
clp
/WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [12.0568 0 0 -12.0023 0 0 ]msf
158.79 434.619 mo
(\012\331)sh
166.024 434.619 mo
(\012\331)sh
173.257 434.619 mo
(\012\331)sh
182.323 434.619 mo
(\001\345)sh
193.369 434.619 mo
(\012\331)sh
200.603 434.619 mo
(\012\332)sh
207.837 434.619 mo
(\012\332)sh
WDZEMS+Calibri,Bold*1 [12.0568 0 0 -12.0023 0 0 ]msf
214.921 434.619 mo
( )sh
grestore
gsave
158.82 483.66 mo
214.919 483.66 li
214.919 465.66 li
158.82 465.66 li
cp
clp
/WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [12.0568 0 0 -12.0023 0 0 ]msf
158.82 479.019 mo
(\012\331)sh
166.054 479.019 mo
(\012\331)sh
173.287 479.019 mo
(\012\331)sh
182.353 479.019 mo
(\001\345)sh
193.399 479.019 mo
(\012\331)sh
200.633 479.019 mo
(\012\331)sh
207.867 479.019 mo
(\012\332)sh
WDZEMS+Calibri,Bold*1 [12.0568 0 0 -12.0023 0 0 ]msf
214.951 479.019 mo
( )sh
grestore
213.83 443.58 mo
208.79 443.58 li
202.1 443.58 li
193.76 443.58 li
183.77 443.58 li
172.13 443.58 li
158.84 443.58 li
@
217.51 488.34 mo
272.569 488.34 li
272.569 396.422 li
217.51 396.422 li
cp
1 1 1 rgb
ef
217.51 488.34 mo
272.569 488.34 li
272.569 396.422 li
217.51 396.422 li
cp
.136538 .123054 .126659 rgb
@
272.36 419.58 mo
267.36 419.58 li
260.71 419.58 li
252.43 419.58 li
242.52 419.58 li
230.96 419.58 li
217.77 419.58 li
@
272.57 465.3 mo
267.53 465.3 li
260.84 465.3 li
252.5 465.3 li
242.51 465.3 li
230.87 465.3 li
217.58 465.3 li
@
gsave
262.62 469.06 mo
262.62 439.268 li
226.619 439.268 li
226.619 469.06 li
cp
clp
/WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [0 -20.0287 -20.0367 0 0 0 ]msf
251.969 462.695 mo
(\006\256)sh
WDZEMS+Calibri,Bold*1 [0 -12.0285 -12.0333 0 0 0 ]msf
251.969 445.583 mo
( )sh
grestore
217.51 468.42 mo
217.51 464.72 li
217.51 459.6 li
217.51 453.08 li
217.51 445.15 li
217.51 435.81 li
@
gsave
216.39 416.58 mo
272.489 416.58 li
272.489 398.58 li
216.39 398.58 li
cp
clp
/WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [12.0568 0 0 -12.0023 0 0 ]msf
216.39 411.939 mo
(\012\332)sh
223.624 411.939 mo
(\012\332)sh
230.857 411.939 mo
(\012\331)sh
239.923 411.939 mo
(\001\345)sh
250.969 411.939 mo
(\012\331)sh
258.203 411.939 mo
(\012\331)sh
265.437 411.939 mo
(\012\331)sh
WDZEMT+Calibri,BoldItalic*1 [12.0568 0 0 -12.0023 0 0 ]msf
272.521 411.939 mo
( )sh
grestore
gsave
217.11 439.62 mo
273.209 439.62 li
273.209 421.62 li
217.11 421.62 li
cp
clp
/WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [12.0568 0 0 -12.0023 0 0 ]msf
217.11 434.979 mo
(\012\331)sh
224.344 434.979 mo
(\012\331)sh
231.577 434.979 mo
(\012\332)sh
240.643 434.979 mo
(\001\345)sh
251.689 434.979 mo
(\012\331)sh
258.923 434.979 mo
(\012\331)sh
266.157 434.979 mo
(\012\332)sh
WDZEMS+Calibri,Bold*1 [12.0568 0 0 -12.0023 0 0 ]msf
273.241 434.979 mo
( )sh
grestore
gsave
217.5 483.66 mo
273.599 483.66 li
273.599 465.66 li
217.5 465.66 li
cp
clp
/WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [12.0568 0 0 -12.0023 0 0 ]msf
217.5 479.019 mo
(\012\332)sh
224.734 479.019 mo
(\012\331)sh
231.967 479.019 mo
(\012\331)sh
241.033 479.019 mo
(\001\345)sh
252.079 479.019 mo
(\012\331)sh
259.313 479.019 mo
(\012\331)sh
266.547 479.019 mo
(\012\332)sh
WDZEMS+Calibri,Bold*1 [12.0568 0 0 -12.0023 0 0 ]msf
273.631 479.019 mo
( )sh
grestore
272.52 443.58 mo
267.47 443.58 li
260.78 443.58 li
252.44 443.58 li
242.46 443.58 li
230.82 443.58 li
217.53 443.58 li
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
150.26 388.52 mo
(\000%)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
150.26 388.52 mo
(\000%) false chp
.0071429 lw
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
162.275 388.52 mo
(\0005)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
162.275 388.52 mo
(\0005) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
175.282 388.52 mo
(\000$)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
175.282 388.52 mo
(\000$) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
187.297 388.52 mo
(\0000)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
187.297 388.52 mo
(\0000) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
202.3 388.52 mo
(\000\003)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
202.3 388.52 mo
(\000\003) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
207.31 388.52 mo
(\000\013)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
207.31 388.52 mo
(\000\013) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
213.32 388.52 mo
(\000$)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
213.32 388.52 mo
(\000$) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
225.33 388.52 mo
(\000\014)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
225.33 388.52 mo
(\000\014) false chp
@
3 lw
317.23 764.5 mo
317.23 770.81 li
317.23 778 li
317.23 786.05 li
@
257.4 183.11 mo
257.4 190.11 li
257.4 198.08 li
257.4 207.02 li
@
257.13 124.9 mo
257.13 130.09 li
257.13 135.99 li
257.13 142.61 li
@
262.65 137.09 mo
257.13 142.61 li
251.61 137.09 li
@
1.5 lw
304.94 1.75 mo
308.16 1.75 li
308.16 21.0701 li
304.94 27.52 li
301.72 21.0701 li
301.72 1.75 li
304.94 1.75 li
@
195.84 508.9 mo
186.09 518.65 li
176.64 528.1 li
@
446.4 508.9 mo
435.67 519.63 li
425.28 530.02 li
@
3 lw
305.28 27.52 mo
305.28 35.62 li
305.28 44.5701 li
305.28 54.37 li
305.28 65.03 li
@
360 66.47 mo
360 75.64 li
360 85.78 li
360 96.88 li
360 108.95 li
@
365.52 103.43 mo
360 108.95 li
354.48 103.43 li
@
360 65.03 mo
342.43 65.03 li
323.36 65.03 li
302.8 65.03 li
280.74 65.03 li
257.18 65.03 li
@
257.13 65.0801 mo
257.13 70.2101 li
257.13 76.04 li
257.13 82.5801 li
@
262.65 77.0601 mo
257.13 82.5801 li
251.61 77.0601 li
@
%ADOBeginSubsetFont: WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H 1 GetGlyphDirectory
21 <001C60D8A8C9B7EF3224FDCDB713E1363D90A421BCF0888C3B4D30C904D7
7A555A7BF3A0C1EC42D411BCFFDC43A0189FCBE16E3FC6EBB49A9DAC53485073
2E658D99CC47347866724CC724C02EF45DCC35614677A3C864304B373D0F578A
F5C2267569D31A4C4F227D0B69D2DF5F89475069E9310691C0B6CB158DEAD928
217B03> |
!
end
end end
%ADOEndSubsetFont
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
143.6 526.1 mo
(\000\025)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
143.6 526.1 mo
(\000\025) false chp
.0055555 lw
@
%ADOBeginSubsetFont: WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H 1 GetGlyphDirectory
20 <001C60D8A8C9B7EF32247BA33842B70030D88DA53CAB78CFF567565D2330
899ADBFC5C4AC8191A> |
!
end
end end
%ADOEndSubsetFont
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
151.393 526.1 mo
(\000\024)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
151.393 526.1 mo
(\000\024) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
159.185 526.1 mo
(\000\023)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
159.185 526.1 mo
(\000\023) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
166.978 526.1 mo
(\000\023)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
166.978 526.1 mo
(\000\023) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
445.21 526.69 mo
(\000\025)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
445.21 526.69 mo
(\000\025) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
453.003 526.69 mo
(\000\024)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
453.003 526.69 mo
(\000\024) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
460.795 526.69 mo
(\000\023)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
460.795 526.69 mo
(\000\023) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
468.588 526.69 mo
(\000\023)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
468.588 526.69 mo
(\000\023) false chp
@
3 lw
357.3 750.64 mo
357.3 755.28 li
357.3 760.56 li
357.3 766.48 li
@
448.74 657.76 mo
448.74 660.71 li
448.74 664.07 li
448.74 667.84 li
@
448.02 704.56 mo
448.02 707.7 li
448.02 711.28 li
448.02 715.3 li
@
356.94 703.84 mo
356.94 710.9 li
356.94 718.94 li
356.94 727.96 li
@
268.56 657.14 mo
268.56 660.27 li
268.56 663.84 li
268.56 667.84 li
@
268.56 703.84 mo
268.56 707.17 li
268.56 710.97 li
268.56 715.22 li
@
234.53 703.84 mo
302.59 703.84 li
305.08 703.84 307.09 701.82 307.09 699.34 cv
307.09 699.34 li
307.09 672.34 li
307.09 669.85 305.08 667.84 302.59 667.84 cv
234.53 667.84 li
232.04 667.84 230.03 669.85 230.03 672.34 cv
230.03 699.34 li
230.03 701.82 232.04 703.84 234.53 703.84 cv
cp
.783689 .786528 .793894 rgb
ef
.136538 .123054 .126659 rgb
%ADOBeginSubsetFont: WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H 1 GetGlyphDirectory
52 <001C60D8A8C9B6FF86FBC15643A6D15A73DBB03AE30E5FD06D05C95E9B4C
EA089FCA7DCF37ED2EEB1B7C643DD58D83163DD655E50FD52E0AC2D98D956BDE
E95CB50228D2FB5579313B5CD8FFA30C4623D2939DB829D711F37FDEF5E9AA36
B22DB2B253940FDDB59B624C7DC319E9F0DC7AD77491731D288B7EAE741657D1
1E193161D2094E09AC2337F91640967A89200A7D8083782632AFFE57D9F3C0B7
4A9A21890E07F3D3F69915AA> |
!
end
end end
%ADOEndSubsetFont
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
240.98 684.32 mo
(\0004)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
240.98 684.32 mo
(\0004) false chp
.0055555 lw
@
%ADOBeginSubsetFont: WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H 1 GetGlyphDirectory
38 <001C60D8A8C9B6079F6D680ED5954EB11DF655CB3B7A6BEF1BA3F12270A3
64DFC8A1D6BE73018D3AD55DD2DB299FE2D07F84178A74CEE42FA4D29F4AE66D
6C8D801F27874E58265B2D22A2ABBA158F1364958932FDDC8C5EDA5A887F1C87
EB5EB8533BE0B90EB0B50655681ECBB8C40D3392D158E667C56379D756D42452
6501EA7ED6BB1A> |
!
end
end end
%ADOEndSubsetFont
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
251.876 684.32 mo
(\000&)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
251.876 684.32 mo
(\000&) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
261.993 684.32 mo
(\000\003)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
261.993 684.32 mo
(\000\003) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
265.89 684.32 mo
(\000$)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
265.89 684.32 mo
(\000$) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
275.235 684.32 mo
(\000U)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
275.235 684.32 mo
(\000U) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
279.904 684.32 mo
(\000U)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
279.904 684.32 mo
(\000U) false chp
@
%ADOBeginSubsetFont: WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H 1 GetGlyphDirectory
68 <001C60D8A8C9B7EF3224F06296257A69E029A95A84F7B44B64D975705612
44EFC933295C0DBFE8F2FCB7BC576474B111685566FAA9ED4F4FF51802DEE8A8
A7E4461078708E87A394D186FE7986609CDE813A87571346754A779191AB00DB
76368627BE1EBF125976FF1B4FFC4E8351CE9A68F7A6F6D1C766184B91CA3222
B9C0E268F5C44611BBA28BE96BADD49C91809AE3F2DED110BEBCFD66D6398C16
73CC02D5569604246A2C883F3BD80027922AED67E985FDB2111F602ED5702F01
6EE587495DD2B23A824D4C94E07669A94953E65617EFAB5BAB> |
!
end
end end
%ADOEndSubsetFont
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
284.572 684.32 mo
(\000D)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
284.572 684.32 mo
(\000D) false chp
@
%ADOBeginSubsetFont: WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H 1 GetGlyphDirectory
92 <001C60D8A8C9B7A73DB69D4B3117590E2B4F2184C7C7F43167DA511A9669
71921A69F2C0C3198DCB2268C6D8D811A4C0A3D10082D7223817EA0F7C1289F4
2BF68397B33E1A4AAC7D806773A8AA7E44D06DC299D23D89A0C16891FC32E0E2
3921D356A9BBB8B556C3> |
!
end
end end
%ADOEndSubsetFont
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
292.365 684.32 mo
(\000\\)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
292.365 684.32 mo
(\000\\) false chp
@
%ADOBeginSubsetFont: WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H 1 GetGlyphDirectory
33 <001C60D8A8C9B7F374869D7BA180C21187CBA5AE6BC06F043117DDD3475B
A09F5F511A62AF6B9CB2> |
!
end
end end
%ADOEndSubsetFont
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
257.91 701.12 mo
(\000!)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
257.91 701.12 mo
(\000!) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
266.093 701.12 mo
(\000!)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
266.093 701.12 mo
(\000!) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
274.276 701.12 mo
(\000!)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
274.276 701.12 mo
(\000!) false chp
@
321.84 703.84 mo
392.04 703.84 li
394.53 703.84 396.54 701.82 396.54 699.34 cv
396.54 699.34 li
396.54 672.34 li
396.54 669.85 394.53 667.84 392.04 667.84 cv
321.84 667.84 li
319.35 667.84 317.34 669.85 317.34 672.34 cv
317.34 699.34 li
317.34 701.82 319.35 703.84 321.84 703.84 cv
cp
.783689 .786528 .793894 rgb
ef
.136538 .123054 .126659 rgb
%ADOBeginSubsetFont: WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H 1 GetGlyphDirectory
54 <001C60D8A8C9B64EDFFB9F9C94AD605317974177DB6D1C7327D3B5C1F3AE
5FEE5C5CD0FC715E26B316CD7F3DB6B380974F9BCE920CAC12CCE6E2955A3C2B
9E41289874E53DD842800D1E57F05674621002CB7587619909CA71DD04BE79FE
5A857B08CA841B1EC8E863F97F2BF08BF4E392DB49DCA495B881FCB2198D3FD8
748718E71346DCBF03F81FE640F44018AF6CAAEE788B58A71D760BBEF368800C
8DEFC16B3318B3DB22A7B7C071D971E35A5BB319F130D6B19B7484383AB58986
C51D0457> |
!
end
end end
%ADOEndSubsetFont
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
324.95 682.16 mo
(\0006)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
324.95 682.16 mo
(\0006) false chp
@
%ADOBeginSubsetFont: WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H 1 GetGlyphDirectory
75 <001C60D8A8C9B7EF32240E82DCC1C14FD7D9FC767BE8E6F8DD70629D3125
8CF36453CCF089BE1B289891D5187BF9FB9E48ED78405BF04CE0B19CBCADABF8
29CAF6E9A9F6B6C02044A856959F1605C0F41E53CD61616E9133717B> |
!
end
end end
%ADOEndSubsetFont
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
334.295 682.16 mo
(\000K)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
334.295 682.16 mo
(\000K) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
342.087 682.16 mo
(\000L)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
342.087 682.16 mo
(\000L) false chp
@
%ADOBeginSubsetFont: WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H 1 GetGlyphDirectory
73 <001C60D8A8C9B854D0F44A64B6A0D91294AEAEA1C79AFF834E96C661CC77
1262A47B28F7C6CDCD0C99E395912DE57F8D9CFE561052BEDE6032465FFA9613
5A30FC446BA1805880A5EF2E84954F760D851B1386A0F86113A49ED8A5D0> |
!
end
end end
%ADOEndSubsetFont
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
345.205 682.16 mo
(\000I)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
345.205 682.16 mo
(\000I) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
349.101 682.16 mo
(\000W)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
349.101 682.16 mo
(\000W) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
352.99 682.16 mo
(\000\003)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
352.99 682.16 mo
(\000\003) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
356.89 682.16 mo
(\000$)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
356.89 682.16 mo
(\000$) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
366.235 682.16 mo
(\000U)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
366.235 682.16 mo
(\000U) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
370.904 682.16 mo
(\000U)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
370.904 682.16 mo
(\000U) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
375.573 682.16 mo
(\000D)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
375.573 682.16 mo
(\000D) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
383.365 682.16 mo
(\000\\)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
383.365 682.16 mo
(\000\\) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
331.94 698.96 mo
(\000!)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
331.94 698.96 mo
(\000!) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
340.123 698.96 mo
(\000!)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
340.123 698.96 mo
(\000!) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
348.31 698.96 mo
(\000\003)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
348.31 698.96 mo
(\000\003) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
352.21 698.96 mo
(\000\024)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
352.21 698.96 mo
(\000\024) false chp
@
%ADOBeginSubsetFont: WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H 1 GetGlyphDirectory
23 <001C60D8A8C9B7EF3224E29FD1ACF90CD3A4C769E6F26B5B3B5EC2D65370
E670218D0C18EB87F95658751E089E69D93A553E594F280C782965EF> |
!
end
end end
%ADOEndSubsetFont
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
360.003 698.96 mo
(\000\027)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
360.003 698.96 mo
(\000\027) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
367.795 698.96 mo
(\000\023)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
367.795 698.96 mo
(\000\023) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
375.588 698.96 mo
(\000\023)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
375.588 698.96 mo
(\000\023) false chp
@
411.48 703.84 mo
486 703.84 li
488.49 703.84 490.5 701.82 490.5 699.34 cv
490.5 699.34 li
490.5 672.34 li
490.5 669.85 488.49 667.84 486 667.84 cv
411.48 667.84 li
408.99 667.84 406.98 669.85 406.98 672.34 cv
406.98 699.34 li
406.98 701.82 408.99 703.84 411.48 703.84 cv
cp
.783689 .786528 .793894 rgb
ef
.136538 .123054 .126659 rgb
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
415.67 682.88 mo
(\0006)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
415.67 682.88 mo
(\0006) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
425.015 682.88 mo
(\000K)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
425.015 682.88 mo
(\000K) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
432.807 682.88 mo
(\000L)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
432.807 682.88 mo
(\000L) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
435.925 682.88 mo
(\000I)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
435.925 682.88 mo
(\000I) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
439.821 682.88 mo
(\000W)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
439.821 682.88 mo
(\000W) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
443.71 682.88 mo
(\000\003)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
443.71 682.88 mo
(\000\003) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
447.61 682.88 mo
(\000$)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
447.61 682.88 mo
(\000$) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
456.955 682.88 mo
(\000U)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
456.955 682.88 mo
(\000U) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
461.624 682.88 mo
(\000U)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
461.624 682.88 mo
(\000U) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
466.293 682.88 mo
(\000D)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
466.293 682.88 mo
(\000D) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
474.085 682.88 mo
(\000\\)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
474.085 682.88 mo
(\000\\) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
422.66 699.68 mo
(\000!)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
422.66 699.68 mo
(\000!) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
430.843 699.68 mo
(\000!)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
430.843 699.68 mo
(\000!) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
439.03 699.68 mo
(\000\003)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
439.03 699.68 mo
(\000\003) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
442.93 699.68 mo
(\000\025)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
442.93 699.68 mo
(\000\025) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
450.723 699.68 mo
(\000\024)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
450.723 699.68 mo
(\000\024) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
458.515 699.68 mo
(\000\023)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
458.515 699.68 mo
(\000\023) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
466.308 699.68 mo
(\000\023)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
466.308 699.68 mo
(\000\023) false chp
@
293.02 632.6 mo
437.02 632.6 li
437.02 600.51 li
293.02 600.51 li
cp
.860359 .863234 .87069 rgb
ef
1.5 lw
293.02 632.6 mo
437.02 632.6 li
437.02 600.51 li
293.02 600.51 li
293.02 632.6 li
@
284.52 624.1 mo
428.52 624.1 li
428.52 592.01 li
284.52 592.01 li
cp
1 1 1 rgb
ef
284.52 624.1 mo
428.52 624.1 li
428.52 592.01 li
284.52 592.01 li
cp
.136538 .123054 .126659 rgb
@
WDZEMU+TIMES#20NEW#20ROMAN,Bold*1 [12.0002 0 0 -12.0002 0 0 ]msf
356.52 611.65 mo
( )sh
359.52 611.65 mo
( )sh
362.52 611.65 mo
( )sh
365.52 611.65 mo
( )sh
386.73 751.08 mo
327.15 751.08 li
310.14 727.02 li
403.74 727.02 li
386.73 751.08 li
cp
.783689 .786528 .793894 rgb
ef
.136538 .123054 .126659 rgb
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
342.01 745.58 mo
(\0000)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
342.01 745.58 mo
(\0000) false chp
.0055555 lw
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
353.679 745.58 mo
(\0008)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
353.679 745.58 mo
(\0008) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
363.796 745.58 mo
(\000;)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
363.796 745.58 mo
(\000;) false chp
@
3 lw
356.52 563.8 mo
356.52 571.31 li
356.52 579.86 li
356.52 589.44 li
@
362.04 583.92 mo
356.52 589.44 li
351 583.92 li
@
504 563.62 mo
483.17 563.62 li
460.85 563.62 li
437.05 563.62 li
411.75 563.62 li
384.97 563.62 li
356.7 563.62 li
@
504 564.48 mo
504 593.03 li
504 623.62 li
504 656.25 li
504 690.92 li
504 727.63 li
504 766.37 li
@
504 766.48 mo
483.31 766.48 li
461.13 766.48 li
437.48 766.48 li
412.35 766.48 li
385.75 766.48 li
357.66 766.48 li
@
448.74 657.04 mo
423.27 657.04 li
395.97 657.04 li
366.86 657.04 li
335.92 657.04 li
303.17 657.04 li
268.6 657.04 li
@
448.02 715.36 mo
422.65 715.36 li
395.46 715.36 li
366.46 715.36 li
335.65 715.36 li
303.03 715.36 li
268.6 715.36 li
@
354.06 657.04 mo
354.06 655.65 355.19 654.52 356.58 654.52 cv
357.97 654.52 359.1 655.65 359.1 657.04 cv
359.1 657.04 li
359.1 658.43 357.97 659.56 356.58 659.56 cv
355.19 659.56 354.06 658.43 354.06 657.04 cv
cp
ef
.24 lw
354.06 657.04 mo
354.06 655.65 355.19 654.52 356.58 654.52 cv
357.97 654.52 359.1 655.65 359.1 657.04 cv
359.1 657.04 li
359.1 658.43 357.97 659.56 356.58 659.56 cv
355.19 659.56 354.06 658.43 354.06 657.04 cv
cp
@
354.42 715 mo
354.42 713.61 355.55 712.48 356.94 712.48 cv
358.33 712.48 359.46 713.61 359.46 715 cv
359.46 715 li
359.46 716.39 358.33 717.52 356.94 717.52 cv
355.55 717.52 354.42 716.39 354.42 715 cv
cp
ef
354.42 715 mo
354.42 713.61 355.55 712.48 356.94 712.48 cv
358.33 712.48 359.46 713.61 359.46 715 cv
359.46 715 li
359.46 716.39 358.33 717.52 356.94 717.52 cv
355.55 717.52 354.42 716.39 354.42 715 cv
cp
@
1.5 lw
317.34 739.12 mo
309.7 739.12 li
301.25 739.12 li
292 739.12 li
281.94 739.12 li
@
313.32 735.1 mo
317.34 739.12 li
313.32 743.14 li
@
403.32 552.1 mo
392.59 562.83 li
382.2 573.22 li
@
284.88 623.38 mo
340.68 623.38 li
340.68 592.78 li
284.88 592.78 li
cp
.783689 .786528 .793894 rgb
ef
284.88 623.38 mo
340.68 623.38 li
340.68 592.78 li
284.88 592.78 li
cp
.136538 .123054 .126659 rgb
@
285.47 603.22 mo
293.65 606.42 li
@
285.47 611.22 mo
293.45 606.34 li
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
307.51 611.78 mo
(\000\034)sh
315.296 611.78 mo
(\000\033)sh
323.082 611.78 mo
(\000\023)sh
330.868 611.78 mo
(\000\023)sh
338.654 611.78 mo
(\000\003)sh
342.54 611.78 mo
(\000E)sh
350.326 611.78 mo
(\000L)sh
353.436 611.78 mo
(\000W)sh
357.326 611.78 mo
(\000\003)sh
361.216 611.78 mo
(\0005)sh
371.326 611.78 mo
(\000H)sh
379.112 611.78 mo
(\000J)sh
386.898 611.78 mo
(\000L)sh
390.008 611.78 mo
(\000V)sh
397.008 611.78 mo
(\000W)sh
400.898 611.78 mo
(\000H)sh
408.684 611.78 mo
(\000U)sh
331.47 576.16 mo
290.61 576.16 li
273.6 552.1 li
348.48 552.1 li
331.47 576.16 li
cp
.783689 .786528 .793894 rgb
ef
.136538 .123054 .126659 rgb
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
297.75 569.73 mo
(\0000)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
297.75 569.73 mo
(\0000) false chp
.0055555 lw
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
309.419 569.73 mo
(\0008)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
309.419 569.73 mo
(\0008) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
319.536 569.73 mo
(\000;)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
319.536 569.73 mo
(\000;) false chp
@
1.5 lw
282.1 564.13 mo
274.5 564.13 li
265.84 564.13 li
256.14 564.13 li
@
278.08 560.11 mo
282.1 564.13 li
278.08 568.15 li
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
358.93 558.5 mo
(\000\034)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
358.93 558.5 mo
(\000\034) false chp
.0055555 lw
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
366.723 558.5 mo
(\000\033)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
366.723 558.5 mo
(\000\033) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
374.515 558.5 mo
(\000\023)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
374.515 558.5 mo
(\000\023) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
382.308 558.5 mo
(\000\023)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
382.308 558.5 mo
(\000\023) false chp
@
gsave
242.43 591.7 mo
273.724 591.7 li
273.724 555.699 li
242.43 555.699 li
cp
clp
/WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [16.0595 0 0 -16.0648 0 0 ]msf
244.227 579.607 mo
(\007O)sh
251.615 579.607 mo
(\007A)sh
259.645 579.607 mo
(\007H)sh
%ADOBeginSubsetFont: WDZEMV+Cambria#20Math-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMV+Cambria#20Math-KSCms-UHC-H 1 GetGlyphDirectory
884 <001C60D8A8C9B7917E850769C7DA5ED9DE76CC5C828D99B70F78AFB0844
A581D94D46BC958355704AD1E0AA64BC7E5D1A651807459E5709BCF584893275
2DE6696096C08A1C99CD6B09F1B7AD5AA99149859C21CD8E6C267E73A4F87D3B
786FF87D1542304DA09DB17F4FAE27026018DD2B42B51B0A5FB4DD6C355F0C38
81A8E15E2B1FF65A6BFAF599826DC82DF5806E599BF4A45F57193D4B113F0A42
416365225AE62C55DAB11DEBC647C3E54C3027B734D58B5EDAEB0F6435BEF4E6
5FD7055B19BE26F65> |
!
end
end end
%ADOEndSubsetFont
/WDZEMV+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [11.5499 0 0 -11.5538 0 0 ]msf
264.545 582.851 mo
(\003t)sh
WDZEMW+Calibri*1 [16.0595 0 0 -16.0648 0 0 ]msf
271.916 579.607 mo
( )sh
grestore
gsave
252.18 753.7 mo
283.474 753.7 li
283.474 717.699 li
252.18 717.699 li
cp
clp
/WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [16.0595 0 0 -16.0648 0 0 ]msf
253.977 741.607 mo
(\007O)sh
261.365 741.607 mo
(\007A)sh
269.395 741.607 mo
(\007H)sh
%ADOBeginSubsetFont: WDZEMV+Cambria#20Math-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMV+Cambria#20Math-KSCms-UHC-H 1 GetGlyphDirectory
885 <001C60D8A8C9B7917E8528B497DB733C0C3B4AA85F7C17FE50E20B99984
73F952415FF2FE6B06DADF86768AE87E77D492960991C6C92168942FE024E19C
1291ADA8A229D019EA2576B9DBBACCA5773552985567A8C92EF350AE32B2358C
D35DC7B3F99DB1C7B057034C6B4787410D1F7227A4225B870A4D4FA9F499C358
F4D16A9DABCB23EF22559225CC6E4434A929117B48779F5A84DBAA2663923DF4
10BBA9E5B6EC4161A4A45F0181706F0F1A2451145487A2E7DA7FF62D111CBCC3
97580E5559F485F9DEAB3C973DA1551AEC5BCC7B3904344B0B4C81B40CB2215B
E500F4D8E5765C19FEEF73648C5B794B9> |
!
end
end end
%ADOEndSubsetFont
/WDZEMV+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [11.5499 0 0 -11.5538 0 0 ]msf
274.295 744.851 mo
(\003u)sh
WDZEMW+Calibri*1 [16.0595 0 0 -16.0648 0 0 ]msf
281.666 741.607 mo
( )sh
grestore
3 lw
311.04 576.16 mo
311.04 580.15 li
311.04 584.68 li
311.04 589.77 li
@
316.56 584.25 mo
311.04 589.77 li
305.52 584.25 li
@
356.52 625.18 mo
356.52 634.13 li
356.52 644.03 li
356.52 654.87 li
356.52 666.65 li
@
353.88 639.22 mo
353.88 637.83 355.01 636.7 356.4 636.7 cv
357.79 636.7 358.92 637.83 358.92 639.22 cv
358.92 639.22 li
358.92 640.61 357.79 641.74 356.4 641.74 cv
355.01 641.74 353.88 640.61 353.88 639.22 cv
cp
ef
.24 lw
353.88 639.22 mo
353.88 637.83 355.01 636.7 356.4 636.7 cv
357.79 636.7 358.92 637.83 358.92 639.22 cv
358.92 639.22 li
358.92 640.61 357.79 641.74 356.4 641.74 cv
355.01 641.74 353.88 640.61 353.88 639.22 cv
cp
@
3 lw
214.56 764.5 mo
232.11 764.5 li
251.16 764.5 li
271.69 764.5 li
293.72 764.5 li
317.25 764.5 li
@
214.56 639.22 mo
214.56 660.54 li
214.56 683.67 li
214.56 708.62 li
214.56 735.38 li
214.56 763.96 li
@
214.56 638.86 mo
234.62 638.86 li
256.11 638.86 li
279.03 638.86 li
303.39 638.86 li
329.18 638.86 li
356.4 638.86 li
@
319.86 151.43 mo
400.14 151.43 li
402.63 151.43 404.64 149.42 404.64 146.93 cv
404.64 146.93 li
404.64 115.39 li
404.64 112.91 402.63 110.89 400.14 110.89 cv
319.86 110.89 li
317.37 110.89 315.36 112.91 315.36 115.39 cv
315.36 146.93 li
315.36 149.42 317.37 151.43 319.86 151.43 cv
cp
.783689 .786528 .793894 rgb
ef
.136538 .123054 .126659 rgb
%ADOBeginSubsetFont: WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H 1 GetGlyphDirectory
51 <001C60D8A8C9B64EDFDBBA3672BAA70E1E2B2B4E86909B575C1E582D12A2
7718A957C86F16958DE8D709673B3939F8B1E2EC3F3F81D7F0D6371C2B6B99B0
BDEEDCBE1294054B5851FF52AC9B2165F9338B6B87C0040099649EFA04245590
CA635B9EDD6289E99A> |
!
end
end end
%ADOEndSubsetFont
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
338.32 136.01 mo
(\0003)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
338.32 136.01 mo
(\0003) false chp
.0055555 lw
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
347.665 136.01 mo
(\0005)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
347.665 136.01 mo
(\0005) false chp
@
%ADOBeginSubsetFont: WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H 1 GetGlyphDirectory
49 <001C60D8A8C9B6079F6CADFBB7356C69E89BAEE6F13F7EC7AA943FCD0254
4CEF64387187D1B305F134A4F50415C0E4> |
!
end
end end
%ADOEndSubsetFont
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
357.782 136.01 mo
(\0001)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
357.782 136.01 mo
(\0001) false chp
@
%ADOBeginSubsetFont: WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H 1 GetGlyphDirectory
42 <001C60D8A8C9B6FF86FB9B1294AAE35DCF0C4D70DE880783E22150743067
6C6AB813AE08EE3ADFF13340162E36938693CD5A175E1564A610647588B211D3
2CA17323C6B71FEA352EC31DB99B827F20A64F683507CBB02C0D83112CCF6C04
9D985E974EDE56FDEB5544C52C4E89D733CC321296374719010E9AD81C746A46
57C33CC305F4B7FE118B08F0CAF2D6844A22> |
!
end
end end
%ADOEndSubsetFont
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
367.898 136.01 mo
(\000*)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
367.898 136.01 mo
(\000*) false chp
@
216.99 124.9 mo
297.27 124.9 li
299.76 124.9 301.77 122.89 301.77 120.4 cv
301.77 120.4 li
301.77 88.86 li
301.77 86.38 299.76 84.36 297.27 84.36 cv
216.99 84.36 li
214.51 84.36 212.49 86.38 212.49 88.86 cv
212.49 120.4 li
212.49 122.89 214.51 124.9 216.99 124.9 cv
cp
.783689 .786528 .793894 rgb
ef
gsave
213.3 120.36 mo
303.843 120.36 li
303.843 84.3597 li
213.3 84.3597 li
cp
clp
.136538 .123054 .126659 rgb
%ADOBeginSubsetFont: WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMR+Cambria#20Math-KSCms-UHC-H 3 GetGlyphDirectory
2320 <001C60D8A8C9B61E13697859B6E6B3E8BE490DA76E187400AF6ECE5716
ED48F00BF3C18341E8E33B9672E924E8B63E5D299B035695548C907438532AE9
A6F607AED39FF0DD142D42537F679F95601836EDC6C9DF7D1D58C07EDCD5CF85
E90F58515B45E12F70D5BAE543D4621EB31374320CD18D74EAA42DCCD422E1A7
1E6B596E693E9F352654D009519E4247D98955ADDC59AB2C7B39BE32AD10FEE8
846290E3118B784D0828DFFDE2441F61AF2FBA30444A6ACCCFDD36544DAEBD0F
9662E28BC8E77CFCEE256D5457787BD5BA34F4FCB92D7BA2201B1766B20143C6
874FC81F71049B93F7194541E2163884535364F9400D32023B9C819358FD6C02
5C214D0970B3D33C669D> |
2242 <001C60D8A8C9B6655307225D7F7A4F7C7652111F40CF201936113B7DF1
2B97B8C778312916503FA6ED4E295DA4504A3FB0FFD2B0369B06D60C4D92B923
F6B45502C4DC637388870CB3524A7D58AF3405AECA01DE1EFA71358694B4FF87
5E3B080EF4052A861DA1D72AEBB30943B0D6CB091A7D87AE8BDC96A2591F465F
286E7FF30D60E142355E2E1BE926B1815FF7E75B7F9DD04E51EDE92E97E1C7D6
6454F318BFCA4A426C6C46ADD61A49D495FD7F1DF6214B3AE999B6A6B3A88321
EBB0238B13399797283E25> |
1668 <001C60D8A8C9B850A9C8B7665F6204D51B4579A210C8493C875E670835
496854B5CAC4A8BD7F882C3E2BD67B2E5721DC2D33F3BCB3F76808A3AC12DFA8
E7EC75EE448FC27165F7> |
!
end
end end
%ADOEndSubsetFont
/WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [16.1386 0 0 -16.0872 0 0 ]msf
239.778 108.299 mo
(\011\020)sh
/WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [11.6029 0 0 -11.5659 0 0 ]msf
251.723 111.547 mo
(\010\302)sh
%ADOBeginSubsetFont: WDZEMV+Cambria#20Math-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMV+Cambria#20Math-KSCms-UHC-H 2 GetGlyphDirectory
4666 <001C60D8A8C9B71C16F31928ABEFFFF017561191015F2898C46D07A640
C9AAA59E42A52B1A58A0A78B02C4647FB5FBB6648C88F1A7AF596C0453B90691
5DDC60C338C117F633ECA49DCF0695E4CFA67F27CD> |
4667 <001C60D8A8C9B71C16F33ECE77940D4C90A0063C89C132BEE2315FE926
5F98F94C0E34FD7F7D2CFD15764F56978C4153211C67FC16E2AACA7B72AC6514
6EDBF9108ABB23E4CFEAE0A64A6575840A029C95> |
!
end
end end
%ADOEndSubsetFont
/WDZEMV+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [16.1386 0 0 -16.0872 0 0 ]msf
259.588 108.299 mo
(\022:)sh
/WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [16.1386 0 0 -16.0872 0 0 ]msf
266.251 108.299 mo
(\006\204)sh
/WDZEMV+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [16.1386 0 0 -16.0872 0 0 ]msf
270.754 108.299 mo
(\022;)sh
WDZEMS+Calibri,Bold*1 [16.1386 0 0 -16.0872 0 0 ]msf
277.417 108.299 mo
( )sh
grestore
218.03 184.55 mo
298.31 184.55 li
300.79 184.55 302.81 182.54 302.81 180.05 cv
302.81 180.05 li
302.81 148.51 li
302.81 146.03 300.79 144.01 298.31 144.01 cv
218.03 144.01 li
215.54 144.01 213.53 146.03 213.53 148.51 cv
213.53 180.05 li
213.53 182.54 215.54 184.55 218.03 184.55 cv
cp
ef
.136538 .123054 .126659 rgb
%ADOBeginSubsetFont: WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H 1 GetGlyphDirectory
41 <001C60D8A8C9B7D8BE1948990CF571A21AEA7B6BB4E4E297492DC22C629A
8004922C7CAC5C5214D973> |
!
end
end end
%ADOEndSubsetFont
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
243.24 169.24 mo
(\000\))sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
243.24 169.24 mo
(\000\)) false chp
@
%ADOBeginSubsetFont: WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H 1 GetGlyphDirectory
44 <001C60D8A8C9B854D0F47C178C5569FC8EF8C8E8DB98C5> |
!
end
end end
%ADOEndSubsetFont
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
251.799 169.24 mo
(\000,)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
251.799 169.24 mo
(\000,) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
255.695 169.24 mo
(\000\))sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
255.695 169.24 mo
(\000\)) false chp
@
%ADOBeginSubsetFont: WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H 1 GetGlyphDirectory
50 <001C60D8A8C9B6FF86F5CC378AB150D65C09AAE3CA035559F6BA8BEB60FA
36BDC9DE906E8F73C64F4E59AE33543786D52509C9F061234BD180510D561806
402B91392F020DB4641720F0A6BCAF8833E26686B9333CC26744855782AE39B8
699A46DA1E8C1B48C3CD12F753E4194C05317886626FA722268832D087FDE45E
472353DA39AF3E82ECDC> |
!
end
end end
%ADOEndSubsetFont
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
264.254 169.24 mo
(\0002)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
264.254 169.24 mo
(\0002) false chp
@
1.5 lw
223.2 688.9 mo
212.47 699.63 li
202.08 710.02 li
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
178.81 696.49 mo
(\000\034)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
178.81 696.49 mo
(\000\034) false chp
.0055555 lw
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
186.603 696.49 mo
(\000\033)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
186.603 696.49 mo
(\000\033) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
194.395 696.49 mo
(\000\023)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
194.395 696.49 mo
(\000\023) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
202.188 696.49 mo
(\000\023)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
202.188 696.49 mo
(\000\023) false chp
@
1.5 lw
322.56 322.15 mo
311.83 332.88 li
301.44 343.27 li
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
362.22 184.22 mo
(\000\024)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
362.22 184.22 mo
(\000\024) false chp
.0055555 lw
@
%ADOBeginSubsetFont: WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H 1 GetGlyphDirectory
22 <001C60D8A8C9B7EF32247F6B858C7AB8ED31AC3C91BDCFFD0F649C64A107
C2CFCC4CFFD6EFC62BA1EAA132AA10C674DB0A2DAD04F4AD0644F0E97BAD08B0
B181A381FE2CF233462332CD27572DBAA0E40FAF24EE9EC91050C9E100A5486D
07A8398164B0BD27417AF6071FA88679BBC98F9A1EDFC4A206D4CBB9864B84A4
2004B7E7C3605F743D262B379EF410AE7D639E3A139A9DEE04E635CDD06CEB9F
D4AAEBF91FFC7CCC88676C9DDDE8226FB3CF567F520BF5A666ABAF9C7C68A820
30E7A082B61EF9E0EC44EC0D6B83A475A4> |
!
end
end end
%ADOEndSubsetFont
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
370.013 184.22 mo
(\000\026)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
370.013 184.22 mo
(\000\026) false chp
@
1.5 lw
263.52 184.55 mo
256.57 191.5 li
249.84 198.23 li
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
259.39 195.27 mo
(\000\024)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
259.39 195.27 mo
(\000\024) false chp
.0055555 lw
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
267.183 195.27 mo
(\000\026)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
267.183 195.27 mo
(\000\026) false chp
@
270.9 314.95 mo
351.18 314.95 li
353.67 314.95 355.68 312.93 355.68 310.45 cv
355.68 310.45 li
355.68 278.91 li
355.68 276.42 353.67 274.41 351.18 274.41 cv
270.9 274.41 li
268.41 274.41 266.4 276.42 266.4 278.91 cv
266.4 310.45 li
266.4 312.93 268.41 314.95 270.9 314.95 cv
cp
.783689 .786528 .793894 rgb
ef
.136538 .123054 .126659 rgb
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
297.92 299.53 mo
(\000')sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
297.92 299.53 mo
(\000') false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
308.037 299.53 mo
(\000,)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
308.037 299.53 mo
(\000,) false chp
@
%ADOBeginSubsetFont: WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H 1 GetGlyphDirectory
57 <001C60D8A8C9B64EDFFBB24F00640847D00152F8EF1EBDD1C14F3741FCDE
60433E32772836F67654EBD5FAE09C68F3186E14FA33C2A3CCF4> |
!
end
end end
%ADOEndSubsetFont
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
311.933 299.53 mo
(\0009)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
311.933 299.53 mo
(\0009) false chp
@
3 lw
359.9 332.95 mo
342.96 332.95 li
324.58 332.95 li
304.76 332.95 li
283.49 332.95 li
260.78 332.95 li
@
360 333.04 mo
360 341.94 li
360 352.07 li
360 363.43 li
@
365.52 357.91 mo
360 363.43 li
354.48 357.91 li
@
260.64 332.95 mo
260.64 341.85 li
260.64 351.98 li
260.64 363.33 li
@
266.16 357.81 mo
260.64 363.33 li
255.12 357.81 li
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
306.19 347.73 mo
(\000\024)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
306.19 347.73 mo
(\000\024) false chp
.0055555 lw
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
313.983 347.73 mo
(\000\026)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 4.66617 -13.9997 0 0 ]msf
313.983 347.73 mo
(\000\026) false chp
@
1.5 lw
266.4 242.95 mo
259.77 242.95 li
252.22 242.95 li
243.76 242.95 li
@
262.38 238.93 mo
266.4 242.95 li
262.38 246.97 li
@
3 lw
257.9 206.95 mo
264.04 206.95 li
271.03 206.95 li
278.86 206.95 li
@
279 207.09 mo
279 214.08 li
279 222.03 li
279 230.95 li
@
305.46 206.23 mo
317.1 206.23 li
329.96 206.23 li
344.04 206.23 li
359.35 206.23 li
@
305.28 206.95 mo
305.28 213.94 li
305.28 221.89 li
305.28 230.8 li
@
1.5 lw
370.8 167.35 mo
360.07 178.08 li
349.68 188.47 li
@
gsave
208.8 257.35 mo
240.094 257.35 li
240.094 221.349 li
208.8 221.349 li
cp
clp
/WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [16.0595 0 0 -16.0648 0 0 ]msf
210.778 245.257 mo
(\007O)sh
218.166 245.257 mo
(\007A)sh
226.196 245.257 mo
(\007H)sh
%ADOBeginSubsetFont: WDZEMV+Cambria#20Math-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMV+Cambria#20Math-KSCms-UHC-H 1 GetGlyphDirectory
883 <001C60D8A8C9B7917E85D3D67655686D266F095346DBF1C975D4DD04AD2
3C3980FBB0261E5784F63E76EA1E91CA77E23B7CE6FB429D9654A77DB1B7E073
F7F97A6EE98F89B7633A4FAAC1D0A4E0F0F74578F05B7CE4F72AB53AD20DFEFA
E5CCD3471DD6B578F864AC5710AFAA7CBA4BC3D68A0ED7E5B8F367698371E430
4B19B62C47DCC6202> |
!
end
end end
%ADOEndSubsetFont
/WDZEMV+Cambria#20Math-KSCms-UHC-H-Identity-H findfont [11.5499 0 0 -11.5538 0 0 ]msf
230.735 248.501 mo
(\003s)sh
WDZEMW+Calibri*1 [16.0595 0 0 -16.0648 0 0 ]msf
238.107 245.257 mo
( )sh
grestore
306.79 254.98 mo
275.19 254.98 li
259.39 230.92 li
322.59 230.92 li
306.79 254.98 li
cp
.783689 .786528 .793894 rgb
ef
.136538 .123054 .126659 rgb
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
277.35 248.55 mo
(\0000)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
277.35 248.55 mo
(\0000) false chp
.0055555 lw
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
289.019 248.55 mo
(\0008)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
289.019 248.55 mo
(\0008) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
299.136 248.55 mo
(\000;)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
299.136 248.55 mo
(\000;) false chp
@
%ADOBeginSubsetFont: WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H 1 GetGlyphDirectory
24 <001C60D8A8C9B7EF322B4C54F62CDCA235E932220571F850FEE7BE86DF3A
50818690038AE831E1464299A576C7E99E7AB14D2F752B9635176DC4ACB1F446
2C9065A5429FA91B1F3BA31FA7D85891F30652EFA93A88486176310B67D09746
728FBF7E61B541DB4E9A4F711819BD06FDB73DA1CB6C14136A0BCA0C8F749235
FBDAD477D057> |
!
end
end end
%ADOEndSubsetFont
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
338.59 245.3 mo
(\000\030)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
338.59 245.3 mo
(\000\030) false chp
@
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
346.383 245.3 mo
(\000\023)sh
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H findfont [13.9997 0 0 -13.9997 0 0 ]msf
346.383 245.3 mo
(\000\023) false chp
@
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/WDZEMW+Calibri*1 uf
/WDZEMW+Calibri uf
/MZQAAA+Calibri uf
/WDZEMV+Cambria#20Math-KSCms-UHC-H-Identity-H uf
/WDZEMV+Cambria#20Math-KSCms-UHC-H /CIDFont ur
/WDZEMT+Calibri,BoldItalic*1 uf
/WDZEMT+Calibri,BoldItalic uf
/GFNBAA+Calibri,BoldItalic uf
/WDZEMS+Calibri,Bold*1 uf
/WDZEMS+Calibri,Bold uf
/QJJAAA+Calibri,Bold uf
/WDZEMU+TIMES#20NEW#20ROMAN,Bold*1 uf
/WDZEMU+TIMES#20NEW#20ROMAN,Bold uf
/HJCBAA+TIMES#20NEW#20ROMAN,Bold uf
/WDZEMR+Cambria#20Math-KSCms-UHC-H-Identity-H uf
/WDZEMR+Cambria#20Math-KSCms-UHC-H /CIDFont ur
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H-Identity-H uf
/WDZEMQ+ARIAL#20UNICODE#20MS-KSCms-UHC-H /CIDFont ur
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
